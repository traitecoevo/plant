// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/plant.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Leaf__ctor
plant::Leaf Leaf__ctor(double vcmax_25, double c, double b, double psi_crit, double epsilon_leaf, double beta1, double beta2, double jmax_25, double hk_s_, double a, double curv_fact_elec_trans, double curv_fact_colim, double B_rs1, double B_lf2, double B_lf3, double B_lf5);
RcppExport SEXP _plant_Leaf__ctor(SEXP vcmax_25SEXP, SEXP cSEXP, SEXP bSEXP, SEXP psi_critSEXP, SEXP epsilon_leafSEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP jmax_25SEXP, SEXP hk_s_SEXP, SEXP aSEXP, SEXP curv_fact_elec_transSEXP, SEXP curv_fact_colimSEXP, SEXP B_rs1SEXP, SEXP B_lf2SEXP, SEXP B_lf3SEXP, SEXP B_lf5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type vcmax_25(vcmax_25SEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type psi_crit(psi_critSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon_leaf(epsilon_leafSEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< double >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< double >::type jmax_25(jmax_25SEXP);
    Rcpp::traits::input_parameter< double >::type hk_s_(hk_s_SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type curv_fact_elec_trans(curv_fact_elec_transSEXP);
    Rcpp::traits::input_parameter< double >::type curv_fact_colim(curv_fact_colimSEXP);
    Rcpp::traits::input_parameter< double >::type B_rs1(B_rs1SEXP);
    Rcpp::traits::input_parameter< double >::type B_lf2(B_lf2SEXP);
    Rcpp::traits::input_parameter< double >::type B_lf3(B_lf3SEXP);
    Rcpp::traits::input_parameter< double >::type B_lf5(B_lf5SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__ctor(vcmax_25, c, b, psi_crit, epsilon_leaf, beta1, beta2, jmax_25, hk_s_, a, curv_fact_elec_trans, curv_fact_colim, B_rs1, B_lf2, B_lf3, B_lf5));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__initialize_integrator
void Leaf__initialize_integrator(plant::RcppR6::RcppR6<plant::Leaf> obj_, int integration_rule, double integration_tol);
RcppExport SEXP _plant_Leaf__initialize_integrator(SEXP obj_SEXP, SEXP integration_ruleSEXP, SEXP integration_tolSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type integration_rule(integration_ruleSEXP);
    Rcpp::traits::input_parameter< double >::type integration_tol(integration_tolSEXP);
    Leaf__initialize_integrator(obj_, integration_rule, integration_tol);
    return R_NilValue;
END_RCPP
}
// Leaf__set_physiology
void Leaf__set_physiology(plant::RcppR6::RcppR6<plant::Leaf> obj_, double rho, double a_bio, double PPFD, double psi_soil, double leaf_specific_conductance_max, double atm_vpd, double ca, double sapwood_volume_per_leaf_area, double leaf_temp, double atm_o2_kpa, double atm_kpa);
RcppExport SEXP _plant_Leaf__set_physiology(SEXP obj_SEXP, SEXP rhoSEXP, SEXP a_bioSEXP, SEXP PPFDSEXP, SEXP psi_soilSEXP, SEXP leaf_specific_conductance_maxSEXP, SEXP atm_vpdSEXP, SEXP caSEXP, SEXP sapwood_volume_per_leaf_areaSEXP, SEXP leaf_tempSEXP, SEXP atm_o2_kpaSEXP, SEXP atm_kpaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type a_bio(a_bioSEXP);
    Rcpp::traits::input_parameter< double >::type PPFD(PPFDSEXP);
    Rcpp::traits::input_parameter< double >::type psi_soil(psi_soilSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_specific_conductance_max(leaf_specific_conductance_maxSEXP);
    Rcpp::traits::input_parameter< double >::type atm_vpd(atm_vpdSEXP);
    Rcpp::traits::input_parameter< double >::type ca(caSEXP);
    Rcpp::traits::input_parameter< double >::type sapwood_volume_per_leaf_area(sapwood_volume_per_leaf_areaSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_temp(leaf_tempSEXP);
    Rcpp::traits::input_parameter< double >::type atm_o2_kpa(atm_o2_kpaSEXP);
    Rcpp::traits::input_parameter< double >::type atm_kpa(atm_kpaSEXP);
    Leaf__set_physiology(obj_, rho, a_bio, PPFD, psi_soil, leaf_specific_conductance_max, atm_vpd, ca, sapwood_volume_per_leaf_area, leaf_temp, atm_o2_kpa, atm_kpa);
    return R_NilValue;
END_RCPP
}
// Leaf__proportion_of_conductivity
double Leaf__proportion_of_conductivity(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi);
RcppExport SEXP _plant_Leaf__proportion_of_conductivity(SEXP obj_SEXP, SEXP psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi(psiSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__proportion_of_conductivity(obj_, psi));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__arrh_curve
double Leaf__arrh_curve(plant::RcppR6::RcppR6<plant::Leaf> obj_, double Ea, double ref_value, double leaf_temp);
RcppExport SEXP _plant_Leaf__arrh_curve(SEXP obj_SEXP, SEXP EaSEXP, SEXP ref_valueSEXP, SEXP leaf_tempSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type Ea(EaSEXP);
    Rcpp::traits::input_parameter< double >::type ref_value(ref_valueSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_temp(leaf_tempSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__arrh_curve(obj_, Ea, ref_value, leaf_temp));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__peak_arrh_curve
double Leaf__peak_arrh_curve(plant::RcppR6::RcppR6<plant::Leaf> obj_, double Ea, double ref_value, double leaf_temp, double H_d, double d_S);
RcppExport SEXP _plant_Leaf__peak_arrh_curve(SEXP obj_SEXP, SEXP EaSEXP, SEXP ref_valueSEXP, SEXP leaf_tempSEXP, SEXP H_dSEXP, SEXP d_SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type Ea(EaSEXP);
    Rcpp::traits::input_parameter< double >::type ref_value(ref_valueSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_temp(leaf_tempSEXP);
    Rcpp::traits::input_parameter< double >::type H_d(H_dSEXP);
    Rcpp::traits::input_parameter< double >::type d_S(d_SSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__peak_arrh_curve(obj_, Ea, ref_value, leaf_temp, H_d, d_S));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__transpiration
double Leaf__transpiration(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__transpiration(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__transpiration(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__transpiration_full_integration
double Leaf__transpiration_full_integration(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__transpiration_full_integration(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__transpiration_full_integration(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__stom_cond_CO2
double Leaf__stom_cond_CO2(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__stom_cond_CO2(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__stom_cond_CO2(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__transpiration_to_psi_stem
double Leaf__transpiration_to_psi_stem(plant::RcppR6::RcppR6<plant::Leaf> obj_, double transpiration_);
RcppExport SEXP _plant_Leaf__transpiration_to_psi_stem(SEXP obj_SEXP, SEXP transpiration_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type transpiration_(transpiration_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__transpiration_to_psi_stem(obj_, transpiration_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_rubisco_limited
double Leaf__assim_rubisco_limited(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__assim_rubisco_limited(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_rubisco_limited(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_electron_limited
double Leaf__assim_electron_limited(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__assim_electron_limited(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_electron_limited(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_colimited
double Leaf__assim_colimited(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__assim_colimited(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_colimited(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_minus_stom_cond_CO2
double Leaf__assim_minus_stom_cond_CO2(plant::RcppR6::RcppR6<plant::Leaf> obj_, double x, double psi_stem);
RcppExport SEXP _plant_Leaf__assim_minus_stom_cond_CO2(SEXP obj_SEXP, SEXP xSEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_minus_stom_cond_CO2(obj_, x, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__electron_transport
double Leaf__electron_transport(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__electron_transport(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__electron_transport(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_colimited_analytical
double Leaf__assim_colimited_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__assim_colimited_analytical(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_colimited_analytical(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__set_leaf_states_rates_from_psi_stem
void Leaf__set_leaf_states_rates_from_psi_stem(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__set_leaf_states_rates_from_psi_stem(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    Leaf__set_leaf_states_rates_from_psi_stem(obj_, psi_stem);
    return R_NilValue;
END_RCPP
}
// Leaf__set_leaf_states_rates_from_psi_stem_analytical
void Leaf__set_leaf_states_rates_from_psi_stem_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__set_leaf_states_rates_from_psi_stem_analytical(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    Leaf__set_leaf_states_rates_from_psi_stem_analytical(obj_, psi_stem);
    return R_NilValue;
END_RCPP
}
// Leaf__psi_stem_to_ci
double Leaf__psi_stem_to_ci(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__psi_stem_to_ci(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__psi_stem_to_ci(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__psi_stem_to_ci_analytical
double Leaf__psi_stem_to_ci_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__psi_stem_to_ci_analytical(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__psi_stem_to_ci_analytical(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__hydraulic_cost_Sperry
double Leaf__hydraulic_cost_Sperry(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__hydraulic_cost_Sperry(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__hydraulic_cost_Sperry(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__hydraulic_cost_Bartlett
double Leaf__hydraulic_cost_Bartlett(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__hydraulic_cost_Bartlett(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__hydraulic_cost_Bartlett(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__hydraulic_cost_TF
double Leaf__hydraulic_cost_TF(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__hydraulic_cost_TF(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__hydraulic_cost_TF(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_psi_stem_Sperry
double Leaf__profit_psi_stem_Sperry(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__profit_psi_stem_Sperry(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_psi_stem_Sperry(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_Sperry_ci
double Leaf__profit_Sperry_ci(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__profit_Sperry_ci(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_Sperry_ci(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_psi_stem_Sperry_analytical
double Leaf__profit_psi_stem_Sperry_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__profit_psi_stem_Sperry_analytical(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_psi_stem_Sperry_analytical(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_Sperry_ci_analytical
double Leaf__profit_Sperry_ci_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_);
RcppExport SEXP _plant_Leaf__profit_Sperry_ci_analytical(SEXP obj_SEXP, SEXP ci_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_(ci_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_Sperry_ci_analytical(obj_, ci_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_psi_stem_Bartlett
double Leaf__profit_psi_stem_Bartlett(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__profit_psi_stem_Bartlett(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_psi_stem_Bartlett(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_psi_stem_TF
double Leaf__profit_psi_stem_TF(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__profit_psi_stem_TF(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_psi_stem_TF(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit_psi_stem_Bartlett_analytical
double Leaf__profit_psi_stem_Bartlett_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__profit_psi_stem_Bartlett_analytical(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit_psi_stem_Bartlett_analytical(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__optimise_psi_stem_Sperry_Newton
void Leaf__optimise_psi_stem_Sperry_Newton(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_guess);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_Sperry_Newton(SEXP obj_SEXP, SEXP psi_guessSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_guess(psi_guessSEXP);
    Leaf__optimise_psi_stem_Sperry_Newton(obj_, psi_guess);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_Sperry_Newton_analytical
void Leaf__optimise_psi_stem_Sperry_Newton_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_guess);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_Sperry_Newton_analytical(SEXP obj_SEXP, SEXP psi_guessSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_guess(psi_guessSEXP);
    Leaf__optimise_psi_stem_Sperry_Newton_analytical(obj_, psi_guess);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_Sperry
void Leaf__optimise_psi_stem_Sperry(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_Sperry(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Leaf__optimise_psi_stem_Sperry(obj_);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_Sperry_analytical
void Leaf__optimise_psi_stem_Sperry_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_Sperry_analytical(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Leaf__optimise_psi_stem_Sperry_analytical(obj_);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_ci_Sperry_Newton
void Leaf__optimise_ci_Sperry_Newton(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_guess);
RcppExport SEXP _plant_Leaf__optimise_ci_Sperry_Newton(SEXP obj_SEXP, SEXP ci_guessSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_guess(ci_guessSEXP);
    Leaf__optimise_ci_Sperry_Newton(obj_, ci_guess);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_ci_Sperry
void Leaf__optimise_ci_Sperry(plant::RcppR6::RcppR6<plant::Leaf> obj_, double max_ci);
RcppExport SEXP _plant_Leaf__optimise_ci_Sperry(SEXP obj_SEXP, SEXP max_ciSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type max_ci(max_ciSEXP);
    Leaf__optimise_ci_Sperry(obj_, max_ci);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_ci_Sperry_analytical
void Leaf__optimise_ci_Sperry_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double max_ci);
RcppExport SEXP _plant_Leaf__optimise_ci_Sperry_analytical(SEXP obj_SEXP, SEXP max_ciSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type max_ci(max_ciSEXP);
    Leaf__optimise_ci_Sperry_analytical(obj_, max_ci);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_ci_Sperry_Newton_analytical
void Leaf__optimise_ci_Sperry_Newton_analytical(plant::RcppR6::RcppR6<plant::Leaf> obj_, double ci_guess);
RcppExport SEXP _plant_Leaf__optimise_ci_Sperry_Newton_analytical(SEXP obj_SEXP, SEXP ci_guessSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type ci_guess(ci_guessSEXP);
    Leaf__optimise_ci_Sperry_Newton_analytical(obj_, ci_guess);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_Bartlett
void Leaf__optimise_psi_stem_Bartlett(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_Bartlett(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Leaf__optimise_psi_stem_Bartlett(obj_);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_TF
void Leaf__optimise_psi_stem_TF(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_TF(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Leaf__optimise_psi_stem_TF(obj_);
    return R_NilValue;
END_RCPP
}
// Leaf__optimise_psi_stem_TF_newton
void Leaf__optimise_psi_stem_TF_newton(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_guess);
RcppExport SEXP _plant_Leaf__optimise_psi_stem_TF_newton(SEXP obj_SEXP, SEXP psi_guessSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_guess(psi_guessSEXP);
    Leaf__optimise_psi_stem_TF_newton(obj_, psi_guess);
    return R_NilValue;
END_RCPP
}
// Leaf__calculate_cost_LCT
double Leaf__calculate_cost_LCT(plant::RcppR6::RcppR6<plant::Leaf> obj_, double psi_stem);
RcppExport SEXP _plant_Leaf__calculate_cost_LCT(SEXP obj_SEXP, SEXP psi_stemSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_stem(psi_stemSEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__calculate_cost_LCT(obj_, psi_stem));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__ci___get
double Leaf__ci___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__ci___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__ci___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__ci___set
void Leaf__ci___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__ci___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__ci___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__stom_cond_CO2___get
double Leaf__stom_cond_CO2___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__stom_cond_CO2___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__stom_cond_CO2___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__stom_cond_CO2___set
void Leaf__stom_cond_CO2___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__stom_cond_CO2___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__stom_cond_CO2___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__assim_colimited___get
double Leaf__assim_colimited___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__assim_colimited___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__assim_colimited___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__assim_colimited___set
void Leaf__assim_colimited___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__assim_colimited___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__assim_colimited___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__transpiration___get
double Leaf__transpiration___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__transpiration___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__transpiration___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__transpiration___set
void Leaf__transpiration___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__transpiration___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__transpiration___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__profit___get
double Leaf__profit___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__profit___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__profit___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__profit___set
void Leaf__profit___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__profit___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__profit___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__psi_stem__get
double Leaf__psi_stem__get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__psi_stem__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__psi_stem__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__psi_stem__set
void Leaf__psi_stem__set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__psi_stem__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__psi_stem__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__lambda___get
double Leaf__lambda___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__lambda___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__lambda___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__lambda___set
void Leaf__lambda___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__lambda___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__lambda___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__lambda_analytical___get
double Leaf__lambda_analytical___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__lambda_analytical___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__lambda_analytical___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__lambda_analytical___set
void Leaf__lambda_analytical___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__lambda_analytical___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__lambda_analytical___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__electron_transport___get
double Leaf__electron_transport___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__electron_transport___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__electron_transport___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__electron_transport___set
void Leaf__electron_transport___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__electron_transport___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__electron_transport___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__gamma___get
double Leaf__gamma___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__gamma___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__gamma___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__gamma___set
void Leaf__gamma___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__gamma___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__gamma___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__ko___get
double Leaf__ko___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__ko___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__ko___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__ko___set
void Leaf__ko___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__ko___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__ko___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__kc___get
double Leaf__kc___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__kc___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__kc___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__kc___set
void Leaf__kc___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__kc___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__kc___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__km___get
double Leaf__km___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__km___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__km___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__km___set
void Leaf__km___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__km___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__km___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__R_d___get
double Leaf__R_d___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__R_d___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__R_d___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__R_d___set
void Leaf__R_d___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__R_d___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__R_d___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__leaf_specific_conductance_max___get
double Leaf__leaf_specific_conductance_max___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__leaf_specific_conductance_max___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__leaf_specific_conductance_max___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__leaf_specific_conductance_max___set
void Leaf__leaf_specific_conductance_max___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__leaf_specific_conductance_max___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__leaf_specific_conductance_max___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__vcmax___get
double Leaf__vcmax___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__vcmax___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__vcmax___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__vcmax___set
void Leaf__vcmax___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__vcmax___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__vcmax___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__jmax___get
double Leaf__jmax___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__jmax___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__jmax___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__jmax___set
void Leaf__jmax___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__jmax___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__jmax___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__rho___get
double Leaf__rho___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__rho___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__rho___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__rho___set
void Leaf__rho___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__rho___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__rho___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__a_bio___get
double Leaf__a_bio___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__a_bio___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__a_bio___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__a_bio___set
void Leaf__a_bio___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__a_bio___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__a_bio___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__PPFD___get
double Leaf__PPFD___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__PPFD___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__PPFD___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__PPFD___set
void Leaf__PPFD___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__PPFD___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__PPFD___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__atm_vpd___get
double Leaf__atm_vpd___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__atm_vpd___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__atm_vpd___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__atm_vpd___set
void Leaf__atm_vpd___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__atm_vpd___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__atm_vpd___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__ca___get
double Leaf__ca___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__ca___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__ca___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__ca___set
void Leaf__ca___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__ca___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__ca___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__psi_soil___get
double Leaf__psi_soil___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__psi_soil___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__psi_soil___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__psi_soil___set
void Leaf__psi_soil___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__psi_soil___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__psi_soil___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__leaf_temp___get
double Leaf__leaf_temp___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__leaf_temp___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__leaf_temp___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__leaf_temp___set
void Leaf__leaf_temp___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__leaf_temp___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__leaf_temp___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__atm_o2_kpa___get
double Leaf__atm_o2_kpa___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__atm_o2_kpa___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__atm_o2_kpa___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__atm_o2_kpa___set
void Leaf__atm_o2_kpa___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__atm_o2_kpa___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__atm_o2_kpa___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__atm_kpa___get
double Leaf__atm_kpa___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__atm_kpa___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__atm_kpa___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__atm_kpa___set
void Leaf__atm_kpa___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__atm_kpa___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__atm_kpa___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__hydraulic_cost___get
double Leaf__hydraulic_cost___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__hydraulic_cost___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__hydraulic_cost___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__hydraulic_cost___set
void Leaf__hydraulic_cost___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__hydraulic_cost___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__hydraulic_cost___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__opt_psi_stem___get
double Leaf__opt_psi_stem___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__opt_psi_stem___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__opt_psi_stem___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__opt_psi_stem___set
void Leaf__opt_psi_stem___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__opt_psi_stem___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__opt_psi_stem___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__opt_ci___get
double Leaf__opt_ci___get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__opt_ci___get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__opt_ci___get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__opt_ci___set
void Leaf__opt_ci___set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__opt_ci___set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__opt_ci___set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__count__get
double Leaf__count__get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__count__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__count__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__count__set
void Leaf__count__set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__count__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__count__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Leaf__GSS_count__get
double Leaf__GSS_count__get(plant::RcppR6::RcppR6<plant::Leaf> obj_);
RcppExport SEXP _plant_Leaf__GSS_count__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Leaf__GSS_count__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Leaf__GSS_count__set
void Leaf__GSS_count__set(plant::RcppR6::RcppR6<plant::Leaf> obj_, double value);
RcppExport SEXP _plant_Leaf__GSS_count__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Leaf> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Leaf__GSS_count__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Lorenz__ctor
plant::ode::test::Lorenz Lorenz__ctor(double sigma, double R, double b);
RcppExport SEXP _plant_Lorenz__ctor(SEXP sigmaSEXP, SEXP RSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ctor(sigma, R, b));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_size__get
size_t Lorenz__ode_size__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_state__get
plant::ode::state_type Lorenz__ode_state__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_state__set
void Lorenz__ode_state__set(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Lorenz__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Lorenz__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Lorenz__ode_rates__get
plant::ode::state_type Lorenz__ode_rates__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__pars__get
std::vector<double> Lorenz__pars__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__pars__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__pars__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeR__ctor
plant::ode::test::OdeR OdeR__ctor(Rcpp::Function derivs, Rcpp::Function state, double time);
RcppExport SEXP _plant_OdeR__ctor(SEXP derivsSEXP, SEXP stateSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type derivs(derivsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type state(stateSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeR__ctor(derivs, state, time));
    return rcpp_result_gen;
END_RCPP
}
// OdeR__update_state
void OdeR__update_state(plant::RcppR6::RcppR6<plant::ode::test::OdeR> obj_);
RcppExport SEXP _plant_OdeR__update_state(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::OdeR> >::type obj_(obj_SEXP);
    OdeR__update_state(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__ctor
plant::ode::Runner<plant::ode::test::Lorenz> OdeRunner___Lorenz__ctor(plant::ode::test::Lorenz obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___Lorenz__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::ode::test::Lorenz >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__advance
void OdeRunner___Lorenz__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__advance_fixed
void OdeRunner___Lorenz__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___Lorenz__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___Lorenz__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__step
void OdeRunner___Lorenz__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    OdeRunner___Lorenz__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__step_to
void OdeRunner___Lorenz__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__set_state
void OdeRunner___Lorenz__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__set_state_from_system
void OdeRunner___Lorenz__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    OdeRunner___Lorenz__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__time__get
double OdeRunner___Lorenz__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__state__get
plant::ode::state_type OdeRunner___Lorenz__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__times__get
std::vector<double> OdeRunner___Lorenz__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__object__get
plant::ode::test::Lorenz OdeRunner___Lorenz__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__ctor
plant::ode::Runner<plant::ode::test::OdeR> OdeRunner___OdeR__ctor(plant::ode::test::OdeR obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___OdeR__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::ode::test::OdeR >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__advance
void OdeRunner___OdeR__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__advance_fixed
void OdeRunner___OdeR__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___OdeR__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___OdeR__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__step
void OdeRunner___OdeR__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    OdeRunner___OdeR__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__step_to
void OdeRunner___OdeR__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__set_state
void OdeRunner___OdeR__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__set_state_from_system
void OdeRunner___OdeR__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    OdeRunner___OdeR__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__time__get
double OdeRunner___OdeR__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__state__get
plant::ode::state_type OdeRunner___OdeR__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__times__get
std::vector<double> OdeRunner___OdeR__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__object__get
plant::ode::test::OdeR OdeRunner___OdeR__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > OdeRunner___FF16__ctor(plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___FF16__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__advance
void OdeRunner___FF16__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__advance_fixed
void OdeRunner___FF16__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___FF16__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___FF16__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__step
void OdeRunner___FF16__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__step_to
void OdeRunner___FF16__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__set_state
void OdeRunner___FF16__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___FF16__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__set_state_from_system
void OdeRunner___FF16__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__time__get
double OdeRunner___FF16__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__state__get
plant::ode::state_type OdeRunner___FF16__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__times__get
std::vector<double> OdeRunner___FF16__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__object__get
plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> OdeRunner___FF16__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16w__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > OdeRunner___FF16w__ctor(plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___FF16w__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16w__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16w__advance
void OdeRunner___FF16w__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16w__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16w__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__advance_fixed
void OdeRunner___FF16w__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___FF16w__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___FF16w__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__step
void OdeRunner___FF16w__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16w__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__step_to
void OdeRunner___FF16w__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16w__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16w__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__set_state
void OdeRunner___FF16w__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___FF16w__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16w__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__set_state_from_system
void OdeRunner___FF16w__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16w__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16w__time__get
double OdeRunner___FF16w__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16w__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16w__state__get
plant::ode::state_type OdeRunner___FF16w__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16w__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16w__times__get
std::vector<double> OdeRunner___FF16w__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16w__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16w__object__get
plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> OdeRunner___FF16w__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16w__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16w__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > OdeRunner___FF16r__ctor(plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___FF16r__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__advance
void OdeRunner___FF16r__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__advance_fixed
void OdeRunner___FF16r__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___FF16r__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___FF16r__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__step
void OdeRunner___FF16r__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16r__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__step_to
void OdeRunner___FF16r__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__set_state
void OdeRunner___FF16r__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__set_state_from_system
void OdeRunner___FF16r__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16r__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__time__get
double OdeRunner___FF16r__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__state__get
plant::ode::state_type OdeRunner___FF16r__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__times__get
std::vector<double> OdeRunner___FF16r__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__object__get
plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> OdeRunner___FF16r__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > OdeRunner___K93__ctor(plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___K93__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__advance
void OdeRunner___K93__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___K93__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__advance_fixed
void OdeRunner___K93__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___K93__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___K93__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__step
void OdeRunner___K93__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___K93__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__step_to
void OdeRunner___K93__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___K93__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__set_state
void OdeRunner___K93__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___K93__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__set_state_from_system
void OdeRunner___K93__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___K93__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__time__get
double OdeRunner___K93__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__state__get
plant::ode::state_type OdeRunner___K93__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__times__get
std::vector<double> OdeRunner___K93__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__object__get
plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> OdeRunner___K93__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__ctor
plant::NodeScheduleEvent NodeScheduleEvent__ctor(double introduction, plant::util::index species_index);
RcppExport SEXP _plant_NodeScheduleEvent__ctor(SEXP introductionSEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type introduction(introductionSEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__ctor(introduction, species_index));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__species_index__get
plant::util::index NodeScheduleEvent__species_index__get(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_);
RcppExport SEXP _plant_NodeScheduleEvent__species_index__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__species_index__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__species_index__set
void NodeScheduleEvent__species_index__set(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_, plant::util::index value);
RcppExport SEXP _plant_NodeScheduleEvent__species_index__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type value(valueSEXP);
    NodeScheduleEvent__species_index__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// NodeScheduleEvent__times__get
std::vector<double> NodeScheduleEvent__times__get(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_);
RcppExport SEXP _plant_NodeScheduleEvent__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__time_introduction__get
double NodeScheduleEvent__time_introduction__get(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_);
RcppExport SEXP _plant_NodeScheduleEvent__time_introduction__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__time_introduction__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__time_end__get
double NodeScheduleEvent__time_end__get(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_);
RcppExport SEXP _plant_NodeScheduleEvent__time_end__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__time_end__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeScheduleEvent__species_index_raw__get
size_t NodeScheduleEvent__species_index_raw__get(plant::RcppR6::RcppR6<plant::NodeScheduleEvent> obj_);
RcppExport SEXP _plant_NodeScheduleEvent__species_index_raw__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeScheduleEvent__species_index_raw__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__ctor
plant::NodeSchedule NodeSchedule__ctor(size_t n_species);
RcppExport SEXP _plant_NodeSchedule__ctor(SEXP n_speciesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type n_species(n_speciesSEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__ctor(n_species));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__expand
plant::NodeSchedule NodeSchedule__expand(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, size_t n_extra, std::vector<double> times);
RcppExport SEXP _plant_NodeSchedule__expand(SEXP obj_SEXP, SEXP n_extraSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type n_extra(n_extraSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__expand(obj_, n_extra, times));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__clear_times
void NodeSchedule__clear_times(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, plant::util::index species_index);
RcppExport SEXP _plant_NodeSchedule__clear_times(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    NodeSchedule__clear_times(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__clear_ode_times
void NodeSchedule__clear_ode_times(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__clear_ode_times(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    NodeSchedule__clear_ode_times(obj_);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__set_times
void NodeSchedule__set_times(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, std::vector<double> times, plant::util::index species_index);
RcppExport SEXP _plant_NodeSchedule__set_times(SEXP obj_SEXP, SEXP timesSEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    NodeSchedule__set_times(obj_, times, species_index);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__times
std::vector<double> NodeSchedule__times(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, plant::util::index species_index);
RcppExport SEXP _plant_NodeSchedule__times(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__times(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__reset
void NodeSchedule__reset(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    NodeSchedule__reset(obj_);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__pop
void NodeSchedule__pop(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__pop(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    NodeSchedule__pop(obj_);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__copy
plant::NodeSchedule NodeSchedule__copy(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__copy(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__copy(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__size__get
size_t NodeSchedule__size__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__n_species__get
size_t NodeSchedule__n_species__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__n_species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__n_species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__next_event__get
plant::NodeScheduleEvent NodeSchedule__next_event__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__next_event__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__next_event__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__remaining__get
size_t NodeSchedule__remaining__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__remaining__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__remaining__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__max_time__get
double NodeSchedule__max_time__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__max_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__max_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__max_time__set
void NodeSchedule__max_time__set(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, double value);
RcppExport SEXP _plant_NodeSchedule__max_time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    NodeSchedule__max_time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__ode_times__get
std::vector<double> NodeSchedule__ode_times__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__ode_times__set
void NodeSchedule__ode_times__set(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, std::vector<double> value);
RcppExport SEXP _plant_NodeSchedule__ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    NodeSchedule__ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__use_ode_times__get
bool NodeSchedule__use_ode_times__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__use_ode_times__set
void NodeSchedule__use_ode_times__set(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, bool value);
RcppExport SEXP _plant_NodeSchedule__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    NodeSchedule__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// NodeSchedule__all_times__get
SEXP NodeSchedule__all_times__get(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_);
RcppExport SEXP _plant_NodeSchedule__all_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(NodeSchedule__all_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// NodeSchedule__all_times__set
void NodeSchedule__all_times__set(plant::RcppR6::RcppR6<plant::NodeSchedule> obj_, SEXP value);
RcppExport SEXP _plant_NodeSchedule__all_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::NodeSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type value(valueSEXP);
    NodeSchedule__all_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Control__ctor
SEXP Control__ctor();
RcppExport SEXP _plant_Control__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Control__ctor());
    return rcpp_result_gen;
END_RCPP
}
// OdeControl__ctor
SEXP OdeControl__ctor();
RcppExport SEXP _plant_OdeControl__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OdeControl__ctor());
    return rcpp_result_gen;
END_RCPP
}
// QK__ctor
plant::quadrature::QK QK__ctor(size_t rule);
RcppExport SEXP _plant_QK__ctor(SEXP ruleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type rule(ruleSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__ctor(rule));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate
double QK__integrate(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QK__integrate(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate_vector_x
std::vector<double> QK__integrate_vector_x(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, double a, double b);
RcppExport SEXP _plant_QK__integrate_vector_x(SEXP obj_SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate_vector_x(obj_, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate_vector
double QK__integrate_vector(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, std::vector<double> y, double a, double b);
RcppExport SEXP _plant_QK__integrate_vector(SEXP obj_SEXP, SEXP ySEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate_vector(obj_, y, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area__get
double QK__last_area__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_error__get
double QK__last_error__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area_abs__get
double QK__last_area_abs__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area_abs__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area_abs__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area_asc__get
double QK__last_area_asc__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area_asc__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area_asc__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__ctor
plant::quadrature::QAG QAG__ctor(size_t rule, size_t max_iterations, double atol, double rtol);
RcppExport SEXP _plant_QAG__ctor(SEXP ruleSEXP, SEXP max_iterationsSEXP, SEXP atolSEXP, SEXP rtolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type rule(ruleSEXP);
    Rcpp::traits::input_parameter< size_t >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type atol(atolSEXP);
    Rcpp::traits::input_parameter< double >::type rtol(rtolSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__ctor(rule, max_iterations, atol, rtol));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate
double QAG__integrate(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QAG__integrate(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate_with_intervals
double QAG__integrate_with_intervals(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, SEXP intervals);
RcppExport SEXP _plant_QAG__integrate_with_intervals(SEXP obj_SEXP, SEXP fSEXP, SEXP intervalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< SEXP >::type intervals(intervalsSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate_with_intervals(obj_, f, intervals));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate_with_last_intervals
double QAG__integrate_with_last_intervals(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QAG__integrate_with_last_intervals(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate_with_last_intervals(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_area__get
double QAG__last_area__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_area__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_area__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_error__get
double QAG__last_error__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_iterations__get
size_t QAG__last_iterations__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_iterations__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_iterations__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_intervals__get
plant::quadrature::intervals_type QAG__last_intervals__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_intervals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_intervals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__is_adaptive__get
bool QAG__is_adaptive__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__is_adaptive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__is_adaptive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__ctor
plant::interpolator::Interpolator Interpolator__ctor();
RcppExport SEXP _plant_Interpolator__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Interpolator__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__init
void Interpolator__init(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_, const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_Interpolator__init(SEXP obj_SEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    Interpolator__init(obj_, x, y);
    return R_NilValue;
END_RCPP
}
// Interpolator__eval
std::vector<double> Interpolator__eval(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_, std::vector<double> x);
RcppExport SEXP _plant_Interpolator__eval(SEXP obj_SEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__eval(obj_, x));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__set_extrapolate
void Interpolator__set_extrapolate(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_, bool e);
RcppExport SEXP _plant_Interpolator__set_extrapolate(SEXP obj_SEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type e(eSEXP);
    Interpolator__set_extrapolate(obj_, e);
    return R_NilValue;
END_RCPP
}
// Interpolator__x__get
std::vector<double> Interpolator__x__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__x__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__x__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__y__get
std::vector<double> Interpolator__y__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__y__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__y__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__xy__get
SEXP Interpolator__xy__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__xy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__xy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__size__get
size_t Interpolator__size__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__min__get
double Interpolator__min__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__min__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__min__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__max__get
double Interpolator__max__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ctor
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> Individual___FF16__FF16_Env__ctor(plant::FF16_Strategy s);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__state
double Individual___FF16__FF16_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__rate
double Individual___FF16__FF16_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux
double Individual___FF16__FF16_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__set_state
void Individual___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___FF16__FF16_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__compute_competition
double Individual___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__compute_rates
void Individual___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Individual___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__establishment_probability
double Individual___FF16__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__net_mass_production_dt
double Individual___FF16__FF16_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__reset_mortality
void Individual___FF16__FF16_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Individual___FF16__FF16_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__resource_compensation_point
double Individual___FF16__FF16_Env__resource_compensation_point(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__resource_compensation_point(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__resource_compensation_point(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__strategy__get
plant::FF16_Strategy Individual___FF16__FF16_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__internals__get
plant::Internals Individual___FF16__FF16_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux_size__get
size_t Individual___FF16__FF16_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_size__get
size_t Individual___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_names__get
std::vector<std::string> Individual___FF16__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux_names__get
std::vector<std::string> Individual___FF16__FF16_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_state__get
plant::ode::state_type Individual___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_state__set
void Individual___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Individual___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__mortality_probability__get
double Individual___FF16__FF16_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__strategy_name__get
std::string Individual___FF16__FF16_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__ctor
plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> Individual___FF16w__FF16_Env__ctor(plant::FF16w_Strategy s);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16w_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__state
double Individual___FF16w__FF16_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__rate
double Individual___FF16w__FF16_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__aux
double Individual___FF16w__FF16_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__set_state
void Individual___FF16w__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___FF16w__FF16_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___FF16w__FF16_Env__compute_competition
double Individual___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__compute_rates
void Individual___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Individual___FF16w__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___FF16w__FF16_Env__establishment_probability
double Individual___FF16w__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__net_mass_production_dt
double Individual___FF16w__FF16_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__reset_mortality
void Individual___FF16w__FF16_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Individual___FF16w__FF16_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___FF16w__FF16_Env__resource_compensation_point
double Individual___FF16w__FF16_Env__resource_compensation_point(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__resource_compensation_point(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__resource_compensation_point(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__strategy__get
plant::FF16w_Strategy Individual___FF16w__FF16_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__internals__get
plant::Internals Individual___FF16w__FF16_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__aux_size__get
size_t Individual___FF16w__FF16_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__ode_size__get
size_t Individual___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__ode_names__get
std::vector<std::string> Individual___FF16w__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__aux_names__get
std::vector<std::string> Individual___FF16w__FF16_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__ode_state__get
plant::ode::state_type Individual___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__ode_state__set
void Individual___FF16w__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___FF16w__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type Individual___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__mortality_probability__get
double Individual___FF16w__FF16_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16w__FF16_Env__strategy_name__get
std::string Individual___FF16w__FF16_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16w__FF16_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16w__FF16_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ctor
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> Individual___FF16r__FF16_Env__ctor(plant::FF16r_Strategy s);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__state
double Individual___FF16r__FF16_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__rate
double Individual___FF16r__FF16_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux
double Individual___FF16r__FF16_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__set_state
void Individual___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___FF16r__FF16_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__compute_competition
double Individual___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__compute_rates
void Individual___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Individual___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__establishment_probability
double Individual___FF16r__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__net_mass_production_dt
double Individual___FF16r__FF16_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__reset_mortality
void Individual___FF16r__FF16_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Individual___FF16r__FF16_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__resource_compensation_point
double Individual___FF16r__FF16_Env__resource_compensation_point(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__resource_compensation_point(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__resource_compensation_point(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__strategy__get
plant::FF16r_Strategy Individual___FF16r__FF16_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__internals__get
plant::Internals Individual___FF16r__FF16_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux_size__get
size_t Individual___FF16r__FF16_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_size__get
size_t Individual___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_names__get
std::vector<std::string> Individual___FF16r__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux_names__get
std::vector<std::string> Individual___FF16r__FF16_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Individual___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_state__set
void Individual___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Individual___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__mortality_probability__get
double Individual___FF16r__FF16_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__strategy_name__get
std::string Individual___FF16r__FF16_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ctor
plant::Individual<plant::K93_Strategy,plant::K93_Environment> Individual___K93__K93_Env__ctor(plant::K93_Strategy s);
RcppExport SEXP _plant_Individual___K93__K93_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__state
double Individual___K93__K93_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__rate
double Individual___K93__K93_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux
double Individual___K93__K93_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__set_state
void Individual___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___K93__K93_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__compute_competition
double Individual___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__compute_rates
void Individual___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Individual___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__establishment_probability
double Individual___K93__K93_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__net_mass_production_dt
double Individual___K93__K93_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__reset_mortality
void Individual___K93__K93_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Individual___K93__K93_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__resource_compensation_point
double Individual___K93__K93_Env__resource_compensation_point(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__resource_compensation_point(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__resource_compensation_point(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__strategy__get
plant::K93_Strategy Individual___K93__K93_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__internals__get
plant::Internals Individual___K93__K93_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux_size__get
size_t Individual___K93__K93_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_size__get
size_t Individual___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_names__get
std::vector<std::string> Individual___K93__K93_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux_names__get
std::vector<std::string> Individual___K93__K93_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_state__get
plant::ode::state_type Individual___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_state__set
void Individual___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__ode_rates__get
plant::ode::state_type Individual___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__mortality_probability__get
double Individual___K93__K93_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__strategy_name__get
std::string Individual___K93__K93_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__ctor
plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> IndividualRunner___FF16__FF16_Env__ctor(plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> individual, plant::FF16_Environment environment);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__ctor(SEXP individualSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> >::type individual(individualSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16__FF16_Env__ctor(individual, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__individual__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> IndividualRunner___FF16__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__individual__set
void IndividualRunner___FF16__FF16_Env__individual__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> value);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__individual__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> >::type value(valueSEXP);
    IndividualRunner___FF16__FF16_Env__individual__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// IndividualRunner___FF16w__FF16_Env__ctor
plant::tools::IndividualRunner<plant::FF16w_Strategy,plant::FF16_Environment> IndividualRunner___FF16w__FF16_Env__ctor(plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> individual, plant::FF16_Environment environment);
RcppExport SEXP _plant_IndividualRunner___FF16w__FF16_Env__ctor(SEXP individualSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> >::type individual(individualSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16w__FF16_Env__ctor(individual, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16w__FF16_Env__individual__get
plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> IndividualRunner___FF16w__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___FF16w__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16w__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16w__FF16_Env__individual__set
void IndividualRunner___FF16w__FF16_Env__individual__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> value);
RcppExport SEXP _plant_IndividualRunner___FF16w__FF16_Env__individual__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> >::type value(valueSEXP);
    IndividualRunner___FF16w__FF16_Env__individual__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__ctor
plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> IndividualRunner___FF16r__FF16_Env__ctor(plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> individual, plant::FF16_Environment environment);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__ctor(SEXP individualSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> >::type individual(individualSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16r__FF16_Env__ctor(individual, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__individual__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> IndividualRunner___FF16r__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16r__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__individual__set
void IndividualRunner___FF16r__FF16_Env__individual__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> value);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__individual__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> >::type value(valueSEXP);
    IndividualRunner___FF16r__FF16_Env__individual__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// IndividualRunner___K93__K93_Env__ctor
plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> IndividualRunner___K93__K93_Env__ctor(plant::Individual<plant::K93_Strategy,plant::K93_Environment> individual, plant::K93_Environment environment);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__ctor(SEXP individualSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::K93_Strategy,plant::K93_Environment> >::type individual(individualSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___K93__K93_Env__ctor(individual, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___K93__K93_Env__individual__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> IndividualRunner___K93__K93_Env__individual__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___K93__K93_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___K93__K93_Env__individual__set
void IndividualRunner___K93__K93_Env__individual__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::Individual<plant::K93_Strategy,plant::K93_Environment> value);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__individual__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::K93_Strategy,plant::K93_Environment> >::type value(valueSEXP);
    IndividualRunner___K93__K93_Env__individual__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__ctor
plant::Internals Internals__ctor(size_t s_size, size_t a_size);
RcppExport SEXP _plant_Internals__ctor(SEXP s_sizeSEXP, SEXP a_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type s_size(s_sizeSEXP);
    Rcpp::traits::input_parameter< size_t >::type a_size(a_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__ctor(s_size, a_size));
    return rcpp_result_gen;
END_RCPP
}
// Internals__state
double Internals__state(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__state(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__state(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__rate
double Internals__rate(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__rate(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__rate(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__aux
double Internals__aux(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__aux(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__aux(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__set_aux
void Internals__set_aux(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_aux(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_aux(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__set_state
void Internals__set_state(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_state(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_state(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__set_rate
void Internals__set_rate(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_rate(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_rate(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__resize
void Internals__resize(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t new_size, size_t new_aux_size);
RcppExport SEXP _plant_Internals__resize(SEXP obj_SEXP, SEXP new_sizeSEXP, SEXP new_aux_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type new_size(new_sizeSEXP);
    Rcpp::traits::input_parameter< size_t >::type new_aux_size(new_aux_sizeSEXP);
    Internals__resize(obj_, new_size, new_aux_size);
    return R_NilValue;
END_RCPP
}
// Internals__state_size__get
size_t Internals__state_size__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__state_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__state_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__state_size__set
void Internals__state_size__set(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t value);
RcppExport SEXP _plant_Internals__state_size__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type value(valueSEXP);
    Internals__state_size__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__aux_size__get
size_t Internals__aux_size__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__aux_size__set
void Internals__aux_size__set(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t value);
RcppExport SEXP _plant_Internals__aux_size__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type value(valueSEXP);
    Internals__aux_size__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__states__get
std::vector<double> Internals__states__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__states__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__states__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__states__set
void Internals__states__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__states__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__states__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__rates__get
std::vector<double> Internals__rates__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__rates__set
void Internals__rates__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__rates__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__rates__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__auxs__get
std::vector<double> Internals__auxs__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__auxs__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__auxs__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__auxs__set
void Internals__auxs__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__auxs__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__auxs__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Parameters___FF16__FF16_Env__ctor
SEXP Parameters___FF16__FF16_Env__ctor();
RcppExport SEXP _plant_Parameters___FF16__FF16_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16__FF16_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16__FF16_Env__vdor
SEXP Parameters___FF16__FF16_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___FF16__FF16_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16__FF16_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16w__FF16_Env__ctor
SEXP Parameters___FF16w__FF16_Env__ctor();
RcppExport SEXP _plant_Parameters___FF16w__FF16_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16w__FF16_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16w__FF16_Env__vdor
SEXP Parameters___FF16w__FF16_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___FF16w__FF16_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16w__FF16_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16r__FF16_Env__ctor
SEXP Parameters___FF16r__FF16_Env__ctor();
RcppExport SEXP _plant_Parameters___FF16r__FF16_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16r__FF16_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16r__FF16_Env__vdor
SEXP Parameters___FF16r__FF16_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___FF16r__FF16_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16r__FF16_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Parameters___K93__K93_Env__ctor
SEXP Parameters___K93__K93_Env__ctor();
RcppExport SEXP _plant_Parameters___K93__K93_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___K93__K93_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___K93__K93_Env__vdor
SEXP Parameters___K93__K93_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___K93__K93_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___K93__K93_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__ctor
plant::Node<plant::FF16_Strategy,plant::FF16_Environment> Node___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__compute_competition
double Node___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Node___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__growth_rate_gradient
double Node___FF16__FF16_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Node___FF16__FF16_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__compute_rates
void Node___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival);
RcppExport SEXP _plant_Node___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Node___FF16__FF16_Env__compute_rates(obj_, environment, pr_patch_survival);
    return R_NilValue;
END_RCPP
}
// Node___FF16__FF16_Env__compute_initial_conditions
void Node___FF16__FF16_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Node___FF16__FF16_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Node___FF16__FF16_Env__compute_initial_conditions(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Node___FF16__FF16_Env__individual__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> Node___FF16__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__height__get
double Node___FF16__FF16_Env__height__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__log_density__get
double Node___FF16__FF16_Env__log_density__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__competition_effect__get
double Node___FF16__FF16_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__fecundity__get
double Node___FF16__FF16_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__ode_size__get
size_t Node___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__ode_state__get
plant::ode::state_type Node___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__ode_state__set
void Node___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Node___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Node___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Node___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16__FF16_Env__ode_names__get
std::vector<std::string> Node___FF16__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__ctor
plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> Node___FF16w__FF16_Env__ctor(plant::FF16w_Strategy strategy);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16w_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__compute_competition
double Node___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__growth_rate_gradient
double Node___FF16w__FF16_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__compute_rates
void Node___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Node___FF16w__FF16_Env__compute_rates(obj_, environment, pr_patch_survival);
    return R_NilValue;
END_RCPP
}
// Node___FF16w__FF16_Env__compute_initial_conditions
void Node___FF16w__FF16_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Node___FF16w__FF16_Env__compute_initial_conditions(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Node___FF16w__FF16_Env__individual__get
plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> Node___FF16w__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__height__get
double Node___FF16w__FF16_Env__height__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__log_density__get
double Node___FF16w__FF16_Env__log_density__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__competition_effect__get
double Node___FF16w__FF16_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__fecundity__get
double Node___FF16w__FF16_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__ode_size__get
size_t Node___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__ode_state__get
plant::ode::state_type Node___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__ode_state__set
void Node___FF16w__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Node___FF16w__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Node___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type Node___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16w__FF16_Env__ode_names__get
std::vector<std::string> Node___FF16w__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16w__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16w__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__ctor
plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> Node___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__compute_competition
double Node___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__growth_rate_gradient
double Node___FF16r__FF16_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__compute_rates
void Node___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Node___FF16r__FF16_Env__compute_rates(obj_, environment, pr_patch_survival);
    return R_NilValue;
END_RCPP
}
// Node___FF16r__FF16_Env__compute_initial_conditions
void Node___FF16r__FF16_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Node___FF16r__FF16_Env__compute_initial_conditions(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Node___FF16r__FF16_Env__individual__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> Node___FF16r__FF16_Env__individual__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__height__get
double Node___FF16r__FF16_Env__height__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__log_density__get
double Node___FF16r__FF16_Env__log_density__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__competition_effect__get
double Node___FF16r__FF16_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__fecundity__get
double Node___FF16r__FF16_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__ode_size__get
size_t Node___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Node___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__ode_state__set
void Node___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Node___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Node___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Node___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___FF16r__FF16_Env__ode_names__get
std::vector<std::string> Node___FF16r__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Node___FF16r__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___FF16r__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__ctor
plant::Node<plant::K93_Strategy,plant::K93_Environment> Node___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_Node___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__compute_competition
double Node___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Node___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__growth_rate_gradient
double Node___K93__K93_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Node___K93__K93_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__compute_rates
void Node___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment, double pr_patch_survival);
RcppExport SEXP _plant_Node___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Node___K93__K93_Env__compute_rates(obj_, environment, pr_patch_survival);
    return R_NilValue;
END_RCPP
}
// Node___K93__K93_Env__compute_initial_conditions
void Node___K93__K93_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Node___K93__K93_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Node___K93__K93_Env__compute_initial_conditions(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Node___K93__K93_Env__individual__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> Node___K93__K93_Env__individual__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__individual__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__individual__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__height__get
double Node___K93__K93_Env__height__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__log_density__get
double Node___K93__K93_Env__log_density__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__competition_effect__get
double Node___K93__K93_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__fecundity__get
double Node___K93__K93_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__ode_size__get
size_t Node___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__ode_state__get
plant::ode::state_type Node___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__ode_state__set
void Node___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Node___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Node___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Node___K93__K93_Env__ode_rates__get
plant::ode::state_type Node___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Node___K93__K93_Env__ode_names__get
std::vector<std::string> Node___K93__K93_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Node___K93__K93_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Node<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Node___K93__K93_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ctor
plant::Species<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__clear
void Species___FF16__FF16_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__compute_rates
void Species___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Species___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Species___FF16__FF16_Env__compute_rates(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__compute_competition
double Species___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__introduce_new_node
void Species___FF16__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__node_at
plant::Node<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__node_at(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___FF16__FF16_Env__node_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__node_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__competition_effects_error
std::vector<double> Species___FF16__FF16_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___FF16__FF16_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__size__get
size_t Species___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__new_node__get
plant::Node<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__height_max__get
double Species___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__heights__get
std::vector<double> Species___FF16__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__heights__set
void Species___FF16__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___FF16__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___FF16__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__log_densities__get
std::vector<double> Species___FF16__FF16_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__nodes__get
std::vector<plant::Node<plant::FF16_Strategy,plant::FF16_Environment> > Species___FF16__FF16_Env__nodes__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__nodes__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__nodes__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__competition_effects__get
std::vector<double> Species___FF16__FF16_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__extrinsic_drivers__get
plant::ExtrinsicDrivers Species___FF16__FF16_Env__extrinsic_drivers__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__extrinsic_drivers__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__extrinsic_drivers__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_size__get
size_t Species___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_state__get
plant::ode::state_type Species___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_state__set
void Species___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Species___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__ctor
plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> Species___FF16w__FF16_Env__ctor(plant::FF16w_Strategy strategy);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16w_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__clear
void Species___FF16w__FF16_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16w__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16w__FF16_Env__compute_rates
void Species___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Species___FF16w__FF16_Env__compute_rates(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Species___FF16w__FF16_Env__compute_competition
double Species___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__introduce_new_node
void Species___FF16w__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16w__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16w__FF16_Env__node_at
plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> Species___FF16w__FF16_Env__node_at(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__node_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__node_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__competition_effects_error
std::vector<double> Species___FF16w__FF16_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__size__get
size_t Species___FF16w__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__new_node__get
plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> Species___FF16w__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__height_max__get
double Species___FF16w__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__heights__get
std::vector<double> Species___FF16w__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__heights__set
void Species___FF16w__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___FF16w__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16w__FF16_Env__log_densities__get
std::vector<double> Species___FF16w__FF16_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__nodes__get
std::vector<plant::Node<plant::FF16w_Strategy,plant::FF16_Environment> > Species___FF16w__FF16_Env__nodes__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__nodes__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__nodes__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__competition_effects__get
std::vector<double> Species___FF16w__FF16_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__extrinsic_drivers__get
plant::ExtrinsicDrivers Species___FF16w__FF16_Env__extrinsic_drivers__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__extrinsic_drivers__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__extrinsic_drivers__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__ode_size__get
size_t Species___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__ode_state__get
plant::ode::state_type Species___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16w__FF16_Env__ode_state__set
void Species___FF16w__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___FF16w__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type Species___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ctor
plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__clear
void Species___FF16r__FF16_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16r__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__compute_rates
void Species___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Species___FF16r__FF16_Env__compute_rates(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__compute_competition
double Species___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__introduce_new_node
void Species___FF16r__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16r__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__node_at
plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__node_at(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__node_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__node_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__competition_effects_error
std::vector<double> Species___FF16r__FF16_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__size__get
size_t Species___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__new_node__get
plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__height_max__get
double Species___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__heights__get
std::vector<double> Species___FF16r__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__heights__set
void Species___FF16r__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___FF16r__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__log_densities__get
std::vector<double> Species___FF16r__FF16_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__nodes__get
std::vector<plant::Node<plant::FF16r_Strategy,plant::FF16_Environment> > Species___FF16r__FF16_Env__nodes__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__nodes__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__nodes__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__competition_effects__get
std::vector<double> Species___FF16r__FF16_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__extrinsic_drivers__get
plant::ExtrinsicDrivers Species___FF16r__FF16_Env__extrinsic_drivers__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__extrinsic_drivers__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__extrinsic_drivers__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_size__get
size_t Species___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Species___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_state__set
void Species___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Species___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ctor
plant::Species<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_Species___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__clear
void Species___K93__K93_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Species___K93__K93_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__compute_rates
void Species___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment, double pr_patch_survival, double birth_rate);
RcppExport SEXP _plant_Species___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP, SEXP pr_patch_survivalSEXP, SEXP birth_rateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< double >::type pr_patch_survival(pr_patch_survivalSEXP);
    Rcpp::traits::input_parameter< double >::type birth_rate(birth_rateSEXP);
    Species___K93__K93_Env__compute_rates(obj_, environment, pr_patch_survival, birth_rate);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__compute_competition
double Species___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__introduce_new_node
void Species___K93__K93_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Species___K93__K93_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__node_at
plant::Node<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__node_at(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___K93__K93_Env__node_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__node_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__competition_effects_error
std::vector<double> Species___K93__K93_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___K93__K93_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__size__get
size_t Species___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__new_node__get
plant::Node<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__new_node__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__height_max__get
double Species___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__heights__get
std::vector<double> Species___K93__K93_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__heights__set
void Species___K93__K93_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___K93__K93_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___K93__K93_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__log_densities__get
std::vector<double> Species___K93__K93_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__nodes__get
std::vector<plant::Node<plant::K93_Strategy,plant::K93_Environment> > Species___K93__K93_Env__nodes__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__nodes__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__nodes__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__net_reproduction_ratio_by_node__get
std::vector<double> Species___K93__K93_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__competition_effects__get
std::vector<double> Species___K93__K93_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__extrinsic_drivers__get
plant::ExtrinsicDrivers Species___K93__K93_Env__extrinsic_drivers__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__extrinsic_drivers__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__extrinsic_drivers__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_size__get
size_t Species___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_state__get
plant::ode::state_type Species___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_state__set
void Species___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__ode_rates__get
plant::ode::state_type Species___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ctor
plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> Patch___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__introduce_new_node
void Patch___FF16__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___FF16__FF16_Env__introduce_new_node(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_environment
void Patch___FF16__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_rates
void Patch___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__reset
void Patch___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__set_ode_state
void Patch___FF16__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__derivs
plant::ode::state_type Patch___FF16__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__set_time
void Patch___FF16__FF16_Env__set_time(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__set_time(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16__FF16_Env__set_time(obj_, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__set_state
void Patch___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___FF16__FF16_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__density
std::vector<double> Patch___FF16__FF16_Env__density(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<double> time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__pr_survival
double Patch___FF16__FF16_Env__pr_survival(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__disturbance_mean_interval
double Patch___FF16__FF16_Env__disturbance_mean_interval(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__disturbance_mean_interval(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__disturbance_mean_interval(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__survival_weighting_cdf
double Patch___FF16__FF16_Env__survival_weighting_cdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__survival_weighting_cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__survival_weighting_cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__survival_weighting_icdf
double Patch___FF16__FF16_Env__survival_weighting_icdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double prob);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__survival_weighting_icdf(SEXP obj_SEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__survival_weighting_icdf(obj_, prob));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_competition
double Patch___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__time__get
double Patch___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__size__get
size_t Patch___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__height_max__get
double Patch___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> Patch___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__environment__get
plant::FF16_Environment Patch___FF16__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__species__get
std::vector<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > Patch___FF16__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_size__get
size_t Patch___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_time__get
double Patch___FF16__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_state__get
plant::ode::state_type Patch___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Patch___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_aux__get
plant::ode::state_type Patch___FF16__FF16_Env__ode_aux__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__node_ode_size__get
size_t Patch___FF16__FF16_Env__node_ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__node_ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__node_ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ctor
plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> Patch___FF16w__FF16_Env__ctor(plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__introduce_new_node
void Patch___FF16w__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___FF16w__FF16_Env__introduce_new_node(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__compute_environment
void Patch___FF16w__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16w__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__compute_rates
void Patch___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16w__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__reset
void Patch___FF16w__FF16_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16w__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__set_ode_state
void Patch___FF16w__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16w__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__derivs
plant::ode::state_type Patch___FF16w__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__set_time
void Patch___FF16w__FF16_Env__set_time(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__set_time(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16w__FF16_Env__set_time(obj_, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__set_state
void Patch___FF16w__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___FF16w__FF16_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___FF16w__FF16_Env__density
std::vector<double> Patch___FF16w__FF16_Env__density(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::vector<double> time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__pr_survival
double Patch___FF16w__FF16_Env__pr_survival(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__disturbance_mean_interval
double Patch___FF16w__FF16_Env__disturbance_mean_interval(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__disturbance_mean_interval(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__disturbance_mean_interval(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__survival_weighting_cdf
double Patch___FF16w__FF16_Env__survival_weighting_cdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__survival_weighting_cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__survival_weighting_cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__survival_weighting_icdf
double Patch___FF16w__FF16_Env__survival_weighting_icdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double prob);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__survival_weighting_icdf(SEXP obj_SEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__survival_weighting_icdf(obj_, prob));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__compute_competition
double Patch___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__time__get
double Patch___FF16w__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__size__get
size_t Patch___FF16w__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__height_max__get
double Patch___FF16w__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__parameters__get
plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> Patch___FF16w__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__environment__get
plant::FF16_Environment Patch___FF16w__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__species__get
std::vector<plant::Species<plant::FF16w_Strategy,plant::FF16_Environment> > Patch___FF16w__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ode_size__get
size_t Patch___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ode_time__get
double Patch___FF16w__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ode_state__get
plant::ode::state_type Patch___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type Patch___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__ode_aux__get
plant::ode::state_type Patch___FF16w__FF16_Env__ode_aux__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__ode_aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__ode_aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16w__FF16_Env__node_ode_size__get
size_t Patch___FF16w__FF16_Env__node_ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16w__FF16_Env__node_ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16w__FF16_Env__node_ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ctor
plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> Patch___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__introduce_new_node
void Patch___FF16r__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___FF16r__FF16_Env__introduce_new_node(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_environment
void Patch___FF16r__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_rates
void Patch___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__reset
void Patch___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__set_ode_state
void Patch___FF16r__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16r__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__derivs
plant::ode::state_type Patch___FF16r__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__set_time
void Patch___FF16r__FF16_Env__set_time(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__set_time(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16r__FF16_Env__set_time(obj_, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__set_state
void Patch___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___FF16r__FF16_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__density
std::vector<double> Patch___FF16r__FF16_Env__density(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<double> time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__pr_survival
double Patch___FF16r__FF16_Env__pr_survival(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__disturbance_mean_interval
double Patch___FF16r__FF16_Env__disturbance_mean_interval(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__disturbance_mean_interval(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__disturbance_mean_interval(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__survival_weighting_cdf
double Patch___FF16r__FF16_Env__survival_weighting_cdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__survival_weighting_cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__survival_weighting_cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__survival_weighting_icdf
double Patch___FF16r__FF16_Env__survival_weighting_icdf(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double prob);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__survival_weighting_icdf(SEXP obj_SEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__survival_weighting_icdf(obj_, prob));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_competition
double Patch___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__time__get
double Patch___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__size__get
size_t Patch___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__height_max__get
double Patch___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> Patch___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__environment__get
plant::FF16_Environment Patch___FF16r__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__species__get
std::vector<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > Patch___FF16r__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_size__get
size_t Patch___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_time__get
double Patch___FF16r__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Patch___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Patch___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_aux__get
plant::ode::state_type Patch___FF16r__FF16_Env__ode_aux__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__node_ode_size__get
size_t Patch___FF16r__FF16_Env__node_ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__node_ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__node_ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ctor
plant::Patch<plant::K93_Strategy,plant::K93_Environment> Patch___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters, plant::K93_Environment environment, plant::Control control);
RcppExport SEXP _plant_Patch___K93__K93_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__introduce_new_node
void Patch___K93__K93_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___K93__K93_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___K93__K93_Env__introduce_new_node(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__compute_environment
void Patch___K93__K93_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__compute_rates
void Patch___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__reset
void Patch___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__set_ode_state
void Patch___K93__K93_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___K93__K93_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__derivs
plant::ode::state_type Patch___K93__K93_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__set_time
void Patch___K93__K93_Env__set_time(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__set_time(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___K93__K93_Env__set_time(obj_, time);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__set_state
void Patch___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___K93__K93_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__density
std::vector<double> Patch___K93__K93_Env__density(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<double> time);
RcppExport SEXP _plant_Patch___K93__K93_Env__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__pr_survival
double Patch___K93__K93_Env__pr_survival(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__disturbance_mean_interval
double Patch___K93__K93_Env__disturbance_mean_interval(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__disturbance_mean_interval(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__disturbance_mean_interval(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__survival_weighting_cdf
double Patch___K93__K93_Env__survival_weighting_cdf(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__survival_weighting_cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__survival_weighting_cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__survival_weighting_icdf
double Patch___K93__K93_Env__survival_weighting_icdf(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double prob);
RcppExport SEXP _plant_Patch___K93__K93_Env__survival_weighting_icdf(SEXP obj_SEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__survival_weighting_icdf(obj_, prob));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__compute_competition
double Patch___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__time__get
double Patch___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__size__get
size_t Patch___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__height_max__get
double Patch___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> Patch___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__environment__get
plant::K93_Environment Patch___K93__K93_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__species__get
std::vector<plant::Species<plant::K93_Strategy,plant::K93_Environment> > Patch___K93__K93_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_size__get
size_t Patch___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_time__get
double Patch___K93__K93_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_state__get
plant::ode::state_type Patch___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_rates__get
plant::ode::state_type Patch___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_aux__get
plant::ode::state_type Patch___K93__K93_Env__ode_aux__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__node_ode_size__get
size_t Patch___K93__K93_Env__node_ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__node_ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__node_ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__ctor
plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__run
void SCM___FF16__FF16_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__run_next
std::vector<plant::util::index> SCM___FF16__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__reset
void SCM___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__net_reproduction_ratio_for_species
double SCM___FF16__FF16_Env__net_reproduction_ratio_for_species(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__net_reproduction_ratio_for_species(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__net_reproduction_ratio_for_species(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__competition_effect_error
std::vector<double> SCM___FF16__FF16_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__set_node_schedule_times
void SCM___FF16__FF16_Env__set_node_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__set_node_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___FF16__FF16_Env__set_node_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__complete__get
bool SCM___FF16__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__time__get
double SCM___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__net_reproduction_ratios__get
std::vector<double> SCM___FF16__FF16_Env__net_reproduction_ratios__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__net_reproduction_ratios__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__net_reproduction_ratios__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__offspring_production__get
std::vector<double> SCM___FF16__FF16_Env__offspring_production__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__offspring_production__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__offspring_production__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__patch__get
plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__node_schedule__get
plant::NodeSchedule SCM___FF16__FF16_Env__node_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__node_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__node_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__node_schedule__set
void SCM___FF16__FF16_Env__node_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__node_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    SCM___FF16__FF16_Env__node_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__ode_times__get
std::vector<double> SCM___FF16__FF16_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__state__get
Rcpp::List SCM___FF16__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__aux__get
Rcpp::List SCM___FF16__FF16_Env__aux__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__use_ode_times__get
bool SCM___FF16__FF16_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__use_ode_times__set
void SCM___FF16__FF16_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___FF16__FF16_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get
std::vector<std::vector<double> > SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__ctor
plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> SCM___FF16w__FF16_Env__ctor(plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__run
void SCM___FF16w__FF16_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16w__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16w__FF16_Env__run_next
std::vector<plant::util::index> SCM___FF16w__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__reset
void SCM___FF16w__FF16_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16w__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species
double SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__competition_effect_error
std::vector<double> SCM___FF16w__FF16_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__set_node_schedule_times
void SCM___FF16w__FF16_Env__set_node_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__set_node_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___FF16w__FF16_Env__set_node_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___FF16w__FF16_Env__complete__get
bool SCM___FF16w__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__time__get
double SCM___FF16w__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__net_reproduction_ratios__get
std::vector<double> SCM___FF16w__FF16_Env__net_reproduction_ratios__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__net_reproduction_ratios__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__net_reproduction_ratios__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__offspring_production__get
std::vector<double> SCM___FF16w__FF16_Env__offspring_production__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__offspring_production__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__offspring_production__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__parameters__get
plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> SCM___FF16w__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__patch__get
plant::Patch<plant::FF16w_Strategy,plant::FF16_Environment> SCM___FF16w__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__node_schedule__get
plant::NodeSchedule SCM___FF16w__FF16_Env__node_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__node_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__node_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__node_schedule__set
void SCM___FF16w__FF16_Env__node_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__node_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    SCM___FF16w__FF16_Env__node_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16w__FF16_Env__ode_times__get
std::vector<double> SCM___FF16w__FF16_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__state__get
Rcpp::List SCM___FF16w__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__aux__get
Rcpp::List SCM___FF16w__FF16_Env__aux__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__use_ode_times__get
bool SCM___FF16w__FF16_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16w__FF16_Env__use_ode_times__set
void SCM___FF16w__FF16_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___FF16w__FF16_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get
std::vector<std::vector<double> > SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__ctor
plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__run
void SCM___FF16r__FF16_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16r__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__run_next
std::vector<plant::util::index> SCM___FF16r__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__reset
void SCM___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species
double SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__competition_effect_error
std::vector<double> SCM___FF16r__FF16_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__set_node_schedule_times
void SCM___FF16r__FF16_Env__set_node_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__set_node_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___FF16r__FF16_Env__set_node_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__complete__get
bool SCM___FF16r__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__time__get
double SCM___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__net_reproduction_ratios__get
std::vector<double> SCM___FF16r__FF16_Env__net_reproduction_ratios__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__net_reproduction_ratios__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__net_reproduction_ratios__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__offspring_production__get
std::vector<double> SCM___FF16r__FF16_Env__offspring_production__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__offspring_production__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__offspring_production__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__patch__get
plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__node_schedule__get
plant::NodeSchedule SCM___FF16r__FF16_Env__node_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__node_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__node_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__node_schedule__set
void SCM___FF16r__FF16_Env__node_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__node_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    SCM___FF16r__FF16_Env__node_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__ode_times__get
std::vector<double> SCM___FF16r__FF16_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__state__get
Rcpp::List SCM___FF16r__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__aux__get
Rcpp::List SCM___FF16r__FF16_Env__aux__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__use_ode_times__get
bool SCM___FF16r__FF16_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__use_ode_times__set
void SCM___FF16r__FF16_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___FF16r__FF16_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get
std::vector<std::vector<double> > SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__ctor
plant::SCM<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters, plant::K93_Environment environment, plant::Control control);
RcppExport SEXP _plant_SCM___K93__K93_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__run
void SCM___K93__K93_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    SCM___K93__K93_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__run_next
std::vector<plant::util::index> SCM___K93__K93_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__reset
void SCM___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    SCM___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__net_reproduction_ratio_for_species
double SCM___K93__K93_Env__net_reproduction_ratio_for_species(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___K93__K93_Env__net_reproduction_ratio_for_species(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__net_reproduction_ratio_for_species(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__competition_effect_error
std::vector<double> SCM___K93__K93_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___K93__K93_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__set_node_schedule_times
void SCM___K93__K93_Env__set_node_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___K93__K93_Env__set_node_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___K93__K93_Env__set_node_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__complete__get
bool SCM___K93__K93_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__time__get
double SCM___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__net_reproduction_ratios__get
std::vector<double> SCM___K93__K93_Env__net_reproduction_ratios__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__net_reproduction_ratios__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__net_reproduction_ratios__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__offspring_production__get
std::vector<double> SCM___K93__K93_Env__offspring_production__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__offspring_production__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__offspring_production__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__patch__get
plant::Patch<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__node_schedule__get
plant::NodeSchedule SCM___K93__K93_Env__node_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__node_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__node_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__node_schedule__set
void SCM___K93__K93_Env__node_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_SCM___K93__K93_Env__node_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    SCM___K93__K93_Env__node_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__ode_times__get
std::vector<double> SCM___K93__K93_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__state__get
Rcpp::List SCM___K93__K93_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__aux__get
Rcpp::List SCM___K93__K93_Env__aux__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__aux__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__aux__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__use_ode_times__get
bool SCM___K93__K93_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__use_ode_times__set
void SCM___K93__K93_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___K93__K93_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___K93__K93_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__net_reproduction_ratio_errors__get
std::vector<std::vector<double> > SCM___K93__K93_Env__net_reproduction_ratio_errors__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__net_reproduction_ratio_errors__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__net_reproduction_ratio_errors__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ctor
plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__clear
void StochasticSpecies___FF16__FF16_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__compute_rates
void StochasticSpecies___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    StochasticSpecies___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__compute_competition
double StochasticSpecies___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__introduce_new_node
void StochasticSpecies___FF16__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__individual_at
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__individual_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__individual_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__individual_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__deaths
size_t StochasticSpecies___FF16__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__establishment_probability
double StochasticSpecies___FF16__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__size__get
size_t StochasticSpecies___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__size_individuals__get
size_t StochasticSpecies___FF16__FF16_Env__size_individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__size_individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__size_individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__new_node__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__height_max__get
double StochasticSpecies___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__heights__get
std::vector<double> StochasticSpecies___FF16__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__heights__set
void StochasticSpecies___FF16__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___FF16__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__individuals__get
std::vector<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > StochasticSpecies___FF16__FF16_Env__individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__is_alive__get
std::vector<bool> StochasticSpecies___FF16__FF16_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_size__get
size_t StochasticSpecies___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_state__get
plant::ode::state_type StochasticSpecies___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_state__set
void StochasticSpecies___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__ctor
plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> StochasticSpecies___FF16w__FF16_Env__ctor(plant::FF16w_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16w_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__clear
void StochasticSpecies___FF16w__FF16_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16w__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__compute_rates
void StochasticSpecies___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    StochasticSpecies___FF16w__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__compute_competition
double StochasticSpecies___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__introduce_new_node
void StochasticSpecies___FF16w__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16w__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__individual_at
plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> StochasticSpecies___FF16w__FF16_Env__individual_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__individual_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__individual_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__deaths
size_t StochasticSpecies___FF16w__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__establishment_probability
double StochasticSpecies___FF16w__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__size__get
size_t StochasticSpecies___FF16w__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__size_individuals__get
size_t StochasticSpecies___FF16w__FF16_Env__size_individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__size_individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__size_individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__new_node__get
plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> StochasticSpecies___FF16w__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__height_max__get
double StochasticSpecies___FF16w__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__heights__get
std::vector<double> StochasticSpecies___FF16w__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__heights__set
void StochasticSpecies___FF16w__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___FF16w__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__individuals__get
std::vector<plant::Individual<plant::FF16w_Strategy,plant::FF16_Environment> > StochasticSpecies___FF16w__FF16_Env__individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__is_alive__get
std::vector<bool> StochasticSpecies___FF16w__FF16_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__ode_size__get
size_t StochasticSpecies___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__ode_state__get
plant::ode::state_type StochasticSpecies___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__ode_state__set
void StochasticSpecies___FF16w__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___FF16w__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ctor
plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__clear
void StochasticSpecies___FF16r__FF16_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16r__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__compute_rates
void StochasticSpecies___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    StochasticSpecies___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__compute_competition
double StochasticSpecies___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__introduce_new_node
void StochasticSpecies___FF16r__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16r__FF16_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__individual_at
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__individual_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__individual_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__individual_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__deaths
size_t StochasticSpecies___FF16r__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__establishment_probability
double StochasticSpecies___FF16r__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__size__get
size_t StochasticSpecies___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__size_individuals__get
size_t StochasticSpecies___FF16r__FF16_Env__size_individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__size_individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__size_individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__new_node__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__new_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__height_max__get
double StochasticSpecies___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__heights__get
std::vector<double> StochasticSpecies___FF16r__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__heights__set
void StochasticSpecies___FF16r__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___FF16r__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__individuals__get
std::vector<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > StochasticSpecies___FF16r__FF16_Env__individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__is_alive__get
std::vector<bool> StochasticSpecies___FF16r__FF16_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get
std::vector<double> StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_size__get
size_t StochasticSpecies___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_state__get
plant::ode::state_type StochasticSpecies___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_state__set
void StochasticSpecies___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ctor
plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__clear
void StochasticSpecies___K93__K93_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___K93__K93_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__compute_rates
void StochasticSpecies___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    StochasticSpecies___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__compute_competition
double StochasticSpecies___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__introduce_new_node
void StochasticSpecies___K93__K93_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__introduce_new_node(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___K93__K93_Env__introduce_new_node(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__individual_at
plant::Individual<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__individual_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__individual_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__individual_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__deaths
size_t StochasticSpecies___K93__K93_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__establishment_probability
double StochasticSpecies___K93__K93_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__size__get
size_t StochasticSpecies___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__size_individuals__get
size_t StochasticSpecies___K93__K93_Env__size_individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__size_individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__size_individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__new_node__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__new_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__new_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__new_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__height_max__get
double StochasticSpecies___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__heights__get
std::vector<double> StochasticSpecies___K93__K93_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__heights__set
void StochasticSpecies___K93__K93_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___K93__K93_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__individuals__get
std::vector<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > StochasticSpecies___K93__K93_Env__individuals__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__individuals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__individuals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__is_alive__get
std::vector<bool> StochasticSpecies___K93__K93_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get
std::vector<double> StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_size__get
size_t StochasticSpecies___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_state__get
plant::ode::state_type StochasticSpecies___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_state__set
void StochasticSpecies___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ctor
plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatch___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_competition
double StochasticPatch___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__introduce_new_node
bool StochasticPatch___FF16__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__introduce_new_node(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update
void StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_environment
void StochasticPatch___FF16__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_rates
void StochasticPatch___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__reset
void StochasticPatch___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__set_ode_state
void StochasticPatch___FF16__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___FF16__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__derivs
plant::ode::state_type StochasticPatch___FF16__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__set_state
void StochasticPatch___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___FF16__FF16_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__deaths
std::vector<size_t> StochasticPatch___FF16__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__time__get
double StochasticPatch___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__size__get
size_t StochasticPatch___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__height_max__get
double StochasticPatch___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatch___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__environment__get
plant::FF16_Environment StochasticPatch___FF16__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__species__get
std::vector<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > StochasticPatch___FF16__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_size__get
size_t StochasticPatch___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_time__get
double StochasticPatch___FF16__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_state__get
plant::ode::state_type StochasticPatch___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_rates__get
plant::ode::state_type StochasticPatch___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__ctor
plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> StochasticPatch___FF16w__FF16_Env__ctor(plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__compute_competition
double StochasticPatch___FF16w__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__introduce_new_node
bool StochasticPatch___FF16w__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__introduce_new_node(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update
void StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__compute_environment
void StochasticPatch___FF16w__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16w__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__compute_rates
void StochasticPatch___FF16w__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16w__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__reset
void StochasticPatch___FF16w__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16w__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__set_ode_state
void StochasticPatch___FF16w__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___FF16w__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__derivs
plant::ode::state_type StochasticPatch___FF16w__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__set_state
void StochasticPatch___FF16w__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___FF16w__FF16_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__deaths
std::vector<size_t> StochasticPatch___FF16w__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__time__get
double StochasticPatch___FF16w__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__size__get
size_t StochasticPatch___FF16w__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__height_max__get
double StochasticPatch___FF16w__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__parameters__get
plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> StochasticPatch___FF16w__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__environment__get
plant::FF16_Environment StochasticPatch___FF16w__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__species__get
std::vector<plant::StochasticSpecies<plant::FF16w_Strategy,plant::FF16_Environment> > StochasticPatch___FF16w__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__ode_size__get
size_t StochasticPatch___FF16w__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__ode_time__get
double StochasticPatch___FF16w__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__ode_state__get
plant::ode::state_type StochasticPatch___FF16w__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16w__FF16_Env__ode_rates__get
plant::ode::state_type StochasticPatch___FF16w__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16w__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16w__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ctor
plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatch___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_competition
double StochasticPatch___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__introduce_new_node
bool StochasticPatch___FF16r__FF16_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__introduce_new_node(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update
void StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_environment
void StochasticPatch___FF16r__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_rates
void StochasticPatch___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__reset
void StochasticPatch___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__set_ode_state
void StochasticPatch___FF16r__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___FF16r__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__derivs
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__set_state
void StochasticPatch___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___FF16r__FF16_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__deaths
std::vector<size_t> StochasticPatch___FF16r__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__time__get
double StochasticPatch___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__size__get
size_t StochasticPatch___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__height_max__get
double StochasticPatch___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatch___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__environment__get
plant::FF16_Environment StochasticPatch___FF16r__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__species__get
std::vector<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > StochasticPatch___FF16r__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_size__get
size_t StochasticPatch___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_time__get
double StochasticPatch___FF16r__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_state__get
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ctor
plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> StochasticPatch___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters, plant::K93_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_competition
double StochasticPatch___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__introduce_new_node
bool StochasticPatch___K93__K93_Env__introduce_new_node(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__introduce_new_node(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__introduce_new_node(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__introduce_new_node_and_update
void StochasticPatch___K93__K93_Env__introduce_new_node_and_update(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__introduce_new_node_and_update(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___K93__K93_Env__introduce_new_node_and_update(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_environment
void StochasticPatch___K93__K93_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_rates
void StochasticPatch___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__reset
void StochasticPatch___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__set_ode_state
void StochasticPatch___K93__K93_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___K93__K93_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__derivs
plant::ode::state_type StochasticPatch___K93__K93_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__set_state
void StochasticPatch___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___K93__K93_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__deaths
std::vector<size_t> StochasticPatch___K93__K93_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__time__get
double StochasticPatch___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__size__get
size_t StochasticPatch___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__height_max__get
double StochasticPatch___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> StochasticPatch___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__environment__get
plant::K93_Environment StochasticPatch___K93__K93_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__species__get
std::vector<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > StochasticPatch___K93__K93_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_size__get
size_t StochasticPatch___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_time__get
double StochasticPatch___K93__K93_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_state__get
plant::ode::state_type StochasticPatch___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_rates__get
plant::ode::state_type StochasticPatch___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__ctor
plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__run
void StochasticPatchRunner___FF16__FF16_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__run_next
plant::util::index StochasticPatchRunner___FF16__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__reset
void StochasticPatchRunner___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__set_schedule_times
void StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__complete__get
bool StochasticPatchRunner___FF16__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__time__get
double StochasticPatchRunner___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__patch__get
plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__schedule__get
plant::NodeSchedule StochasticPatchRunner___FF16__FF16_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__schedule__set
void StochasticPatchRunner___FF16__FF16_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    StochasticPatchRunner___FF16__FF16_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__state__get
Rcpp::List StochasticPatchRunner___FF16__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__ctor
plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16w__FF16_Env__ctor(plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__run
void StochasticPatchRunner___FF16w__FF16_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16w__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__run_next
plant::util::index StochasticPatchRunner___FF16w__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__reset
void StochasticPatchRunner___FF16w__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16w__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times
void StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__complete__get
bool StochasticPatchRunner___FF16w__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__time__get
double StochasticPatchRunner___FF16w__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__parameters__get
plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16w__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__patch__get
plant::StochasticPatch<plant::FF16w_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16w__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__schedule__get
plant::NodeSchedule StochasticPatchRunner___FF16w__FF16_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__schedule__set
void StochasticPatchRunner___FF16w__FF16_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    StochasticPatchRunner___FF16w__FF16_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16w__FF16_Env__state__get
Rcpp::List StochasticPatchRunner___FF16w__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16w__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16w_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16w__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__ctor
plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters, plant::FF16_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__run
void StochasticPatchRunner___FF16r__FF16_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16r__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__run_next
plant::util::index StochasticPatchRunner___FF16r__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__reset
void StochasticPatchRunner___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times
void StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__complete__get
bool StochasticPatchRunner___FF16r__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__time__get
double StochasticPatchRunner___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__patch__get
plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__schedule__get
plant::NodeSchedule StochasticPatchRunner___FF16r__FF16_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__schedule__set
void StochasticPatchRunner___FF16r__FF16_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    StochasticPatchRunner___FF16r__FF16_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__state__get
Rcpp::List StochasticPatchRunner___FF16r__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__ctor
plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters, plant::K93_Environment environment, plant::Control control);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__ctor(SEXP parametersSEXP, SEXP environmentSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__ctor(parameters, environment, control));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__run
void StochasticPatchRunner___K93__K93_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___K93__K93_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__run_next
plant::util::index StochasticPatchRunner___K93__K93_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__reset
void StochasticPatchRunner___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__set_schedule_times
void StochasticPatchRunner___K93__K93_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___K93__K93_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__complete__get
bool StochasticPatchRunner___K93__K93_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__time__get
double StochasticPatchRunner___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__patch__get
plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__schedule__get
plant::NodeSchedule StochasticPatchRunner___K93__K93_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__schedule__set
void StochasticPatchRunner___K93__K93_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::NodeSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::NodeSchedule >::type value(valueSEXP);
    StochasticPatchRunner___K93__K93_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__state__get
Rcpp::List StochasticPatchRunner___K93__K93_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__ctor
plant::Canopy Canopy__ctor(double tol, double nbase, double max_depth);
RcppExport SEXP _plant_Canopy__ctor(SEXP tolSEXP, SEXP nbaseSEXP, SEXP max_depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type nbase(nbaseSEXP);
    Rcpp::traits::input_parameter< double >::type max_depth(max_depthSEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__ctor(tol, nbase, max_depth));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__canopy_openness
double Canopy__canopy_openness(plant::RcppR6::RcppR6<plant::Canopy> obj_, double height);
RcppExport SEXP _plant_Canopy__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__clear
void Canopy__clear(plant::RcppR6::RcppR6<plant::Canopy> obj_);
RcppExport SEXP _plant_Canopy__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Canopy__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Canopy__canopy_interpolator__get
plant::interpolator::Interpolator Canopy__canopy_interpolator__get(plant::RcppR6::RcppR6<plant::Canopy> obj_);
RcppExport SEXP _plant_Canopy__canopy_interpolator__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__canopy_interpolator__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__canopy_interpolator__set
void Canopy__canopy_interpolator__set(plant::RcppR6::RcppR6<plant::Canopy> obj_, plant::interpolator::Interpolator value);
RcppExport SEXP _plant_Canopy__canopy_interpolator__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::interpolator::Interpolator >::type value(valueSEXP);
    Canopy__canopy_interpolator__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Disturbance_Regime__ctor
plant::Disturbance_Regime Disturbance_Regime__ctor();
RcppExport SEXP _plant_Disturbance_Regime__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Disturbance_Regime__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Disturbance_Regime__density
std::vector<double> Disturbance_Regime__density(plant::RcppR6::RcppR6<plant::Disturbance_Regime> obj_, std::vector<double> time);
RcppExport SEXP _plant_Disturbance_Regime__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance_Regime__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance_Regime__pr_survival
double Disturbance_Regime__pr_survival(plant::RcppR6::RcppR6<plant::Disturbance_Regime> obj_, double time);
RcppExport SEXP _plant_Disturbance_Regime__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance_Regime__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// No_Disturbance__ctor
plant::No_Disturbance No_Disturbance__ctor();
RcppExport SEXP _plant_No_Disturbance__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(No_Disturbance__ctor());
    return rcpp_result_gen;
END_RCPP
}
// No_Disturbance__density
std::vector<double> No_Disturbance__density(plant::RcppR6::RcppR6<plant::No_Disturbance> obj_, std::vector<double> time);
RcppExport SEXP _plant_No_Disturbance__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::No_Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(No_Disturbance__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// No_Disturbance__pr_survival
double No_Disturbance__pr_survival(plant::RcppR6::RcppR6<plant::No_Disturbance> obj_, double time);
RcppExport SEXP _plant_No_Disturbance__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::No_Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(No_Disturbance__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__ctor
plant::Weibull_Disturbance_Regime Weibull_Disturbance_Regime__ctor(double max_patch_lifetime);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__ctor(SEXP max_patch_lifetimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type max_patch_lifetime(max_patch_lifetimeSEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__ctor(max_patch_lifetime));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__density
std::vector<double> Weibull_Disturbance_Regime__density(plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> obj_, std::vector<double> time);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__pr_survival
double Weibull_Disturbance_Regime__pr_survival(plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> obj_, double time);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__mean_interval
double Weibull_Disturbance_Regime__mean_interval(plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> obj_);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__mean_interval(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__mean_interval(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__cdf
double Weibull_Disturbance_Regime__cdf(plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> obj_, double time);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Weibull_Disturbance_Regime__icdf
double Weibull_Disturbance_Regime__icdf(plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> obj_, double prob);
RcppExport SEXP _plant_Weibull_Disturbance_Regime__icdf(SEXP obj_SEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Weibull_Disturbance_Regime> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(Weibull_Disturbance_Regime__icdf(obj_, prob));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Strategy__ctor
SEXP FF16_Strategy__ctor();
RcppExport SEXP _plant_FF16_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FF16_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__ctor
plant::FF16_Environment FF16_Environment__ctor(bool canopy_rescale_usually, int soil_number_of_depths);
RcppExport SEXP _plant_FF16_Environment__ctor(SEXP canopy_rescale_usuallySEXP, SEXP soil_number_of_depthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type canopy_rescale_usually(canopy_rescale_usuallySEXP);
    Rcpp::traits::input_parameter< int >::type soil_number_of_depths(soil_number_of_depthsSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__ctor(canopy_rescale_usually, soil_number_of_depths));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__canopy_openness
double FF16_Environment__canopy_openness(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double height);
RcppExport SEXP _plant_FF16_Environment__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__n_psi
double FF16_Environment__n_psi(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__n_psi(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__n_psi(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__a_psi
double FF16_Environment__a_psi(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__a_psi(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__a_psi(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__psi_from_soil_moist
double FF16_Environment__psi_from_soil_moist(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double theta_);
RcppExport SEXP _plant_FF16_Environment__psi_from_soil_moist(SEXP obj_SEXP, SEXP theta_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type theta_(theta_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__psi_from_soil_moist(obj_, theta_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__soil_moist_from_psi
double FF16_Environment__soil_moist_from_psi(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double psi_soil_);
RcppExport SEXP _plant_FF16_Environment__soil_moist_from_psi(SEXP obj_SEXP, SEXP psi_soil_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type psi_soil_(psi_soil_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__soil_moist_from_psi(obj_, psi_soil_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__clear
void FF16_Environment__clear(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    FF16_Environment__clear(obj_);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__set_fixed_environment
void FF16_Environment__set_fixed_environment(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double value, double height_max);
RcppExport SEXP _plant_FF16_Environment__set_fixed_environment(SEXP obj_SEXP, SEXP valueSEXP, SEXP height_maxSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< double >::type height_max(height_maxSEXP);
    FF16_Environment__set_fixed_environment(obj_, value, height_max);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__get_soil_water_state
std::vector<double> FF16_Environment__get_soil_water_state(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_soil_water_state(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_soil_water_state(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__get_vpd
double FF16_Environment__get_vpd(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_vpd(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_vpd(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__get_co2
double FF16_Environment__get_co2(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_co2(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_co2(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__get_leaf_temp
double FF16_Environment__get_leaf_temp(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_leaf_temp(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_leaf_temp(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__get_atm_o2
double FF16_Environment__get_atm_o2(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_atm_o2(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_atm_o2(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__get_atm
double FF16_Environment__get_atm(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__get_atm(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__get_atm(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__set_soil_water_state
void FF16_Environment__set_soil_water_state(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, std::vector<double> state);
RcppExport SEXP _plant_FF16_Environment__set_soil_water_state(SEXP obj_SEXP, SEXP stateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type state(stateSEXP);
    FF16_Environment__set_soil_water_state(obj_, state);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__compute_rates
void FF16_Environment__compute_rates(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, std::vector<double> resource_depletion);
RcppExport SEXP _plant_FF16_Environment__compute_rates(SEXP obj_SEXP, SEXP resource_depletionSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type resource_depletion(resource_depletionSEXP);
    FF16_Environment__compute_rates(obj_, resource_depletion);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__time__get
double FF16_Environment__time__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__time__set
void FF16_Environment__time__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double value);
RcppExport SEXP _plant_FF16_Environment__time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    FF16_Environment__time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__ode_size__get
size_t FF16_Environment__ode_size__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__soil_number_of_depths__get
size_t FF16_Environment__soil_number_of_depths__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__soil_number_of_depths__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__soil_number_of_depths__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__canopy__get
plant::Canopy FF16_Environment__canopy__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__canopy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__canopy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__canopy__set
void FF16_Environment__canopy__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, plant::Canopy value);
RcppExport SEXP _plant_FF16_Environment__canopy__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Canopy >::type value(valueSEXP);
    FF16_Environment__canopy__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__soil__get
plant::Internals FF16_Environment__soil__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__soil__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__soil__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__extrinsic_drivers__get
plant::ExtrinsicDrivers FF16_Environment__extrinsic_drivers__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__extrinsic_drivers__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__extrinsic_drivers__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__extrinsic_drivers__set
void FF16_Environment__extrinsic_drivers__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, plant::ExtrinsicDrivers value);
RcppExport SEXP _plant_FF16_Environment__extrinsic_drivers__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ExtrinsicDrivers >::type value(valueSEXP);
    FF16_Environment__extrinsic_drivers__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16r_Strategy__ctor
SEXP FF16r_Strategy__ctor();
RcppExport SEXP _plant_FF16r_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FF16r_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// K93_Strategy__ctor
SEXP K93_Strategy__ctor();
RcppExport SEXP _plant_K93_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(K93_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__ctor
plant::K93_Environment K93_Environment__ctor();
RcppExport SEXP _plant_K93_Environment__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(K93_Environment__ctor());
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__canopy_openness
double K93_Environment__canopy_openness(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double height);
RcppExport SEXP _plant_K93_Environment__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__clear
void K93_Environment__clear(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    K93_Environment__clear(obj_);
    return R_NilValue;
END_RCPP
}
// K93_Environment__set_fixed_environment
void K93_Environment__set_fixed_environment(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double value, double height_max);
RcppExport SEXP _plant_K93_Environment__set_fixed_environment(SEXP obj_SEXP, SEXP valueSEXP, SEXP height_maxSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< double >::type height_max(height_maxSEXP);
    K93_Environment__set_fixed_environment(obj_, value, height_max);
    return R_NilValue;
END_RCPP
}
// K93_Environment__time__get
double K93_Environment__time__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__time__set
void K93_Environment__time__set(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double value);
RcppExport SEXP _plant_K93_Environment__time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    K93_Environment__time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// K93_Environment__canopy__get
plant::Canopy K93_Environment__canopy__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__canopy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__canopy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__canopy__set
void K93_Environment__canopy__set(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, plant::Canopy value);
RcppExport SEXP _plant_K93_Environment__canopy__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Canopy >::type value(valueSEXP);
    K93_Environment__canopy__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// K93_Environment__ode_size__get
size_t K93_Environment__ode_size__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16w_Strategy__ctor
SEXP FF16w_Strategy__ctor();
RcppExport SEXP _plant_FF16w_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FF16w_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// ExtrinsicDrivers__ctor
plant::ExtrinsicDrivers ExtrinsicDrivers__ctor();
RcppExport SEXP _plant_ExtrinsicDrivers__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ExtrinsicDrivers__ctor());
    return rcpp_result_gen;
END_RCPP
}
// ExtrinsicDrivers__evaluate
double ExtrinsicDrivers__evaluate(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_, std::string driver_name, double u);
RcppExport SEXP _plant_ExtrinsicDrivers__evaluate(SEXP obj_SEXP, SEXP driver_nameSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type driver_name(driver_nameSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ExtrinsicDrivers__evaluate(obj_, driver_name, u));
    return rcpp_result_gen;
END_RCPP
}
// ExtrinsicDrivers__evaluate_range
std::vector<double> ExtrinsicDrivers__evaluate_range(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_, std::string driver_name, std::vector<double> u);
RcppExport SEXP _plant_ExtrinsicDrivers__evaluate_range(SEXP obj_SEXP, SEXP driver_nameSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type driver_name(driver_nameSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ExtrinsicDrivers__evaluate_range(obj_, driver_name, u));
    return rcpp_result_gen;
END_RCPP
}
// ExtrinsicDrivers__get_names
std::vector<std::string> ExtrinsicDrivers__get_names(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_);
RcppExport SEXP _plant_ExtrinsicDrivers__get_names(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(ExtrinsicDrivers__get_names(obj_));
    return rcpp_result_gen;
END_RCPP
}
// ExtrinsicDrivers__set_constant
void ExtrinsicDrivers__set_constant(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_, std::string driver_name, double k);
RcppExport SEXP _plant_ExtrinsicDrivers__set_constant(SEXP obj_SEXP, SEXP driver_nameSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type driver_name(driver_nameSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    ExtrinsicDrivers__set_constant(obj_, driver_name, k);
    return R_NilValue;
END_RCPP
}
// ExtrinsicDrivers__set_variable
void ExtrinsicDrivers__set_variable(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_, std::string driver_name, std::vector<double> x, std::vector<double> y);
RcppExport SEXP _plant_ExtrinsicDrivers__set_variable(SEXP obj_SEXP, SEXP driver_nameSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type driver_name(driver_nameSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    ExtrinsicDrivers__set_variable(obj_, driver_name, x, y);
    return R_NilValue;
END_RCPP
}
// ExtrinsicDrivers__set_extrapolate
void ExtrinsicDrivers__set_extrapolate(plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> obj_, std::string driver_name, bool extrapolate);
RcppExport SEXP _plant_ExtrinsicDrivers__set_extrapolate(SEXP obj_SEXP, SEXP driver_nameSEXP, SEXP extrapolateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ExtrinsicDrivers> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type driver_name(driver_nameSEXP);
    Rcpp::traits::input_parameter< bool >::type extrapolate(extrapolateSEXP);
    ExtrinsicDrivers__set_extrapolate(obj_, driver_name, extrapolate);
    return R_NilValue;
END_RCPP
}
// test_adaptive_interpolator
plant::interpolator::Interpolator test_adaptive_interpolator(Rcpp::Function f, double a, double b);
RcppExport SEXP _plant_test_adaptive_interpolator(SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_adaptive_interpolator(f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// node_schedule_default__Parameters___FF16__FF16_Env
plant::NodeSchedule node_schedule_default__Parameters___FF16__FF16_Env(const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_node_schedule_default__Parameters___FF16__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(node_schedule_default__Parameters___FF16__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_node_schedule__Parameters___FF16__FF16_Env
plant::NodeSchedule make_node_schedule__Parameters___FF16__FF16_Env(const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_make_node_schedule__Parameters___FF16__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_node_schedule__Parameters___FF16__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// node_schedule_default__Parameters___FF16r__FF16_Env
plant::NodeSchedule node_schedule_default__Parameters___FF16r__FF16_Env(const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_node_schedule_default__Parameters___FF16r__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(node_schedule_default__Parameters___FF16r__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_node_schedule__Parameters___FF16r__FF16_Env
plant::NodeSchedule make_node_schedule__Parameters___FF16r__FF16_Env(const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_make_node_schedule__Parameters___FF16r__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_node_schedule__Parameters___FF16r__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// node_schedule_default__Parameters___FF16w__FF16_Env
plant::NodeSchedule node_schedule_default__Parameters___FF16w__FF16_Env(const plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_node_schedule_default__Parameters___FF16w__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(node_schedule_default__Parameters___FF16w__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_node_schedule__Parameters___FF16w__FF16_Env
plant::NodeSchedule make_node_schedule__Parameters___FF16w__FF16_Env(const plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_make_node_schedule__Parameters___FF16w__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16w_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_node_schedule__Parameters___FF16w__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// test_gradient_fd1
double test_gradient_fd1(Rcpp::Function f, double x, double dx, int direction, double fx);
RcppExport SEXP _plant_test_gradient_fd1(SEXP fSEXP, SEXP xSEXP, SEXP dxSEXP, SEXP directionSEXP, SEXP fxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    Rcpp::traits::input_parameter< int >::type direction(directionSEXP);
    Rcpp::traits::input_parameter< double >::type fx(fxSEXP);
    rcpp_result_gen = Rcpp::wrap(test_gradient_fd1(f, x, dx, direction, fx));
    return rcpp_result_gen;
END_RCPP
}
// test_gradient_richardson
double test_gradient_richardson(Rcpp::Function f, double x, double d, size_t r);
RcppExport SEXP _plant_test_gradient_richardson(SEXP fSEXP, SEXP xSEXP, SEXP dSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< size_t >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(test_gradient_richardson(f, x, d, r));
    return rcpp_result_gen;
END_RCPP
}
// FF16_oderunner_individual_internals
plant::Internals FF16_oderunner_individual_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment>>& obj);
RcppExport SEXP _plant_FF16_oderunner_individual_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_oderunner_individual_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// FF16r_oderunner_individual_internals
plant::Internals FF16r_oderunner_individual_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment>>& obj);
RcppExport SEXP _plant_FF16r_oderunner_individual_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16r_oderunner_individual_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// K93_oderunner_individual_internals
plant::Internals K93_oderunner_individual_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment>>& obj);
RcppExport SEXP _plant_K93_oderunner_individual_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_oderunner_individual_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// FF16w_oderunner_individual_internals
plant::Internals FF16w_oderunner_individual_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment>>& obj);
RcppExport SEXP _plant_FF16w_oderunner_individual_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16w_Strategy, plant::FF16_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16w_oderunner_individual_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// node_schedule_default__Parameters___K93__K93_Env
plant::NodeSchedule node_schedule_default__Parameters___K93__K93_Env(const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& p);
RcppExport SEXP _plant_node_schedule_default__Parameters___K93__K93_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(node_schedule_default__Parameters___K93__K93_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_node_schedule__Parameters___K93__K93_Env
plant::NodeSchedule make_node_schedule__Parameters___K93__K93_Env(const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& p);
RcppExport SEXP _plant_make_node_schedule__Parameters___K93__K93_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_node_schedule__Parameters___K93__K93_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// node_schedule_times_default
std::vector<double> node_schedule_times_default(double max_time);
RcppExport SEXP _plant_node_schedule_times_default(SEXP max_timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    rcpp_result_gen = Rcpp::wrap(node_schedule_times_default(max_time));
    return rcpp_result_gen;
END_RCPP
}
// test_uniroot
double test_uniroot(Rcpp::Function f, double min, double max);
RcppExport SEXP _plant_test_uniroot(SEXP fSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(test_uniroot(f, min, max));
    return rcpp_result_gen;
END_RCPP
}
// trapezium
double trapezium(const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_trapezium(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapezium(x, y));
    return rcpp_result_gen;
END_RCPP
}
// trapezium_vector
std::vector<double> trapezium_vector(const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_trapezium_vector(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapezium_vector(x, y));
    return rcpp_result_gen;
END_RCPP
}
// local_error_integration
std::vector<double> local_error_integration(const std::vector<double>& x, const std::vector<double>& y, double scal);
RcppExport SEXP _plant_local_error_integration(SEXP xSEXP, SEXP ySEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(local_error_integration(x, y, scal));
    return rcpp_result_gen;
END_RCPP
}
// matrix_to_list
Rcpp::List matrix_to_list(Rcpp::NumericMatrix x);
RcppExport SEXP _plant_matrix_to_list(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_to_list(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_plant_Leaf__ctor", (DL_FUNC) &_plant_Leaf__ctor, 16},
    {"_plant_Leaf__initialize_integrator", (DL_FUNC) &_plant_Leaf__initialize_integrator, 3},
    {"_plant_Leaf__set_physiology", (DL_FUNC) &_plant_Leaf__set_physiology, 12},
    {"_plant_Leaf__proportion_of_conductivity", (DL_FUNC) &_plant_Leaf__proportion_of_conductivity, 2},
    {"_plant_Leaf__arrh_curve", (DL_FUNC) &_plant_Leaf__arrh_curve, 4},
    {"_plant_Leaf__peak_arrh_curve", (DL_FUNC) &_plant_Leaf__peak_arrh_curve, 6},
    {"_plant_Leaf__transpiration", (DL_FUNC) &_plant_Leaf__transpiration, 2},
    {"_plant_Leaf__transpiration_full_integration", (DL_FUNC) &_plant_Leaf__transpiration_full_integration, 2},
    {"_plant_Leaf__stom_cond_CO2", (DL_FUNC) &_plant_Leaf__stom_cond_CO2, 2},
    {"_plant_Leaf__transpiration_to_psi_stem", (DL_FUNC) &_plant_Leaf__transpiration_to_psi_stem, 2},
    {"_plant_Leaf__assim_rubisco_limited", (DL_FUNC) &_plant_Leaf__assim_rubisco_limited, 2},
    {"_plant_Leaf__assim_electron_limited", (DL_FUNC) &_plant_Leaf__assim_electron_limited, 2},
    {"_plant_Leaf__assim_colimited", (DL_FUNC) &_plant_Leaf__assim_colimited, 2},
    {"_plant_Leaf__assim_minus_stom_cond_CO2", (DL_FUNC) &_plant_Leaf__assim_minus_stom_cond_CO2, 3},
    {"_plant_Leaf__electron_transport", (DL_FUNC) &_plant_Leaf__electron_transport, 1},
    {"_plant_Leaf__assim_colimited_analytical", (DL_FUNC) &_plant_Leaf__assim_colimited_analytical, 2},
    {"_plant_Leaf__set_leaf_states_rates_from_psi_stem", (DL_FUNC) &_plant_Leaf__set_leaf_states_rates_from_psi_stem, 2},
    {"_plant_Leaf__set_leaf_states_rates_from_psi_stem_analytical", (DL_FUNC) &_plant_Leaf__set_leaf_states_rates_from_psi_stem_analytical, 2},
    {"_plant_Leaf__psi_stem_to_ci", (DL_FUNC) &_plant_Leaf__psi_stem_to_ci, 2},
    {"_plant_Leaf__psi_stem_to_ci_analytical", (DL_FUNC) &_plant_Leaf__psi_stem_to_ci_analytical, 2},
    {"_plant_Leaf__hydraulic_cost_Sperry", (DL_FUNC) &_plant_Leaf__hydraulic_cost_Sperry, 2},
    {"_plant_Leaf__hydraulic_cost_Bartlett", (DL_FUNC) &_plant_Leaf__hydraulic_cost_Bartlett, 2},
    {"_plant_Leaf__hydraulic_cost_TF", (DL_FUNC) &_plant_Leaf__hydraulic_cost_TF, 2},
    {"_plant_Leaf__profit_psi_stem_Sperry", (DL_FUNC) &_plant_Leaf__profit_psi_stem_Sperry, 2},
    {"_plant_Leaf__profit_Sperry_ci", (DL_FUNC) &_plant_Leaf__profit_Sperry_ci, 2},
    {"_plant_Leaf__profit_psi_stem_Sperry_analytical", (DL_FUNC) &_plant_Leaf__profit_psi_stem_Sperry_analytical, 2},
    {"_plant_Leaf__profit_Sperry_ci_analytical", (DL_FUNC) &_plant_Leaf__profit_Sperry_ci_analytical, 2},
    {"_plant_Leaf__profit_psi_stem_Bartlett", (DL_FUNC) &_plant_Leaf__profit_psi_stem_Bartlett, 2},
    {"_plant_Leaf__profit_psi_stem_TF", (DL_FUNC) &_plant_Leaf__profit_psi_stem_TF, 2},
    {"_plant_Leaf__profit_psi_stem_Bartlett_analytical", (DL_FUNC) &_plant_Leaf__profit_psi_stem_Bartlett_analytical, 2},
    {"_plant_Leaf__optimise_psi_stem_Sperry_Newton", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_Sperry_Newton, 2},
    {"_plant_Leaf__optimise_psi_stem_Sperry_Newton_analytical", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_Sperry_Newton_analytical, 2},
    {"_plant_Leaf__optimise_psi_stem_Sperry", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_Sperry, 1},
    {"_plant_Leaf__optimise_psi_stem_Sperry_analytical", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_Sperry_analytical, 1},
    {"_plant_Leaf__optimise_ci_Sperry_Newton", (DL_FUNC) &_plant_Leaf__optimise_ci_Sperry_Newton, 2},
    {"_plant_Leaf__optimise_ci_Sperry", (DL_FUNC) &_plant_Leaf__optimise_ci_Sperry, 2},
    {"_plant_Leaf__optimise_ci_Sperry_analytical", (DL_FUNC) &_plant_Leaf__optimise_ci_Sperry_analytical, 2},
    {"_plant_Leaf__optimise_ci_Sperry_Newton_analytical", (DL_FUNC) &_plant_Leaf__optimise_ci_Sperry_Newton_analytical, 2},
    {"_plant_Leaf__optimise_psi_stem_Bartlett", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_Bartlett, 1},
    {"_plant_Leaf__optimise_psi_stem_TF", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_TF, 1},
    {"_plant_Leaf__optimise_psi_stem_TF_newton", (DL_FUNC) &_plant_Leaf__optimise_psi_stem_TF_newton, 2},
    {"_plant_Leaf__calculate_cost_LCT", (DL_FUNC) &_plant_Leaf__calculate_cost_LCT, 2},
    {"_plant_Leaf__ci___get", (DL_FUNC) &_plant_Leaf__ci___get, 1},
    {"_plant_Leaf__ci___set", (DL_FUNC) &_plant_Leaf__ci___set, 2},
    {"_plant_Leaf__stom_cond_CO2___get", (DL_FUNC) &_plant_Leaf__stom_cond_CO2___get, 1},
    {"_plant_Leaf__stom_cond_CO2___set", (DL_FUNC) &_plant_Leaf__stom_cond_CO2___set, 2},
    {"_plant_Leaf__assim_colimited___get", (DL_FUNC) &_plant_Leaf__assim_colimited___get, 1},
    {"_plant_Leaf__assim_colimited___set", (DL_FUNC) &_plant_Leaf__assim_colimited___set, 2},
    {"_plant_Leaf__transpiration___get", (DL_FUNC) &_plant_Leaf__transpiration___get, 1},
    {"_plant_Leaf__transpiration___set", (DL_FUNC) &_plant_Leaf__transpiration___set, 2},
    {"_plant_Leaf__profit___get", (DL_FUNC) &_plant_Leaf__profit___get, 1},
    {"_plant_Leaf__profit___set", (DL_FUNC) &_plant_Leaf__profit___set, 2},
    {"_plant_Leaf__psi_stem__get", (DL_FUNC) &_plant_Leaf__psi_stem__get, 1},
    {"_plant_Leaf__psi_stem__set", (DL_FUNC) &_plant_Leaf__psi_stem__set, 2},
    {"_plant_Leaf__lambda___get", (DL_FUNC) &_plant_Leaf__lambda___get, 1},
    {"_plant_Leaf__lambda___set", (DL_FUNC) &_plant_Leaf__lambda___set, 2},
    {"_plant_Leaf__lambda_analytical___get", (DL_FUNC) &_plant_Leaf__lambda_analytical___get, 1},
    {"_plant_Leaf__lambda_analytical___set", (DL_FUNC) &_plant_Leaf__lambda_analytical___set, 2},
    {"_plant_Leaf__electron_transport___get", (DL_FUNC) &_plant_Leaf__electron_transport___get, 1},
    {"_plant_Leaf__electron_transport___set", (DL_FUNC) &_plant_Leaf__electron_transport___set, 2},
    {"_plant_Leaf__gamma___get", (DL_FUNC) &_plant_Leaf__gamma___get, 1},
    {"_plant_Leaf__gamma___set", (DL_FUNC) &_plant_Leaf__gamma___set, 2},
    {"_plant_Leaf__ko___get", (DL_FUNC) &_plant_Leaf__ko___get, 1},
    {"_plant_Leaf__ko___set", (DL_FUNC) &_plant_Leaf__ko___set, 2},
    {"_plant_Leaf__kc___get", (DL_FUNC) &_plant_Leaf__kc___get, 1},
    {"_plant_Leaf__kc___set", (DL_FUNC) &_plant_Leaf__kc___set, 2},
    {"_plant_Leaf__km___get", (DL_FUNC) &_plant_Leaf__km___get, 1},
    {"_plant_Leaf__km___set", (DL_FUNC) &_plant_Leaf__km___set, 2},
    {"_plant_Leaf__R_d___get", (DL_FUNC) &_plant_Leaf__R_d___get, 1},
    {"_plant_Leaf__R_d___set", (DL_FUNC) &_plant_Leaf__R_d___set, 2},
    {"_plant_Leaf__leaf_specific_conductance_max___get", (DL_FUNC) &_plant_Leaf__leaf_specific_conductance_max___get, 1},
    {"_plant_Leaf__leaf_specific_conductance_max___set", (DL_FUNC) &_plant_Leaf__leaf_specific_conductance_max___set, 2},
    {"_plant_Leaf__vcmax___get", (DL_FUNC) &_plant_Leaf__vcmax___get, 1},
    {"_plant_Leaf__vcmax___set", (DL_FUNC) &_plant_Leaf__vcmax___set, 2},
    {"_plant_Leaf__jmax___get", (DL_FUNC) &_plant_Leaf__jmax___get, 1},
    {"_plant_Leaf__jmax___set", (DL_FUNC) &_plant_Leaf__jmax___set, 2},
    {"_plant_Leaf__rho___get", (DL_FUNC) &_plant_Leaf__rho___get, 1},
    {"_plant_Leaf__rho___set", (DL_FUNC) &_plant_Leaf__rho___set, 2},
    {"_plant_Leaf__a_bio___get", (DL_FUNC) &_plant_Leaf__a_bio___get, 1},
    {"_plant_Leaf__a_bio___set", (DL_FUNC) &_plant_Leaf__a_bio___set, 2},
    {"_plant_Leaf__PPFD___get", (DL_FUNC) &_plant_Leaf__PPFD___get, 1},
    {"_plant_Leaf__PPFD___set", (DL_FUNC) &_plant_Leaf__PPFD___set, 2},
    {"_plant_Leaf__atm_vpd___get", (DL_FUNC) &_plant_Leaf__atm_vpd___get, 1},
    {"_plant_Leaf__atm_vpd___set", (DL_FUNC) &_plant_Leaf__atm_vpd___set, 2},
    {"_plant_Leaf__ca___get", (DL_FUNC) &_plant_Leaf__ca___get, 1},
    {"_plant_Leaf__ca___set", (DL_FUNC) &_plant_Leaf__ca___set, 2},
    {"_plant_Leaf__psi_soil___get", (DL_FUNC) &_plant_Leaf__psi_soil___get, 1},
    {"_plant_Leaf__psi_soil___set", (DL_FUNC) &_plant_Leaf__psi_soil___set, 2},
    {"_plant_Leaf__leaf_temp___get", (DL_FUNC) &_plant_Leaf__leaf_temp___get, 1},
    {"_plant_Leaf__leaf_temp___set", (DL_FUNC) &_plant_Leaf__leaf_temp___set, 2},
    {"_plant_Leaf__atm_o2_kpa___get", (DL_FUNC) &_plant_Leaf__atm_o2_kpa___get, 1},
    {"_plant_Leaf__atm_o2_kpa___set", (DL_FUNC) &_plant_Leaf__atm_o2_kpa___set, 2},
    {"_plant_Leaf__atm_kpa___get", (DL_FUNC) &_plant_Leaf__atm_kpa___get, 1},
    {"_plant_Leaf__atm_kpa___set", (DL_FUNC) &_plant_Leaf__atm_kpa___set, 2},
    {"_plant_Leaf__hydraulic_cost___get", (DL_FUNC) &_plant_Leaf__hydraulic_cost___get, 1},
    {"_plant_Leaf__hydraulic_cost___set", (DL_FUNC) &_plant_Leaf__hydraulic_cost___set, 2},
    {"_plant_Leaf__opt_psi_stem___get", (DL_FUNC) &_plant_Leaf__opt_psi_stem___get, 1},
    {"_plant_Leaf__opt_psi_stem___set", (DL_FUNC) &_plant_Leaf__opt_psi_stem___set, 2},
    {"_plant_Leaf__opt_ci___get", (DL_FUNC) &_plant_Leaf__opt_ci___get, 1},
    {"_plant_Leaf__opt_ci___set", (DL_FUNC) &_plant_Leaf__opt_ci___set, 2},
    {"_plant_Leaf__count__get", (DL_FUNC) &_plant_Leaf__count__get, 1},
    {"_plant_Leaf__count__set", (DL_FUNC) &_plant_Leaf__count__set, 2},
    {"_plant_Leaf__GSS_count__get", (DL_FUNC) &_plant_Leaf__GSS_count__get, 1},
    {"_plant_Leaf__GSS_count__set", (DL_FUNC) &_plant_Leaf__GSS_count__set, 2},
    {"_plant_Lorenz__ctor", (DL_FUNC) &_plant_Lorenz__ctor, 3},
    {"_plant_Lorenz__ode_size__get", (DL_FUNC) &_plant_Lorenz__ode_size__get, 1},
    {"_plant_Lorenz__ode_state__get", (DL_FUNC) &_plant_Lorenz__ode_state__get, 1},
    {"_plant_Lorenz__ode_state__set", (DL_FUNC) &_plant_Lorenz__ode_state__set, 2},
    {"_plant_Lorenz__ode_rates__get", (DL_FUNC) &_plant_Lorenz__ode_rates__get, 1},
    {"_plant_Lorenz__pars__get", (DL_FUNC) &_plant_Lorenz__pars__get, 1},
    {"_plant_OdeR__ctor", (DL_FUNC) &_plant_OdeR__ctor, 3},
    {"_plant_OdeR__update_state", (DL_FUNC) &_plant_OdeR__update_state, 1},
    {"_plant_OdeRunner___Lorenz__ctor", (DL_FUNC) &_plant_OdeRunner___Lorenz__ctor, 2},
    {"_plant_OdeRunner___Lorenz__advance", (DL_FUNC) &_plant_OdeRunner___Lorenz__advance, 2},
    {"_plant_OdeRunner___Lorenz__advance_fixed", (DL_FUNC) &_plant_OdeRunner___Lorenz__advance_fixed, 2},
    {"_plant_OdeRunner___Lorenz__step", (DL_FUNC) &_plant_OdeRunner___Lorenz__step, 1},
    {"_plant_OdeRunner___Lorenz__step_to", (DL_FUNC) &_plant_OdeRunner___Lorenz__step_to, 2},
    {"_plant_OdeRunner___Lorenz__set_state", (DL_FUNC) &_plant_OdeRunner___Lorenz__set_state, 3},
    {"_plant_OdeRunner___Lorenz__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___Lorenz__set_state_from_system, 1},
    {"_plant_OdeRunner___Lorenz__time__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__time__get, 1},
    {"_plant_OdeRunner___Lorenz__state__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__state__get, 1},
    {"_plant_OdeRunner___Lorenz__times__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__times__get, 1},
    {"_plant_OdeRunner___Lorenz__object__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__object__get, 1},
    {"_plant_OdeRunner___OdeR__ctor", (DL_FUNC) &_plant_OdeRunner___OdeR__ctor, 2},
    {"_plant_OdeRunner___OdeR__advance", (DL_FUNC) &_plant_OdeRunner___OdeR__advance, 2},
    {"_plant_OdeRunner___OdeR__advance_fixed", (DL_FUNC) &_plant_OdeRunner___OdeR__advance_fixed, 2},
    {"_plant_OdeRunner___OdeR__step", (DL_FUNC) &_plant_OdeRunner___OdeR__step, 1},
    {"_plant_OdeRunner___OdeR__step_to", (DL_FUNC) &_plant_OdeRunner___OdeR__step_to, 2},
    {"_plant_OdeRunner___OdeR__set_state", (DL_FUNC) &_plant_OdeRunner___OdeR__set_state, 3},
    {"_plant_OdeRunner___OdeR__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___OdeR__set_state_from_system, 1},
    {"_plant_OdeRunner___OdeR__time__get", (DL_FUNC) &_plant_OdeRunner___OdeR__time__get, 1},
    {"_plant_OdeRunner___OdeR__state__get", (DL_FUNC) &_plant_OdeRunner___OdeR__state__get, 1},
    {"_plant_OdeRunner___OdeR__times__get", (DL_FUNC) &_plant_OdeRunner___OdeR__times__get, 1},
    {"_plant_OdeRunner___OdeR__object__get", (DL_FUNC) &_plant_OdeRunner___OdeR__object__get, 1},
    {"_plant_OdeRunner___FF16__ctor", (DL_FUNC) &_plant_OdeRunner___FF16__ctor, 2},
    {"_plant_OdeRunner___FF16__advance", (DL_FUNC) &_plant_OdeRunner___FF16__advance, 2},
    {"_plant_OdeRunner___FF16__advance_fixed", (DL_FUNC) &_plant_OdeRunner___FF16__advance_fixed, 2},
    {"_plant_OdeRunner___FF16__step", (DL_FUNC) &_plant_OdeRunner___FF16__step, 1},
    {"_plant_OdeRunner___FF16__step_to", (DL_FUNC) &_plant_OdeRunner___FF16__step_to, 2},
    {"_plant_OdeRunner___FF16__set_state", (DL_FUNC) &_plant_OdeRunner___FF16__set_state, 3},
    {"_plant_OdeRunner___FF16__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___FF16__set_state_from_system, 1},
    {"_plant_OdeRunner___FF16__time__get", (DL_FUNC) &_plant_OdeRunner___FF16__time__get, 1},
    {"_plant_OdeRunner___FF16__state__get", (DL_FUNC) &_plant_OdeRunner___FF16__state__get, 1},
    {"_plant_OdeRunner___FF16__times__get", (DL_FUNC) &_plant_OdeRunner___FF16__times__get, 1},
    {"_plant_OdeRunner___FF16__object__get", (DL_FUNC) &_plant_OdeRunner___FF16__object__get, 1},
    {"_plant_OdeRunner___FF16w__ctor", (DL_FUNC) &_plant_OdeRunner___FF16w__ctor, 2},
    {"_plant_OdeRunner___FF16w__advance", (DL_FUNC) &_plant_OdeRunner___FF16w__advance, 2},
    {"_plant_OdeRunner___FF16w__advance_fixed", (DL_FUNC) &_plant_OdeRunner___FF16w__advance_fixed, 2},
    {"_plant_OdeRunner___FF16w__step", (DL_FUNC) &_plant_OdeRunner___FF16w__step, 1},
    {"_plant_OdeRunner___FF16w__step_to", (DL_FUNC) &_plant_OdeRunner___FF16w__step_to, 2},
    {"_plant_OdeRunner___FF16w__set_state", (DL_FUNC) &_plant_OdeRunner___FF16w__set_state, 3},
    {"_plant_OdeRunner___FF16w__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___FF16w__set_state_from_system, 1},
    {"_plant_OdeRunner___FF16w__time__get", (DL_FUNC) &_plant_OdeRunner___FF16w__time__get, 1},
    {"_plant_OdeRunner___FF16w__state__get", (DL_FUNC) &_plant_OdeRunner___FF16w__state__get, 1},
    {"_plant_OdeRunner___FF16w__times__get", (DL_FUNC) &_plant_OdeRunner___FF16w__times__get, 1},
    {"_plant_OdeRunner___FF16w__object__get", (DL_FUNC) &_plant_OdeRunner___FF16w__object__get, 1},
    {"_plant_OdeRunner___FF16r__ctor", (DL_FUNC) &_plant_OdeRunner___FF16r__ctor, 2},
    {"_plant_OdeRunner___FF16r__advance", (DL_FUNC) &_plant_OdeRunner___FF16r__advance, 2},
    {"_plant_OdeRunner___FF16r__advance_fixed", (DL_FUNC) &_plant_OdeRunner___FF16r__advance_fixed, 2},
    {"_plant_OdeRunner___FF16r__step", (DL_FUNC) &_plant_OdeRunner___FF16r__step, 1},
    {"_plant_OdeRunner___FF16r__step_to", (DL_FUNC) &_plant_OdeRunner___FF16r__step_to, 2},
    {"_plant_OdeRunner___FF16r__set_state", (DL_FUNC) &_plant_OdeRunner___FF16r__set_state, 3},
    {"_plant_OdeRunner___FF16r__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___FF16r__set_state_from_system, 1},
    {"_plant_OdeRunner___FF16r__time__get", (DL_FUNC) &_plant_OdeRunner___FF16r__time__get, 1},
    {"_plant_OdeRunner___FF16r__state__get", (DL_FUNC) &_plant_OdeRunner___FF16r__state__get, 1},
    {"_plant_OdeRunner___FF16r__times__get", (DL_FUNC) &_plant_OdeRunner___FF16r__times__get, 1},
    {"_plant_OdeRunner___FF16r__object__get", (DL_FUNC) &_plant_OdeRunner___FF16r__object__get, 1},
    {"_plant_OdeRunner___K93__ctor", (DL_FUNC) &_plant_OdeRunner___K93__ctor, 2},
    {"_plant_OdeRunner___K93__advance", (DL_FUNC) &_plant_OdeRunner___K93__advance, 2},
    {"_plant_OdeRunner___K93__advance_fixed", (DL_FUNC) &_plant_OdeRunner___K93__advance_fixed, 2},
    {"_plant_OdeRunner___K93__step", (DL_FUNC) &_plant_OdeRunner___K93__step, 1},
    {"_plant_OdeRunner___K93__step_to", (DL_FUNC) &_plant_OdeRunner___K93__step_to, 2},
    {"_plant_OdeRunner___K93__set_state", (DL_FUNC) &_plant_OdeRunner___K93__set_state, 3},
    {"_plant_OdeRunner___K93__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___K93__set_state_from_system, 1},
    {"_plant_OdeRunner___K93__time__get", (DL_FUNC) &_plant_OdeRunner___K93__time__get, 1},
    {"_plant_OdeRunner___K93__state__get", (DL_FUNC) &_plant_OdeRunner___K93__state__get, 1},
    {"_plant_OdeRunner___K93__times__get", (DL_FUNC) &_plant_OdeRunner___K93__times__get, 1},
    {"_plant_OdeRunner___K93__object__get", (DL_FUNC) &_plant_OdeRunner___K93__object__get, 1},
    {"_plant_NodeScheduleEvent__ctor", (DL_FUNC) &_plant_NodeScheduleEvent__ctor, 2},
    {"_plant_NodeScheduleEvent__species_index__get", (DL_FUNC) &_plant_NodeScheduleEvent__species_index__get, 1},
    {"_plant_NodeScheduleEvent__species_index__set", (DL_FUNC) &_plant_NodeScheduleEvent__species_index__set, 2},
    {"_plant_NodeScheduleEvent__times__get", (DL_FUNC) &_plant_NodeScheduleEvent__times__get, 1},
    {"_plant_NodeScheduleEvent__time_introduction__get", (DL_FUNC) &_plant_NodeScheduleEvent__time_introduction__get, 1},
    {"_plant_NodeScheduleEvent__time_end__get", (DL_FUNC) &_plant_NodeScheduleEvent__time_end__get, 1},
    {"_plant_NodeScheduleEvent__species_index_raw__get", (DL_FUNC) &_plant_NodeScheduleEvent__species_index_raw__get, 1},
    {"_plant_NodeSchedule__ctor", (DL_FUNC) &_plant_NodeSchedule__ctor, 1},
    {"_plant_NodeSchedule__expand", (DL_FUNC) &_plant_NodeSchedule__expand, 3},
    {"_plant_NodeSchedule__clear_times", (DL_FUNC) &_plant_NodeSchedule__clear_times, 2},
    {"_plant_NodeSchedule__clear_ode_times", (DL_FUNC) &_plant_NodeSchedule__clear_ode_times, 1},
    {"_plant_NodeSchedule__set_times", (DL_FUNC) &_plant_NodeSchedule__set_times, 3},
    {"_plant_NodeSchedule__times", (DL_FUNC) &_plant_NodeSchedule__times, 2},
    {"_plant_NodeSchedule__reset", (DL_FUNC) &_plant_NodeSchedule__reset, 1},
    {"_plant_NodeSchedule__pop", (DL_FUNC) &_plant_NodeSchedule__pop, 1},
    {"_plant_NodeSchedule__copy", (DL_FUNC) &_plant_NodeSchedule__copy, 1},
    {"_plant_NodeSchedule__size__get", (DL_FUNC) &_plant_NodeSchedule__size__get, 1},
    {"_plant_NodeSchedule__n_species__get", (DL_FUNC) &_plant_NodeSchedule__n_species__get, 1},
    {"_plant_NodeSchedule__next_event__get", (DL_FUNC) &_plant_NodeSchedule__next_event__get, 1},
    {"_plant_NodeSchedule__remaining__get", (DL_FUNC) &_plant_NodeSchedule__remaining__get, 1},
    {"_plant_NodeSchedule__max_time__get", (DL_FUNC) &_plant_NodeSchedule__max_time__get, 1},
    {"_plant_NodeSchedule__max_time__set", (DL_FUNC) &_plant_NodeSchedule__max_time__set, 2},
    {"_plant_NodeSchedule__ode_times__get", (DL_FUNC) &_plant_NodeSchedule__ode_times__get, 1},
    {"_plant_NodeSchedule__ode_times__set", (DL_FUNC) &_plant_NodeSchedule__ode_times__set, 2},
    {"_plant_NodeSchedule__use_ode_times__get", (DL_FUNC) &_plant_NodeSchedule__use_ode_times__get, 1},
    {"_plant_NodeSchedule__use_ode_times__set", (DL_FUNC) &_plant_NodeSchedule__use_ode_times__set, 2},
    {"_plant_NodeSchedule__all_times__get", (DL_FUNC) &_plant_NodeSchedule__all_times__get, 1},
    {"_plant_NodeSchedule__all_times__set", (DL_FUNC) &_plant_NodeSchedule__all_times__set, 2},
    {"_plant_Control__ctor", (DL_FUNC) &_plant_Control__ctor, 0},
    {"_plant_OdeControl__ctor", (DL_FUNC) &_plant_OdeControl__ctor, 0},
    {"_plant_QK__ctor", (DL_FUNC) &_plant_QK__ctor, 1},
    {"_plant_QK__integrate", (DL_FUNC) &_plant_QK__integrate, 4},
    {"_plant_QK__integrate_vector_x", (DL_FUNC) &_plant_QK__integrate_vector_x, 3},
    {"_plant_QK__integrate_vector", (DL_FUNC) &_plant_QK__integrate_vector, 4},
    {"_plant_QK__last_area__get", (DL_FUNC) &_plant_QK__last_area__get, 1},
    {"_plant_QK__last_error__get", (DL_FUNC) &_plant_QK__last_error__get, 1},
    {"_plant_QK__last_area_abs__get", (DL_FUNC) &_plant_QK__last_area_abs__get, 1},
    {"_plant_QK__last_area_asc__get", (DL_FUNC) &_plant_QK__last_area_asc__get, 1},
    {"_plant_QAG__ctor", (DL_FUNC) &_plant_QAG__ctor, 4},
    {"_plant_QAG__integrate", (DL_FUNC) &_plant_QAG__integrate, 4},
    {"_plant_QAG__integrate_with_intervals", (DL_FUNC) &_plant_QAG__integrate_with_intervals, 3},
    {"_plant_QAG__integrate_with_last_intervals", (DL_FUNC) &_plant_QAG__integrate_with_last_intervals, 4},
    {"_plant_QAG__last_area__get", (DL_FUNC) &_plant_QAG__last_area__get, 1},
    {"_plant_QAG__last_error__get", (DL_FUNC) &_plant_QAG__last_error__get, 1},
    {"_plant_QAG__last_iterations__get", (DL_FUNC) &_plant_QAG__last_iterations__get, 1},
    {"_plant_QAG__last_intervals__get", (DL_FUNC) &_plant_QAG__last_intervals__get, 1},
    {"_plant_QAG__is_adaptive__get", (DL_FUNC) &_plant_QAG__is_adaptive__get, 1},
    {"_plant_Interpolator__ctor", (DL_FUNC) &_plant_Interpolator__ctor, 0},
    {"_plant_Interpolator__init", (DL_FUNC) &_plant_Interpolator__init, 3},
    {"_plant_Interpolator__eval", (DL_FUNC) &_plant_Interpolator__eval, 2},
    {"_plant_Interpolator__set_extrapolate", (DL_FUNC) &_plant_Interpolator__set_extrapolate, 2},
    {"_plant_Interpolator__x__get", (DL_FUNC) &_plant_Interpolator__x__get, 1},
    {"_plant_Interpolator__y__get", (DL_FUNC) &_plant_Interpolator__y__get, 1},
    {"_plant_Interpolator__xy__get", (DL_FUNC) &_plant_Interpolator__xy__get, 1},
    {"_plant_Interpolator__size__get", (DL_FUNC) &_plant_Interpolator__size__get, 1},
    {"_plant_Interpolator__min__get", (DL_FUNC) &_plant_Interpolator__min__get, 1},
    {"_plant_Interpolator__max__get", (DL_FUNC) &_plant_Interpolator__max__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ctor, 1},
    {"_plant_Individual___FF16__FF16_Env__state", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__state, 2},
    {"_plant_Individual___FF16__FF16_Env__rate", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__rate, 2},
    {"_plant_Individual___FF16__FF16_Env__aux", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux, 2},
    {"_plant_Individual___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__set_state, 3},
    {"_plant_Individual___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Individual___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__compute_rates, 2},
    {"_plant_Individual___FF16__FF16_Env__establishment_probability", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__establishment_probability, 2},
    {"_plant_Individual___FF16__FF16_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__net_mass_production_dt, 2},
    {"_plant_Individual___FF16__FF16_Env__reset_mortality", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__reset_mortality, 1},
    {"_plant_Individual___FF16__FF16_Env__resource_compensation_point", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__resource_compensation_point, 1},
    {"_plant_Individual___FF16__FF16_Env__strategy__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__strategy__get, 1},
    {"_plant_Individual___FF16__FF16_Env__internals__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__internals__get, 1},
    {"_plant_Individual___FF16__FF16_Env__aux_size__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux_size__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_names__get, 1},
    {"_plant_Individual___FF16__FF16_Env__aux_names__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux_names__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Individual___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Individual___FF16__FF16_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__mortality_probability__get, 1},
    {"_plant_Individual___FF16__FF16_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__strategy_name__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ctor, 1},
    {"_plant_Individual___FF16w__FF16_Env__state", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__state, 2},
    {"_plant_Individual___FF16w__FF16_Env__rate", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__rate, 2},
    {"_plant_Individual___FF16w__FF16_Env__aux", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__aux, 2},
    {"_plant_Individual___FF16w__FF16_Env__set_state", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__set_state, 3},
    {"_plant_Individual___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_Individual___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__compute_rates, 2},
    {"_plant_Individual___FF16w__FF16_Env__establishment_probability", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__establishment_probability, 2},
    {"_plant_Individual___FF16w__FF16_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__net_mass_production_dt, 2},
    {"_plant_Individual___FF16w__FF16_Env__reset_mortality", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__reset_mortality, 1},
    {"_plant_Individual___FF16w__FF16_Env__resource_compensation_point", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__resource_compensation_point, 1},
    {"_plant_Individual___FF16w__FF16_Env__strategy__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__strategy__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__internals__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__internals__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__aux_size__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__aux_size__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ode_names__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__aux_names__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__aux_names__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ode_state__set, 2},
    {"_plant_Individual___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__mortality_probability__get, 1},
    {"_plant_Individual___FF16w__FF16_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___FF16w__FF16_Env__strategy_name__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ctor, 1},
    {"_plant_Individual___FF16r__FF16_Env__state", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__state, 2},
    {"_plant_Individual___FF16r__FF16_Env__rate", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__rate, 2},
    {"_plant_Individual___FF16r__FF16_Env__aux", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux, 2},
    {"_plant_Individual___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__set_state, 3},
    {"_plant_Individual___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Individual___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_Individual___FF16r__FF16_Env__establishment_probability", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__establishment_probability, 2},
    {"_plant_Individual___FF16r__FF16_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__net_mass_production_dt, 2},
    {"_plant_Individual___FF16r__FF16_Env__reset_mortality", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__reset_mortality, 1},
    {"_plant_Individual___FF16r__FF16_Env__resource_compensation_point", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__resource_compensation_point, 1},
    {"_plant_Individual___FF16r__FF16_Env__strategy__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__strategy__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__internals__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__internals__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__aux_size__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux_size__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_names__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__aux_names__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux_names__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Individual___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__mortality_probability__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__strategy_name__get, 1},
    {"_plant_Individual___K93__K93_Env__ctor", (DL_FUNC) &_plant_Individual___K93__K93_Env__ctor, 1},
    {"_plant_Individual___K93__K93_Env__state", (DL_FUNC) &_plant_Individual___K93__K93_Env__state, 2},
    {"_plant_Individual___K93__K93_Env__rate", (DL_FUNC) &_plant_Individual___K93__K93_Env__rate, 2},
    {"_plant_Individual___K93__K93_Env__aux", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux, 2},
    {"_plant_Individual___K93__K93_Env__set_state", (DL_FUNC) &_plant_Individual___K93__K93_Env__set_state, 3},
    {"_plant_Individual___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Individual___K93__K93_Env__compute_competition, 2},
    {"_plant_Individual___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Individual___K93__K93_Env__compute_rates, 2},
    {"_plant_Individual___K93__K93_Env__establishment_probability", (DL_FUNC) &_plant_Individual___K93__K93_Env__establishment_probability, 2},
    {"_plant_Individual___K93__K93_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___K93__K93_Env__net_mass_production_dt, 2},
    {"_plant_Individual___K93__K93_Env__reset_mortality", (DL_FUNC) &_plant_Individual___K93__K93_Env__reset_mortality, 1},
    {"_plant_Individual___K93__K93_Env__resource_compensation_point", (DL_FUNC) &_plant_Individual___K93__K93_Env__resource_compensation_point, 1},
    {"_plant_Individual___K93__K93_Env__strategy__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__strategy__get, 1},
    {"_plant_Individual___K93__K93_Env__internals__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__internals__get, 1},
    {"_plant_Individual___K93__K93_Env__aux_size__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux_size__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_size__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_names__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_names__get, 1},
    {"_plant_Individual___K93__K93_Env__aux_names__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux_names__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_state__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_state__set, 2},
    {"_plant_Individual___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Individual___K93__K93_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__mortality_probability__get, 1},
    {"_plant_Individual___K93__K93_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__strategy_name__get, 1},
    {"_plant_IndividualRunner___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__ctor, 2},
    {"_plant_IndividualRunner___FF16__FF16_Env__individual__get", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__individual__get, 1},
    {"_plant_IndividualRunner___FF16__FF16_Env__individual__set", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__individual__set, 2},
    {"_plant_IndividualRunner___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___FF16w__FF16_Env__ctor, 2},
    {"_plant_IndividualRunner___FF16w__FF16_Env__individual__get", (DL_FUNC) &_plant_IndividualRunner___FF16w__FF16_Env__individual__get, 1},
    {"_plant_IndividualRunner___FF16w__FF16_Env__individual__set", (DL_FUNC) &_plant_IndividualRunner___FF16w__FF16_Env__individual__set, 2},
    {"_plant_IndividualRunner___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__ctor, 2},
    {"_plant_IndividualRunner___FF16r__FF16_Env__individual__get", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__individual__get, 1},
    {"_plant_IndividualRunner___FF16r__FF16_Env__individual__set", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__individual__set, 2},
    {"_plant_IndividualRunner___K93__K93_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__ctor, 2},
    {"_plant_IndividualRunner___K93__K93_Env__individual__get", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__individual__get, 1},
    {"_plant_IndividualRunner___K93__K93_Env__individual__set", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__individual__set, 2},
    {"_plant_Internals__ctor", (DL_FUNC) &_plant_Internals__ctor, 2},
    {"_plant_Internals__state", (DL_FUNC) &_plant_Internals__state, 2},
    {"_plant_Internals__rate", (DL_FUNC) &_plant_Internals__rate, 2},
    {"_plant_Internals__aux", (DL_FUNC) &_plant_Internals__aux, 2},
    {"_plant_Internals__set_aux", (DL_FUNC) &_plant_Internals__set_aux, 3},
    {"_plant_Internals__set_state", (DL_FUNC) &_plant_Internals__set_state, 3},
    {"_plant_Internals__set_rate", (DL_FUNC) &_plant_Internals__set_rate, 3},
    {"_plant_Internals__resize", (DL_FUNC) &_plant_Internals__resize, 3},
    {"_plant_Internals__state_size__get", (DL_FUNC) &_plant_Internals__state_size__get, 1},
    {"_plant_Internals__state_size__set", (DL_FUNC) &_plant_Internals__state_size__set, 2},
    {"_plant_Internals__aux_size__get", (DL_FUNC) &_plant_Internals__aux_size__get, 1},
    {"_plant_Internals__aux_size__set", (DL_FUNC) &_plant_Internals__aux_size__set, 2},
    {"_plant_Internals__states__get", (DL_FUNC) &_plant_Internals__states__get, 1},
    {"_plant_Internals__states__set", (DL_FUNC) &_plant_Internals__states__set, 2},
    {"_plant_Internals__rates__get", (DL_FUNC) &_plant_Internals__rates__get, 1},
    {"_plant_Internals__rates__set", (DL_FUNC) &_plant_Internals__rates__set, 2},
    {"_plant_Internals__auxs__get", (DL_FUNC) &_plant_Internals__auxs__get, 1},
    {"_plant_Internals__auxs__set", (DL_FUNC) &_plant_Internals__auxs__set, 2},
    {"_plant_Parameters___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Parameters___FF16__FF16_Env__ctor, 0},
    {"_plant_Parameters___FF16__FF16_Env__vdor", (DL_FUNC) &_plant_Parameters___FF16__FF16_Env__vdor, 1},
    {"_plant_Parameters___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_Parameters___FF16w__FF16_Env__ctor, 0},
    {"_plant_Parameters___FF16w__FF16_Env__vdor", (DL_FUNC) &_plant_Parameters___FF16w__FF16_Env__vdor, 1},
    {"_plant_Parameters___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Parameters___FF16r__FF16_Env__ctor, 0},
    {"_plant_Parameters___FF16r__FF16_Env__vdor", (DL_FUNC) &_plant_Parameters___FF16r__FF16_Env__vdor, 1},
    {"_plant_Parameters___K93__K93_Env__ctor", (DL_FUNC) &_plant_Parameters___K93__K93_Env__ctor, 0},
    {"_plant_Parameters___K93__K93_Env__vdor", (DL_FUNC) &_plant_Parameters___K93__K93_Env__vdor, 1},
    {"_plant_Node___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ctor, 1},
    {"_plant_Node___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Node___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Node___FF16__FF16_Env__growth_rate_gradient", (DL_FUNC) &_plant_Node___FF16__FF16_Env__growth_rate_gradient, 2},
    {"_plant_Node___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Node___FF16__FF16_Env__compute_rates, 3},
    {"_plant_Node___FF16__FF16_Env__compute_initial_conditions", (DL_FUNC) &_plant_Node___FF16__FF16_Env__compute_initial_conditions, 4},
    {"_plant_Node___FF16__FF16_Env__individual__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__individual__get, 1},
    {"_plant_Node___FF16__FF16_Env__height__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__height__get, 1},
    {"_plant_Node___FF16__FF16_Env__log_density__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__log_density__get, 1},
    {"_plant_Node___FF16__FF16_Env__competition_effect__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__competition_effect__get, 1},
    {"_plant_Node___FF16__FF16_Env__fecundity__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__fecundity__get, 1},
    {"_plant_Node___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Node___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Node___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Node___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Node___FF16__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Node___FF16__FF16_Env__ode_names__get, 1},
    {"_plant_Node___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ctor, 1},
    {"_plant_Node___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_Node___FF16w__FF16_Env__growth_rate_gradient", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__growth_rate_gradient, 2},
    {"_plant_Node___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__compute_rates, 3},
    {"_plant_Node___FF16w__FF16_Env__compute_initial_conditions", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__compute_initial_conditions, 4},
    {"_plant_Node___FF16w__FF16_Env__individual__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__individual__get, 1},
    {"_plant_Node___FF16w__FF16_Env__height__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__height__get, 1},
    {"_plant_Node___FF16w__FF16_Env__log_density__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__log_density__get, 1},
    {"_plant_Node___FF16w__FF16_Env__competition_effect__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__competition_effect__get, 1},
    {"_plant_Node___FF16w__FF16_Env__fecundity__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__fecundity__get, 1},
    {"_plant_Node___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_Node___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_Node___FF16w__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ode_state__set, 2},
    {"_plant_Node___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_Node___FF16w__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Node___FF16w__FF16_Env__ode_names__get, 1},
    {"_plant_Node___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ctor, 1},
    {"_plant_Node___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Node___FF16r__FF16_Env__growth_rate_gradient", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__growth_rate_gradient, 2},
    {"_plant_Node___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__compute_rates, 3},
    {"_plant_Node___FF16r__FF16_Env__compute_initial_conditions", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__compute_initial_conditions, 4},
    {"_plant_Node___FF16r__FF16_Env__individual__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__individual__get, 1},
    {"_plant_Node___FF16r__FF16_Env__height__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__height__get, 1},
    {"_plant_Node___FF16r__FF16_Env__log_density__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__log_density__get, 1},
    {"_plant_Node___FF16r__FF16_Env__competition_effect__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__competition_effect__get, 1},
    {"_plant_Node___FF16r__FF16_Env__fecundity__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__fecundity__get, 1},
    {"_plant_Node___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Node___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Node___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Node___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Node___FF16r__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Node___FF16r__FF16_Env__ode_names__get, 1},
    {"_plant_Node___K93__K93_Env__ctor", (DL_FUNC) &_plant_Node___K93__K93_Env__ctor, 1},
    {"_plant_Node___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Node___K93__K93_Env__compute_competition, 2},
    {"_plant_Node___K93__K93_Env__growth_rate_gradient", (DL_FUNC) &_plant_Node___K93__K93_Env__growth_rate_gradient, 2},
    {"_plant_Node___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Node___K93__K93_Env__compute_rates, 3},
    {"_plant_Node___K93__K93_Env__compute_initial_conditions", (DL_FUNC) &_plant_Node___K93__K93_Env__compute_initial_conditions, 4},
    {"_plant_Node___K93__K93_Env__individual__get", (DL_FUNC) &_plant_Node___K93__K93_Env__individual__get, 1},
    {"_plant_Node___K93__K93_Env__height__get", (DL_FUNC) &_plant_Node___K93__K93_Env__height__get, 1},
    {"_plant_Node___K93__K93_Env__log_density__get", (DL_FUNC) &_plant_Node___K93__K93_Env__log_density__get, 1},
    {"_plant_Node___K93__K93_Env__competition_effect__get", (DL_FUNC) &_plant_Node___K93__K93_Env__competition_effect__get, 1},
    {"_plant_Node___K93__K93_Env__fecundity__get", (DL_FUNC) &_plant_Node___K93__K93_Env__fecundity__get, 1},
    {"_plant_Node___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Node___K93__K93_Env__ode_size__get, 1},
    {"_plant_Node___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Node___K93__K93_Env__ode_state__get, 1},
    {"_plant_Node___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Node___K93__K93_Env__ode_state__set, 2},
    {"_plant_Node___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Node___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Node___K93__K93_Env__ode_names__get", (DL_FUNC) &_plant_Node___K93__K93_Env__ode_names__get, 1},
    {"_plant_Species___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ctor, 1},
    {"_plant_Species___FF16__FF16_Env__clear", (DL_FUNC) &_plant_Species___FF16__FF16_Env__clear, 1},
    {"_plant_Species___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Species___FF16__FF16_Env__compute_rates, 4},
    {"_plant_Species___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Species___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Species___FF16__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Species___FF16__FF16_Env__introduce_new_node, 1},
    {"_plant_Species___FF16__FF16_Env__node_at", (DL_FUNC) &_plant_Species___FF16__FF16_Env__node_at, 2},
    {"_plant_Species___FF16__FF16_Env__competition_effects_error", (DL_FUNC) &_plant_Species___FF16__FF16_Env__competition_effects_error, 2},
    {"_plant_Species___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__size__get, 1},
    {"_plant_Species___FF16__FF16_Env__new_node__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__new_node__get, 1},
    {"_plant_Species___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__height_max__get, 1},
    {"_plant_Species___FF16__FF16_Env__heights__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__heights__get, 1},
    {"_plant_Species___FF16__FF16_Env__heights__set", (DL_FUNC) &_plant_Species___FF16__FF16_Env__heights__set, 2},
    {"_plant_Species___FF16__FF16_Env__log_densities__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__log_densities__get, 1},
    {"_plant_Species___FF16__FF16_Env__nodes__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__nodes__get, 1},
    {"_plant_Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_Species___FF16__FF16_Env__competition_effects__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__competition_effects__get, 1},
    {"_plant_Species___FF16__FF16_Env__extrinsic_drivers__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__extrinsic_drivers__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Species___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Species___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__ctor, 1},
    {"_plant_Species___FF16w__FF16_Env__clear", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__clear, 1},
    {"_plant_Species___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__compute_rates, 4},
    {"_plant_Species___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_Species___FF16w__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__introduce_new_node, 1},
    {"_plant_Species___FF16w__FF16_Env__node_at", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__node_at, 2},
    {"_plant_Species___FF16w__FF16_Env__competition_effects_error", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__competition_effects_error, 2},
    {"_plant_Species___FF16w__FF16_Env__size__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__size__get, 1},
    {"_plant_Species___FF16w__FF16_Env__new_node__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__new_node__get, 1},
    {"_plant_Species___FF16w__FF16_Env__height_max__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__height_max__get, 1},
    {"_plant_Species___FF16w__FF16_Env__heights__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__heights__get, 1},
    {"_plant_Species___FF16w__FF16_Env__heights__set", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__heights__set, 2},
    {"_plant_Species___FF16w__FF16_Env__log_densities__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__log_densities__get, 1},
    {"_plant_Species___FF16w__FF16_Env__nodes__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__nodes__get, 1},
    {"_plant_Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_Species___FF16w__FF16_Env__competition_effects__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__competition_effects__get, 1},
    {"_plant_Species___FF16w__FF16_Env__extrinsic_drivers__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__extrinsic_drivers__get, 1},
    {"_plant_Species___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_Species___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_Species___FF16w__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__ode_state__set, 2},
    {"_plant_Species___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Species___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ctor, 1},
    {"_plant_Species___FF16r__FF16_Env__clear", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__clear, 1},
    {"_plant_Species___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__compute_rates, 4},
    {"_plant_Species___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Species___FF16r__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__introduce_new_node, 1},
    {"_plant_Species___FF16r__FF16_Env__node_at", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__node_at, 2},
    {"_plant_Species___FF16r__FF16_Env__competition_effects_error", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__competition_effects_error, 2},
    {"_plant_Species___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__size__get, 1},
    {"_plant_Species___FF16r__FF16_Env__new_node__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__new_node__get, 1},
    {"_plant_Species___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_Species___FF16r__FF16_Env__heights__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__heights__get, 1},
    {"_plant_Species___FF16r__FF16_Env__heights__set", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__heights__set, 2},
    {"_plant_Species___FF16r__FF16_Env__log_densities__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__log_densities__get, 1},
    {"_plant_Species___FF16r__FF16_Env__nodes__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__nodes__get, 1},
    {"_plant_Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_Species___FF16r__FF16_Env__competition_effects__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__competition_effects__get, 1},
    {"_plant_Species___FF16r__FF16_Env__extrinsic_drivers__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__extrinsic_drivers__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Species___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Species___K93__K93_Env__ctor", (DL_FUNC) &_plant_Species___K93__K93_Env__ctor, 1},
    {"_plant_Species___K93__K93_Env__clear", (DL_FUNC) &_plant_Species___K93__K93_Env__clear, 1},
    {"_plant_Species___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Species___K93__K93_Env__compute_rates, 4},
    {"_plant_Species___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Species___K93__K93_Env__compute_competition, 2},
    {"_plant_Species___K93__K93_Env__introduce_new_node", (DL_FUNC) &_plant_Species___K93__K93_Env__introduce_new_node, 1},
    {"_plant_Species___K93__K93_Env__node_at", (DL_FUNC) &_plant_Species___K93__K93_Env__node_at, 2},
    {"_plant_Species___K93__K93_Env__competition_effects_error", (DL_FUNC) &_plant_Species___K93__K93_Env__competition_effects_error, 2},
    {"_plant_Species___K93__K93_Env__size__get", (DL_FUNC) &_plant_Species___K93__K93_Env__size__get, 1},
    {"_plant_Species___K93__K93_Env__new_node__get", (DL_FUNC) &_plant_Species___K93__K93_Env__new_node__get, 1},
    {"_plant_Species___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_Species___K93__K93_Env__height_max__get, 1},
    {"_plant_Species___K93__K93_Env__heights__get", (DL_FUNC) &_plant_Species___K93__K93_Env__heights__get, 1},
    {"_plant_Species___K93__K93_Env__heights__set", (DL_FUNC) &_plant_Species___K93__K93_Env__heights__set, 2},
    {"_plant_Species___K93__K93_Env__log_densities__get", (DL_FUNC) &_plant_Species___K93__K93_Env__log_densities__get, 1},
    {"_plant_Species___K93__K93_Env__nodes__get", (DL_FUNC) &_plant_Species___K93__K93_Env__nodes__get, 1},
    {"_plant_Species___K93__K93_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_Species___K93__K93_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_Species___K93__K93_Env__competition_effects__get", (DL_FUNC) &_plant_Species___K93__K93_Env__competition_effects__get, 1},
    {"_plant_Species___K93__K93_Env__extrinsic_drivers__get", (DL_FUNC) &_plant_Species___K93__K93_Env__extrinsic_drivers__get, 1},
    {"_plant_Species___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_size__get, 1},
    {"_plant_Species___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_state__get, 1},
    {"_plant_Species___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_state__set, 2},
    {"_plant_Species___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ctor, 3},
    {"_plant_Patch___FF16__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__introduce_new_node, 2},
    {"_plant_Patch___FF16__FF16_Env__compute_environment", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_environment, 1},
    {"_plant_Patch___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_rates, 1},
    {"_plant_Patch___FF16__FF16_Env__reset", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__reset, 1},
    {"_plant_Patch___FF16__FF16_Env__set_ode_state", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__set_ode_state, 3},
    {"_plant_Patch___FF16__FF16_Env__derivs", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__derivs, 3},
    {"_plant_Patch___FF16__FF16_Env__set_time", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__set_time, 2},
    {"_plant_Patch___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__set_state, 5},
    {"_plant_Patch___FF16__FF16_Env__density", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__density, 2},
    {"_plant_Patch___FF16__FF16_Env__pr_survival", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__pr_survival, 2},
    {"_plant_Patch___FF16__FF16_Env__disturbance_mean_interval", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__disturbance_mean_interval, 1},
    {"_plant_Patch___FF16__FF16_Env__survival_weighting_cdf", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__survival_weighting_cdf, 2},
    {"_plant_Patch___FF16__FF16_Env__survival_weighting_icdf", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__survival_weighting_icdf, 2},
    {"_plant_Patch___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Patch___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__time__get, 1},
    {"_plant_Patch___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__size__get, 1},
    {"_plant_Patch___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__height_max__get, 1},
    {"_plant_Patch___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__parameters__get, 1},
    {"_plant_Patch___FF16__FF16_Env__environment__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__environment__get, 1},
    {"_plant_Patch___FF16__FF16_Env__species__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__species__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_time__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_time__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_aux__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_aux__get, 1},
    {"_plant_Patch___FF16__FF16_Env__node_ode_size__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__node_ode_size__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ctor, 3},
    {"_plant_Patch___FF16w__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__introduce_new_node, 2},
    {"_plant_Patch___FF16w__FF16_Env__compute_environment", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__compute_environment, 1},
    {"_plant_Patch___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__compute_rates, 1},
    {"_plant_Patch___FF16w__FF16_Env__reset", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__reset, 1},
    {"_plant_Patch___FF16w__FF16_Env__set_ode_state", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__set_ode_state, 3},
    {"_plant_Patch___FF16w__FF16_Env__derivs", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__derivs, 3},
    {"_plant_Patch___FF16w__FF16_Env__set_time", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__set_time, 2},
    {"_plant_Patch___FF16w__FF16_Env__set_state", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__set_state, 5},
    {"_plant_Patch___FF16w__FF16_Env__density", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__density, 2},
    {"_plant_Patch___FF16w__FF16_Env__pr_survival", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__pr_survival, 2},
    {"_plant_Patch___FF16w__FF16_Env__disturbance_mean_interval", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__disturbance_mean_interval, 1},
    {"_plant_Patch___FF16w__FF16_Env__survival_weighting_cdf", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__survival_weighting_cdf, 2},
    {"_plant_Patch___FF16w__FF16_Env__survival_weighting_icdf", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__survival_weighting_icdf, 2},
    {"_plant_Patch___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_Patch___FF16w__FF16_Env__time__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__time__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__size__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__size__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__height_max__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__height_max__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__parameters__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__parameters__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__environment__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__environment__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__species__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__species__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ode_time__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ode_time__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__ode_aux__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__ode_aux__get, 1},
    {"_plant_Patch___FF16w__FF16_Env__node_ode_size__get", (DL_FUNC) &_plant_Patch___FF16w__FF16_Env__node_ode_size__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ctor, 3},
    {"_plant_Patch___FF16r__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__introduce_new_node, 2},
    {"_plant_Patch___FF16r__FF16_Env__compute_environment", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_environment, 1},
    {"_plant_Patch___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_rates, 1},
    {"_plant_Patch___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__reset, 1},
    {"_plant_Patch___FF16r__FF16_Env__set_ode_state", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__set_ode_state, 3},
    {"_plant_Patch___FF16r__FF16_Env__derivs", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__derivs, 3},
    {"_plant_Patch___FF16r__FF16_Env__set_time", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__set_time, 2},
    {"_plant_Patch___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__set_state, 5},
    {"_plant_Patch___FF16r__FF16_Env__density", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__density, 2},
    {"_plant_Patch___FF16r__FF16_Env__pr_survival", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__pr_survival, 2},
    {"_plant_Patch___FF16r__FF16_Env__disturbance_mean_interval", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__disturbance_mean_interval, 1},
    {"_plant_Patch___FF16r__FF16_Env__survival_weighting_cdf", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__survival_weighting_cdf, 2},
    {"_plant_Patch___FF16r__FF16_Env__survival_weighting_icdf", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__survival_weighting_icdf, 2},
    {"_plant_Patch___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Patch___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__time__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__size__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__environment__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__environment__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__species__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__species__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_time__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_time__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_aux__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_aux__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__node_ode_size__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__node_ode_size__get, 1},
    {"_plant_Patch___K93__K93_Env__ctor", (DL_FUNC) &_plant_Patch___K93__K93_Env__ctor, 3},
    {"_plant_Patch___K93__K93_Env__introduce_new_node", (DL_FUNC) &_plant_Patch___K93__K93_Env__introduce_new_node, 2},
    {"_plant_Patch___K93__K93_Env__compute_environment", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_environment, 1},
    {"_plant_Patch___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_rates, 1},
    {"_plant_Patch___K93__K93_Env__reset", (DL_FUNC) &_plant_Patch___K93__K93_Env__reset, 1},
    {"_plant_Patch___K93__K93_Env__set_ode_state", (DL_FUNC) &_plant_Patch___K93__K93_Env__set_ode_state, 3},
    {"_plant_Patch___K93__K93_Env__derivs", (DL_FUNC) &_plant_Patch___K93__K93_Env__derivs, 3},
    {"_plant_Patch___K93__K93_Env__set_time", (DL_FUNC) &_plant_Patch___K93__K93_Env__set_time, 2},
    {"_plant_Patch___K93__K93_Env__set_state", (DL_FUNC) &_plant_Patch___K93__K93_Env__set_state, 5},
    {"_plant_Patch___K93__K93_Env__density", (DL_FUNC) &_plant_Patch___K93__K93_Env__density, 2},
    {"_plant_Patch___K93__K93_Env__pr_survival", (DL_FUNC) &_plant_Patch___K93__K93_Env__pr_survival, 2},
    {"_plant_Patch___K93__K93_Env__disturbance_mean_interval", (DL_FUNC) &_plant_Patch___K93__K93_Env__disturbance_mean_interval, 1},
    {"_plant_Patch___K93__K93_Env__survival_weighting_cdf", (DL_FUNC) &_plant_Patch___K93__K93_Env__survival_weighting_cdf, 2},
    {"_plant_Patch___K93__K93_Env__survival_weighting_icdf", (DL_FUNC) &_plant_Patch___K93__K93_Env__survival_weighting_icdf, 2},
    {"_plant_Patch___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_competition, 2},
    {"_plant_Patch___K93__K93_Env__time__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__time__get, 1},
    {"_plant_Patch___K93__K93_Env__size__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__size__get, 1},
    {"_plant_Patch___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__height_max__get, 1},
    {"_plant_Patch___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__parameters__get, 1},
    {"_plant_Patch___K93__K93_Env__environment__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__environment__get, 1},
    {"_plant_Patch___K93__K93_Env__species__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__species__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_size__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_time__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_time__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_state__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_aux__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_aux__get, 1},
    {"_plant_Patch___K93__K93_Env__node_ode_size__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__node_ode_size__get, 1},
    {"_plant_SCM___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__ctor, 3},
    {"_plant_SCM___FF16__FF16_Env__run", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__run, 1},
    {"_plant_SCM___FF16__FF16_Env__run_next", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__run_next, 1},
    {"_plant_SCM___FF16__FF16_Env__reset", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__reset, 1},
    {"_plant_SCM___FF16__FF16_Env__net_reproduction_ratio_for_species", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__net_reproduction_ratio_for_species, 2},
    {"_plant_SCM___FF16__FF16_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__competition_effect_error, 2},
    {"_plant_SCM___FF16__FF16_Env__set_node_schedule_times", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__set_node_schedule_times, 2},
    {"_plant_SCM___FF16__FF16_Env__complete__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__complete__get, 1},
    {"_plant_SCM___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__time__get, 1},
    {"_plant_SCM___FF16__FF16_Env__net_reproduction_ratios__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__net_reproduction_ratios__get, 1},
    {"_plant_SCM___FF16__FF16_Env__offspring_production__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__offspring_production__get, 1},
    {"_plant_SCM___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__parameters__get, 1},
    {"_plant_SCM___FF16__FF16_Env__patch__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__patch__get, 1},
    {"_plant_SCM___FF16__FF16_Env__node_schedule__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__node_schedule__get, 1},
    {"_plant_SCM___FF16__FF16_Env__node_schedule__set", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__node_schedule__set, 2},
    {"_plant_SCM___FF16__FF16_Env__ode_times__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__ode_times__get, 1},
    {"_plant_SCM___FF16__FF16_Env__state__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__state__get, 1},
    {"_plant_SCM___FF16__FF16_Env__aux__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__aux__get, 1},
    {"_plant_SCM___FF16__FF16_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__use_ode_times__get, 1},
    {"_plant_SCM___FF16__FF16_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__use_ode_times__set, 2},
    {"_plant_SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__net_reproduction_ratio_errors__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__ctor, 3},
    {"_plant_SCM___FF16w__FF16_Env__run", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__run, 1},
    {"_plant_SCM___FF16w__FF16_Env__run_next", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__run_next, 1},
    {"_plant_SCM___FF16w__FF16_Env__reset", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__reset, 1},
    {"_plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_for_species, 2},
    {"_plant_SCM___FF16w__FF16_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__competition_effect_error, 2},
    {"_plant_SCM___FF16w__FF16_Env__set_node_schedule_times", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__set_node_schedule_times, 2},
    {"_plant_SCM___FF16w__FF16_Env__complete__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__complete__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__time__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__time__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__net_reproduction_ratios__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__net_reproduction_ratios__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__offspring_production__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__offspring_production__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__parameters__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__parameters__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__patch__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__patch__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__node_schedule__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__node_schedule__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__node_schedule__set", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__node_schedule__set, 2},
    {"_plant_SCM___FF16w__FF16_Env__ode_times__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__ode_times__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__state__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__state__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__aux__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__aux__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__use_ode_times__get, 1},
    {"_plant_SCM___FF16w__FF16_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__use_ode_times__set, 2},
    {"_plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get", (DL_FUNC) &_plant_SCM___FF16w__FF16_Env__net_reproduction_ratio_errors__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__ctor, 3},
    {"_plant_SCM___FF16r__FF16_Env__run", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__run, 1},
    {"_plant_SCM___FF16r__FF16_Env__run_next", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__run_next, 1},
    {"_plant_SCM___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__reset, 1},
    {"_plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_for_species, 2},
    {"_plant_SCM___FF16r__FF16_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__competition_effect_error, 2},
    {"_plant_SCM___FF16r__FF16_Env__set_node_schedule_times", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__set_node_schedule_times, 2},
    {"_plant_SCM___FF16r__FF16_Env__complete__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__complete__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__time__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__net_reproduction_ratios__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__net_reproduction_ratios__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__offspring_production__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__offspring_production__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__patch__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__patch__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__node_schedule__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__node_schedule__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__node_schedule__set", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__node_schedule__set, 2},
    {"_plant_SCM___FF16r__FF16_Env__ode_times__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__ode_times__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__state__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__state__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__aux__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__aux__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__use_ode_times__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__use_ode_times__set, 2},
    {"_plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__net_reproduction_ratio_errors__get, 1},
    {"_plant_SCM___K93__K93_Env__ctor", (DL_FUNC) &_plant_SCM___K93__K93_Env__ctor, 3},
    {"_plant_SCM___K93__K93_Env__run", (DL_FUNC) &_plant_SCM___K93__K93_Env__run, 1},
    {"_plant_SCM___K93__K93_Env__run_next", (DL_FUNC) &_plant_SCM___K93__K93_Env__run_next, 1},
    {"_plant_SCM___K93__K93_Env__reset", (DL_FUNC) &_plant_SCM___K93__K93_Env__reset, 1},
    {"_plant_SCM___K93__K93_Env__net_reproduction_ratio_for_species", (DL_FUNC) &_plant_SCM___K93__K93_Env__net_reproduction_ratio_for_species, 2},
    {"_plant_SCM___K93__K93_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___K93__K93_Env__competition_effect_error, 2},
    {"_plant_SCM___K93__K93_Env__set_node_schedule_times", (DL_FUNC) &_plant_SCM___K93__K93_Env__set_node_schedule_times, 2},
    {"_plant_SCM___K93__K93_Env__complete__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__complete__get, 1},
    {"_plant_SCM___K93__K93_Env__time__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__time__get, 1},
    {"_plant_SCM___K93__K93_Env__net_reproduction_ratios__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__net_reproduction_ratios__get, 1},
    {"_plant_SCM___K93__K93_Env__offspring_production__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__offspring_production__get, 1},
    {"_plant_SCM___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__parameters__get, 1},
    {"_plant_SCM___K93__K93_Env__patch__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__patch__get, 1},
    {"_plant_SCM___K93__K93_Env__node_schedule__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__node_schedule__get, 1},
    {"_plant_SCM___K93__K93_Env__node_schedule__set", (DL_FUNC) &_plant_SCM___K93__K93_Env__node_schedule__set, 2},
    {"_plant_SCM___K93__K93_Env__ode_times__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__ode_times__get, 1},
    {"_plant_SCM___K93__K93_Env__state__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__state__get, 1},
    {"_plant_SCM___K93__K93_Env__aux__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__aux__get, 1},
    {"_plant_SCM___K93__K93_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__use_ode_times__get, 1},
    {"_plant_SCM___K93__K93_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___K93__K93_Env__use_ode_times__set, 2},
    {"_plant_SCM___K93__K93_Env__net_reproduction_ratio_errors__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__net_reproduction_ratio_errors__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ctor, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__clear, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__introduce_new_node, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__individual_at", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__individual_at, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__deaths, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__size__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__size_individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__size_individuals__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__new_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__new_node__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__heights__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__heights__set, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__individuals__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__ctor, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__clear, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__introduce_new_node, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__individual_at", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__individual_at, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__deaths, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__size__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__size_individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__size_individuals__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__new_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__new_node__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__heights__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__heights__set, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__individuals__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ctor, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__clear, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__introduce_new_node, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__individual_at", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__individual_at, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__deaths, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__size__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__size_individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__size_individuals__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__new_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__new_node__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__heights__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__heights__set, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__individuals__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__individuals__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ctor, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__clear, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__introduce_new_node, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__individual_at", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__individual_at, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__deaths, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__size__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__size_individuals__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__size_individuals__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__new_node__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__new_node__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__heights__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__heights__set, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__individuals__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__individuals__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__net_reproduction_ratio_by_node__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ctor, 3},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_competition, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__introduce_new_node, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__introduce_new_node_and_update, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_environment, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_rates, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__reset, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___FF16__FF16_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__derivs, 3},
    {"_plant_StochasticPatch___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__set_state, 4},
    {"_plant_StochasticPatch___FF16__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__deaths, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__time__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__size__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__height_max__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__environment__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__species__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__ctor, 3},
    {"_plant_StochasticPatch___FF16w__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__compute_competition, 2},
    {"_plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node, 2},
    {"_plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__introduce_new_node_and_update, 2},
    {"_plant_StochasticPatch___FF16w__FF16_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__compute_environment, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__compute_rates, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__reset, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___FF16w__FF16_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__derivs, 3},
    {"_plant_StochasticPatch___FF16w__FF16_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__set_state, 4},
    {"_plant_StochasticPatch___FF16w__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__deaths, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__time__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__size__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__height_max__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__environment__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__species__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___FF16w__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___FF16w__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ctor, 3},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__introduce_new_node_and_update, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_environment, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_rates, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__reset, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___FF16r__FF16_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__derivs, 3},
    {"_plant_StochasticPatch___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__set_state, 4},
    {"_plant_StochasticPatch___FF16r__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__deaths, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__time__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__size__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__environment__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__species__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ctor, 3},
    {"_plant_StochasticPatch___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_competition, 2},
    {"_plant_StochasticPatch___K93__K93_Env__introduce_new_node", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__introduce_new_node, 2},
    {"_plant_StochasticPatch___K93__K93_Env__introduce_new_node_and_update", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__introduce_new_node_and_update, 2},
    {"_plant_StochasticPatch___K93__K93_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_environment, 1},
    {"_plant_StochasticPatch___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_rates, 1},
    {"_plant_StochasticPatch___K93__K93_Env__reset", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__reset, 1},
    {"_plant_StochasticPatch___K93__K93_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___K93__K93_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__derivs, 3},
    {"_plant_StochasticPatch___K93__K93_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__set_state, 4},
    {"_plant_StochasticPatch___K93__K93_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__deaths, 1},
    {"_plant_StochasticPatch___K93__K93_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__time__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__size__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__height_max__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__parameters__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__environment__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__species__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_rates__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__ctor, 3},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__run, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__reset, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__state__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__ctor, 3},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__run, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__reset, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___FF16w__FF16_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16w__FF16_Env__state__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__ctor, 3},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__run, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__reset, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__state__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__ctor, 3},
    {"_plant_StochasticPatchRunner___K93__K93_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__run, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__reset, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___K93__K93_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___K93__K93_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__state__get, 1},
    {"_plant_Canopy__ctor", (DL_FUNC) &_plant_Canopy__ctor, 3},
    {"_plant_Canopy__canopy_openness", (DL_FUNC) &_plant_Canopy__canopy_openness, 2},
    {"_plant_Canopy__clear", (DL_FUNC) &_plant_Canopy__clear, 1},
    {"_plant_Canopy__canopy_interpolator__get", (DL_FUNC) &_plant_Canopy__canopy_interpolator__get, 1},
    {"_plant_Canopy__canopy_interpolator__set", (DL_FUNC) &_plant_Canopy__canopy_interpolator__set, 2},
    {"_plant_Disturbance_Regime__ctor", (DL_FUNC) &_plant_Disturbance_Regime__ctor, 0},
    {"_plant_Disturbance_Regime__density", (DL_FUNC) &_plant_Disturbance_Regime__density, 2},
    {"_plant_Disturbance_Regime__pr_survival", (DL_FUNC) &_plant_Disturbance_Regime__pr_survival, 2},
    {"_plant_No_Disturbance__ctor", (DL_FUNC) &_plant_No_Disturbance__ctor, 0},
    {"_plant_No_Disturbance__density", (DL_FUNC) &_plant_No_Disturbance__density, 2},
    {"_plant_No_Disturbance__pr_survival", (DL_FUNC) &_plant_No_Disturbance__pr_survival, 2},
    {"_plant_Weibull_Disturbance_Regime__ctor", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__ctor, 1},
    {"_plant_Weibull_Disturbance_Regime__density", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__density, 2},
    {"_plant_Weibull_Disturbance_Regime__pr_survival", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__pr_survival, 2},
    {"_plant_Weibull_Disturbance_Regime__mean_interval", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__mean_interval, 1},
    {"_plant_Weibull_Disturbance_Regime__cdf", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__cdf, 2},
    {"_plant_Weibull_Disturbance_Regime__icdf", (DL_FUNC) &_plant_Weibull_Disturbance_Regime__icdf, 2},
    {"_plant_FF16_Strategy__ctor", (DL_FUNC) &_plant_FF16_Strategy__ctor, 0},
    {"_plant_FF16_Environment__ctor", (DL_FUNC) &_plant_FF16_Environment__ctor, 2},
    {"_plant_FF16_Environment__canopy_openness", (DL_FUNC) &_plant_FF16_Environment__canopy_openness, 2},
    {"_plant_FF16_Environment__n_psi", (DL_FUNC) &_plant_FF16_Environment__n_psi, 1},
    {"_plant_FF16_Environment__a_psi", (DL_FUNC) &_plant_FF16_Environment__a_psi, 1},
    {"_plant_FF16_Environment__psi_from_soil_moist", (DL_FUNC) &_plant_FF16_Environment__psi_from_soil_moist, 2},
    {"_plant_FF16_Environment__soil_moist_from_psi", (DL_FUNC) &_plant_FF16_Environment__soil_moist_from_psi, 2},
    {"_plant_FF16_Environment__clear", (DL_FUNC) &_plant_FF16_Environment__clear, 1},
    {"_plant_FF16_Environment__set_fixed_environment", (DL_FUNC) &_plant_FF16_Environment__set_fixed_environment, 3},
    {"_plant_FF16_Environment__get_soil_water_state", (DL_FUNC) &_plant_FF16_Environment__get_soil_water_state, 1},
    {"_plant_FF16_Environment__get_vpd", (DL_FUNC) &_plant_FF16_Environment__get_vpd, 1},
    {"_plant_FF16_Environment__get_co2", (DL_FUNC) &_plant_FF16_Environment__get_co2, 1},
    {"_plant_FF16_Environment__get_leaf_temp", (DL_FUNC) &_plant_FF16_Environment__get_leaf_temp, 1},
    {"_plant_FF16_Environment__get_atm_o2", (DL_FUNC) &_plant_FF16_Environment__get_atm_o2, 1},
    {"_plant_FF16_Environment__get_atm", (DL_FUNC) &_plant_FF16_Environment__get_atm, 1},
    {"_plant_FF16_Environment__set_soil_water_state", (DL_FUNC) &_plant_FF16_Environment__set_soil_water_state, 2},
    {"_plant_FF16_Environment__compute_rates", (DL_FUNC) &_plant_FF16_Environment__compute_rates, 2},
    {"_plant_FF16_Environment__time__get", (DL_FUNC) &_plant_FF16_Environment__time__get, 1},
    {"_plant_FF16_Environment__time__set", (DL_FUNC) &_plant_FF16_Environment__time__set, 2},
    {"_plant_FF16_Environment__ode_size__get", (DL_FUNC) &_plant_FF16_Environment__ode_size__get, 1},
    {"_plant_FF16_Environment__soil_number_of_depths__get", (DL_FUNC) &_plant_FF16_Environment__soil_number_of_depths__get, 1},
    {"_plant_FF16_Environment__canopy__get", (DL_FUNC) &_plant_FF16_Environment__canopy__get, 1},
    {"_plant_FF16_Environment__canopy__set", (DL_FUNC) &_plant_FF16_Environment__canopy__set, 2},
    {"_plant_FF16_Environment__soil__get", (DL_FUNC) &_plant_FF16_Environment__soil__get, 1},
    {"_plant_FF16_Environment__extrinsic_drivers__get", (DL_FUNC) &_plant_FF16_Environment__extrinsic_drivers__get, 1},
    {"_plant_FF16_Environment__extrinsic_drivers__set", (DL_FUNC) &_plant_FF16_Environment__extrinsic_drivers__set, 2},
    {"_plant_FF16r_Strategy__ctor", (DL_FUNC) &_plant_FF16r_Strategy__ctor, 0},
    {"_plant_K93_Strategy__ctor", (DL_FUNC) &_plant_K93_Strategy__ctor, 0},
    {"_plant_K93_Environment__ctor", (DL_FUNC) &_plant_K93_Environment__ctor, 0},
    {"_plant_K93_Environment__canopy_openness", (DL_FUNC) &_plant_K93_Environment__canopy_openness, 2},
    {"_plant_K93_Environment__clear", (DL_FUNC) &_plant_K93_Environment__clear, 1},
    {"_plant_K93_Environment__set_fixed_environment", (DL_FUNC) &_plant_K93_Environment__set_fixed_environment, 3},
    {"_plant_K93_Environment__time__get", (DL_FUNC) &_plant_K93_Environment__time__get, 1},
    {"_plant_K93_Environment__time__set", (DL_FUNC) &_plant_K93_Environment__time__set, 2},
    {"_plant_K93_Environment__canopy__get", (DL_FUNC) &_plant_K93_Environment__canopy__get, 1},
    {"_plant_K93_Environment__canopy__set", (DL_FUNC) &_plant_K93_Environment__canopy__set, 2},
    {"_plant_K93_Environment__ode_size__get", (DL_FUNC) &_plant_K93_Environment__ode_size__get, 1},
    {"_plant_FF16w_Strategy__ctor", (DL_FUNC) &_plant_FF16w_Strategy__ctor, 0},
    {"_plant_ExtrinsicDrivers__ctor", (DL_FUNC) &_plant_ExtrinsicDrivers__ctor, 0},
    {"_plant_ExtrinsicDrivers__evaluate", (DL_FUNC) &_plant_ExtrinsicDrivers__evaluate, 3},
    {"_plant_ExtrinsicDrivers__evaluate_range", (DL_FUNC) &_plant_ExtrinsicDrivers__evaluate_range, 3},
    {"_plant_ExtrinsicDrivers__get_names", (DL_FUNC) &_plant_ExtrinsicDrivers__get_names, 1},
    {"_plant_ExtrinsicDrivers__set_constant", (DL_FUNC) &_plant_ExtrinsicDrivers__set_constant, 3},
    {"_plant_ExtrinsicDrivers__set_variable", (DL_FUNC) &_plant_ExtrinsicDrivers__set_variable, 4},
    {"_plant_ExtrinsicDrivers__set_extrapolate", (DL_FUNC) &_plant_ExtrinsicDrivers__set_extrapolate, 3},
    {"_plant_test_adaptive_interpolator", (DL_FUNC) &_plant_test_adaptive_interpolator, 3},
    {"_plant_node_schedule_default__Parameters___FF16__FF16_Env", (DL_FUNC) &_plant_node_schedule_default__Parameters___FF16__FF16_Env, 1},
    {"_plant_make_node_schedule__Parameters___FF16__FF16_Env", (DL_FUNC) &_plant_make_node_schedule__Parameters___FF16__FF16_Env, 1},
    {"_plant_node_schedule_default__Parameters___FF16r__FF16_Env", (DL_FUNC) &_plant_node_schedule_default__Parameters___FF16r__FF16_Env, 1},
    {"_plant_make_node_schedule__Parameters___FF16r__FF16_Env", (DL_FUNC) &_plant_make_node_schedule__Parameters___FF16r__FF16_Env, 1},
    {"_plant_node_schedule_default__Parameters___FF16w__FF16_Env", (DL_FUNC) &_plant_node_schedule_default__Parameters___FF16w__FF16_Env, 1},
    {"_plant_make_node_schedule__Parameters___FF16w__FF16_Env", (DL_FUNC) &_plant_make_node_schedule__Parameters___FF16w__FF16_Env, 1},
    {"_plant_test_gradient_fd1", (DL_FUNC) &_plant_test_gradient_fd1, 5},
    {"_plant_test_gradient_richardson", (DL_FUNC) &_plant_test_gradient_richardson, 4},
    {"_plant_FF16_oderunner_individual_internals", (DL_FUNC) &_plant_FF16_oderunner_individual_internals, 1},
    {"_plant_FF16r_oderunner_individual_internals", (DL_FUNC) &_plant_FF16r_oderunner_individual_internals, 1},
    {"_plant_K93_oderunner_individual_internals", (DL_FUNC) &_plant_K93_oderunner_individual_internals, 1},
    {"_plant_FF16w_oderunner_individual_internals", (DL_FUNC) &_plant_FF16w_oderunner_individual_internals, 1},
    {"_plant_node_schedule_default__Parameters___K93__K93_Env", (DL_FUNC) &_plant_node_schedule_default__Parameters___K93__K93_Env, 1},
    {"_plant_make_node_schedule__Parameters___K93__K93_Env", (DL_FUNC) &_plant_make_node_schedule__Parameters___K93__K93_Env, 1},
    {"_plant_node_schedule_times_default", (DL_FUNC) &_plant_node_schedule_times_default, 1},
    {"_plant_test_uniroot", (DL_FUNC) &_plant_test_uniroot, 3},
    {"_plant_trapezium", (DL_FUNC) &_plant_trapezium, 2},
    {"_plant_trapezium_vector", (DL_FUNC) &_plant_trapezium_vector, 2},
    {"_plant_local_error_integration", (DL_FUNC) &_plant_local_error_integration, 3},
    {"_plant_matrix_to_list", (DL_FUNC) &_plant_matrix_to_list, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_plant(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
