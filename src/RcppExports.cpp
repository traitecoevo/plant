// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/plant.h"
#include <Rcpp.h>

using namespace Rcpp;

// Lorenz__ctor
plant::ode::test::Lorenz Lorenz__ctor(double sigma, double R, double b);
RcppExport SEXP _plant_Lorenz__ctor(SEXP sigmaSEXP, SEXP RSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ctor(sigma, R, b));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_size__get
size_t Lorenz__ode_size__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_state__get
plant::ode::state_type Lorenz__ode_state__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__ode_state__set
void Lorenz__ode_state__set(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Lorenz__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Lorenz__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Lorenz__ode_rates__get
plant::ode::state_type Lorenz__ode_rates__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz__pars__get
std::vector<double> Lorenz__pars__get(plant::RcppR6::RcppR6<plant::ode::test::Lorenz> obj_);
RcppExport SEXP _plant_Lorenz__pars__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::Lorenz> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz__pars__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeR__ctor
plant::ode::test::OdeR OdeR__ctor(Rcpp::Function derivs, Rcpp::Function state, double time);
RcppExport SEXP _plant_OdeR__ctor(SEXP derivsSEXP, SEXP stateSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type derivs(derivsSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type state(stateSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeR__ctor(derivs, state, time));
    return rcpp_result_gen;
END_RCPP
}
// OdeR__update_state
void OdeR__update_state(plant::RcppR6::RcppR6<plant::ode::test::OdeR> obj_);
RcppExport SEXP _plant_OdeR__update_state(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::test::OdeR> >::type obj_(obj_SEXP);
    OdeR__update_state(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__ctor
plant::ode::Runner<plant::ode::test::Lorenz> OdeRunner___Lorenz__ctor(plant::ode::test::Lorenz obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___Lorenz__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::ode::test::Lorenz >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__advance
void OdeRunner___Lorenz__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__advance_fixed
void OdeRunner___Lorenz__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___Lorenz__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___Lorenz__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__step
void OdeRunner___Lorenz__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    OdeRunner___Lorenz__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__step_to
void OdeRunner___Lorenz__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__set_state
void OdeRunner___Lorenz__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___Lorenz__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___Lorenz__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__set_state_from_system
void OdeRunner___Lorenz__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    OdeRunner___Lorenz__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___Lorenz__time__get
double OdeRunner___Lorenz__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__state__get
plant::ode::state_type OdeRunner___Lorenz__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__times__get
std::vector<double> OdeRunner___Lorenz__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___Lorenz__object__get
plant::ode::test::Lorenz OdeRunner___Lorenz__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > obj_);
RcppExport SEXP _plant_OdeRunner___Lorenz__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::Lorenz> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___Lorenz__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__ctor
plant::ode::Runner<plant::ode::test::OdeR> OdeRunner___OdeR__ctor(plant::ode::test::OdeR obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___OdeR__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::ode::test::OdeR >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__advance
void OdeRunner___OdeR__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__advance_fixed
void OdeRunner___OdeR__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___OdeR__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___OdeR__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__step
void OdeRunner___OdeR__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    OdeRunner___OdeR__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__step_to
void OdeRunner___OdeR__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__set_state
void OdeRunner___OdeR__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___OdeR__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___OdeR__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__set_state_from_system
void OdeRunner___OdeR__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    OdeRunner___OdeR__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___OdeR__time__get
double OdeRunner___OdeR__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__state__get
plant::ode::state_type OdeRunner___OdeR__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__times__get
std::vector<double> OdeRunner___OdeR__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___OdeR__object__get
plant::ode::test::OdeR OdeRunner___OdeR__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > obj_);
RcppExport SEXP _plant_OdeRunner___OdeR__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::ode::test::OdeR> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___OdeR__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > OdeRunner___FF16__ctor(plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___FF16__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__advance
void OdeRunner___FF16__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__advance_fixed
void OdeRunner___FF16__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___FF16__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___FF16__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__step
void OdeRunner___FF16__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__step_to
void OdeRunner___FF16__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__set_state
void OdeRunner___FF16__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___FF16__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__set_state_from_system
void OdeRunner___FF16__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16__time__get
double OdeRunner___FF16__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__state__get
plant::ode::state_type OdeRunner___FF16__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__times__get
std::vector<double> OdeRunner___FF16__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16__object__get
plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> OdeRunner___FF16__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > OdeRunner___FF16r__ctor(plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___FF16r__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__advance
void OdeRunner___FF16r__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__advance_fixed
void OdeRunner___FF16r__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___FF16r__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___FF16r__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__step
void OdeRunner___FF16r__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16r__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__step_to
void OdeRunner___FF16r__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__set_state
void OdeRunner___FF16r__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___FF16r__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___FF16r__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__set_state_from_system
void OdeRunner___FF16r__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___FF16r__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___FF16r__time__get
double OdeRunner___FF16r__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__state__get
plant::ode::state_type OdeRunner___FF16r__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__times__get
std::vector<double> OdeRunner___FF16r__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___FF16r__object__get
plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> OdeRunner___FF16r__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___FF16r__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___FF16r__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__ctor
plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > OdeRunner___K93__ctor(plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> obj, plant::ode::OdeControl control);
RcppExport SEXP _plant_OdeRunner___K93__ctor(SEXP objSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> >::type obj(objSEXP);
    Rcpp::traits::input_parameter< plant::ode::OdeControl >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__ctor(obj, control));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__advance
void OdeRunner___K93__advance(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___K93__advance(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__advance(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__advance_fixed
void OdeRunner___K93__advance_fixed(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, std::vector<double> time);
RcppExport SEXP _plant_OdeRunner___K93__advance_fixed(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    OdeRunner___K93__advance_fixed(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__step
void OdeRunner___K93__step(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__step(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___K93__step(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__step_to
void OdeRunner___K93__step_to(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, double time);
RcppExport SEXP _plant_OdeRunner___K93__step_to(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__step_to(obj_, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__set_state
void OdeRunner___K93__set_state(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_, plant::ode::state_type y, double time);
RcppExport SEXP _plant_OdeRunner___K93__set_state(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    OdeRunner___K93__set_state(obj_, y, time);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__set_state_from_system
void OdeRunner___K93__set_state_from_system(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__set_state_from_system(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    OdeRunner___K93__set_state_from_system(obj_);
    return R_NilValue;
END_RCPP
}
// OdeRunner___K93__time__get
double OdeRunner___K93__time__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__state__get
plant::ode::state_type OdeRunner___K93__state__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__times__get
std::vector<double> OdeRunner___K93__times__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// OdeRunner___K93__object__get
plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> OdeRunner___K93__object__get(plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > obj_);
RcppExport SEXP _plant_OdeRunner___K93__object__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment> > > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(OdeRunner___K93__object__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__ctor
plant::CohortScheduleEvent CohortScheduleEvent__ctor(double introduction, plant::util::index species_index);
RcppExport SEXP _plant_CohortScheduleEvent__ctor(SEXP introductionSEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type introduction(introductionSEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__ctor(introduction, species_index));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__species_index__get
plant::util::index CohortScheduleEvent__species_index__get(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_);
RcppExport SEXP _plant_CohortScheduleEvent__species_index__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__species_index__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__species_index__set
void CohortScheduleEvent__species_index__set(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_, plant::util::index value);
RcppExport SEXP _plant_CohortScheduleEvent__species_index__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type value(valueSEXP);
    CohortScheduleEvent__species_index__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// CohortScheduleEvent__times__get
std::vector<double> CohortScheduleEvent__times__get(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_);
RcppExport SEXP _plant_CohortScheduleEvent__times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__time_introduction__get
double CohortScheduleEvent__time_introduction__get(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_);
RcppExport SEXP _plant_CohortScheduleEvent__time_introduction__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__time_introduction__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__time_end__get
double CohortScheduleEvent__time_end__get(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_);
RcppExport SEXP _plant_CohortScheduleEvent__time_end__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__time_end__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortScheduleEvent__species_index_raw__get
size_t CohortScheduleEvent__species_index_raw__get(plant::RcppR6::RcppR6<plant::CohortScheduleEvent> obj_);
RcppExport SEXP _plant_CohortScheduleEvent__species_index_raw__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortScheduleEvent> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortScheduleEvent__species_index_raw__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__ctor
plant::CohortSchedule CohortSchedule__ctor(size_t n_species);
RcppExport SEXP _plant_CohortSchedule__ctor(SEXP n_speciesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type n_species(n_speciesSEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__ctor(n_species));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__expand
plant::CohortSchedule CohortSchedule__expand(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, size_t n_extra, std::vector<double> times);
RcppExport SEXP _plant_CohortSchedule__expand(SEXP obj_SEXP, SEXP n_extraSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type n_extra(n_extraSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__expand(obj_, n_extra, times));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__clear_times
void CohortSchedule__clear_times(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, plant::util::index species_index);
RcppExport SEXP _plant_CohortSchedule__clear_times(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    CohortSchedule__clear_times(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__clear_ode_times
void CohortSchedule__clear_ode_times(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__clear_ode_times(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    CohortSchedule__clear_ode_times(obj_);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__set_times
void CohortSchedule__set_times(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, std::vector<double> times, plant::util::index species_index);
RcppExport SEXP _plant_CohortSchedule__set_times(SEXP obj_SEXP, SEXP timesSEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    CohortSchedule__set_times(obj_, times, species_index);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__times
std::vector<double> CohortSchedule__times(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, plant::util::index species_index);
RcppExport SEXP _plant_CohortSchedule__times(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__times(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__reset
void CohortSchedule__reset(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    CohortSchedule__reset(obj_);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__pop
void CohortSchedule__pop(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__pop(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    CohortSchedule__pop(obj_);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__copy
plant::CohortSchedule CohortSchedule__copy(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__copy(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__copy(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__size__get
size_t CohortSchedule__size__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__n_species__get
size_t CohortSchedule__n_species__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__n_species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__n_species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__next_event__get
plant::CohortScheduleEvent CohortSchedule__next_event__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__next_event__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__next_event__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__remaining__get
size_t CohortSchedule__remaining__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__remaining__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__remaining__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__max_time__get
double CohortSchedule__max_time__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__max_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__max_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__max_time__set
void CohortSchedule__max_time__set(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, double value);
RcppExport SEXP _plant_CohortSchedule__max_time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    CohortSchedule__max_time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__ode_times__get
std::vector<double> CohortSchedule__ode_times__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__ode_times__set
void CohortSchedule__ode_times__set(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, std::vector<double> value);
RcppExport SEXP _plant_CohortSchedule__ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    CohortSchedule__ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__use_ode_times__get
bool CohortSchedule__use_ode_times__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__use_ode_times__set
void CohortSchedule__use_ode_times__set(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, bool value);
RcppExport SEXP _plant_CohortSchedule__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    CohortSchedule__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// CohortSchedule__all_times__get
SEXP CohortSchedule__all_times__get(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_);
RcppExport SEXP _plant_CohortSchedule__all_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(CohortSchedule__all_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// CohortSchedule__all_times__set
void CohortSchedule__all_times__set(plant::RcppR6::RcppR6<plant::CohortSchedule> obj_, SEXP value);
RcppExport SEXP _plant_CohortSchedule__all_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::CohortSchedule> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type value(valueSEXP);
    CohortSchedule__all_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Disturbance__ctor
plant::Disturbance Disturbance__ctor(double mean_interval);
RcppExport SEXP _plant_Disturbance__ctor(SEXP mean_intervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mean_interval(mean_intervalSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__ctor(mean_interval));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance__density
std::vector<double> Disturbance__density(plant::RcppR6::RcppR6<plant::Disturbance> obj_, std::vector<double> time);
RcppExport SEXP _plant_Disturbance__density(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__density(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance__pr_survival
double Disturbance__pr_survival(plant::RcppR6::RcppR6<plant::Disturbance> obj_, double time);
RcppExport SEXP _plant_Disturbance__pr_survival(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__pr_survival(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance__pr_survival_conditional
double Disturbance__pr_survival_conditional(plant::RcppR6::RcppR6<plant::Disturbance> obj_, double time, double time_start);
RcppExport SEXP _plant_Disturbance__pr_survival_conditional(SEXP obj_SEXP, SEXP timeSEXP, SEXP time_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type time_start(time_startSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__pr_survival_conditional(obj_, time, time_start));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance__cdf
double Disturbance__cdf(plant::RcppR6::RcppR6<plant::Disturbance> obj_, double time);
RcppExport SEXP _plant_Disturbance__cdf(SEXP obj_SEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__cdf(obj_, time));
    return rcpp_result_gen;
END_RCPP
}
// Disturbance__mean_interval__get
double Disturbance__mean_interval__get(plant::RcppR6::RcppR6<plant::Disturbance> obj_);
RcppExport SEXP _plant_Disturbance__mean_interval__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Disturbance> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Disturbance__mean_interval__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Control__ctor
SEXP Control__ctor();
RcppExport SEXP _plant_Control__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Control__ctor());
    return rcpp_result_gen;
END_RCPP
}
// OdeControl__ctor
SEXP OdeControl__ctor();
RcppExport SEXP _plant_OdeControl__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OdeControl__ctor());
    return rcpp_result_gen;
END_RCPP
}
// QK__ctor
plant::quadrature::QK QK__ctor(size_t rule);
RcppExport SEXP _plant_QK__ctor(SEXP ruleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type rule(ruleSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__ctor(rule));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate
double QK__integrate(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QK__integrate(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate_vector_x
std::vector<double> QK__integrate_vector_x(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, double a, double b);
RcppExport SEXP _plant_QK__integrate_vector_x(SEXP obj_SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate_vector_x(obj_, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__integrate_vector
double QK__integrate_vector(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_, std::vector<double> y, double a, double b);
RcppExport SEXP _plant_QK__integrate_vector(SEXP obj_SEXP, SEXP ySEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QK__integrate_vector(obj_, y, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area__get
double QK__last_area__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_error__get
double QK__last_error__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area_abs__get
double QK__last_area_abs__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area_abs__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area_abs__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QK__last_area_asc__get
double QK__last_area_asc__get(plant::RcppR6::RcppR6<plant::quadrature::QK> obj_);
RcppExport SEXP _plant_QK__last_area_asc__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QK> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QK__last_area_asc__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__ctor
plant::quadrature::QAG QAG__ctor(size_t rule, size_t max_iterations, double atol, double rtol);
RcppExport SEXP _plant_QAG__ctor(SEXP ruleSEXP, SEXP max_iterationsSEXP, SEXP atolSEXP, SEXP rtolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type rule(ruleSEXP);
    Rcpp::traits::input_parameter< size_t >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< double >::type atol(atolSEXP);
    Rcpp::traits::input_parameter< double >::type rtol(rtolSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__ctor(rule, max_iterations, atol, rtol));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate
double QAG__integrate(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QAG__integrate(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate_with_intervals
double QAG__integrate_with_intervals(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, SEXP intervals);
RcppExport SEXP _plant_QAG__integrate_with_intervals(SEXP obj_SEXP, SEXP fSEXP, SEXP intervalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< SEXP >::type intervals(intervalsSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate_with_intervals(obj_, f, intervals));
    return rcpp_result_gen;
END_RCPP
}
// QAG__integrate_with_last_intervals
double QAG__integrate_with_last_intervals(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_, SEXP f, double a, double b);
RcppExport SEXP _plant_QAG__integrate_with_last_intervals(SEXP obj_SEXP, SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__integrate_with_last_intervals(obj_, f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_area__get
double QAG__last_area__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_area__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_area__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_error__get
double QAG__last_error__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_iterations__get
size_t QAG__last_iterations__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_iterations__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_iterations__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__last_intervals__get
plant::quadrature::intervals_type QAG__last_intervals__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__last_intervals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__last_intervals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// QAG__is_adaptive__get
bool QAG__is_adaptive__get(plant::RcppR6::RcppR6<plant::quadrature::QAG> obj_);
RcppExport SEXP _plant_QAG__is_adaptive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::quadrature::QAG> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(QAG__is_adaptive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__ctor
plant::interpolator::Interpolator Interpolator__ctor();
RcppExport SEXP _plant_Interpolator__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Interpolator__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__init
void Interpolator__init(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_, const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_Interpolator__init(SEXP obj_SEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    Interpolator__init(obj_, x, y);
    return R_NilValue;
END_RCPP
}
// Interpolator__eval
std::vector<double> Interpolator__eval(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_, std::vector<double> x);
RcppExport SEXP _plant_Interpolator__eval(SEXP obj_SEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__eval(obj_, x));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__x__get
std::vector<double> Interpolator__x__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__x__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__x__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__y__get
std::vector<double> Interpolator__y__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__y__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__y__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__xy__get
SEXP Interpolator__xy__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__xy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__xy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__size__get
size_t Interpolator__size__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__min__get
double Interpolator__min__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__min__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__min__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Interpolator__max__get
double Interpolator__max__get(plant::RcppR6::RcppR6<plant::interpolator::Interpolator> obj_);
RcppExport SEXP _plant_Interpolator__max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::interpolator::Interpolator> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Interpolator__max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ctor
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> Individual___FF16__FF16_Env__ctor(plant::FF16_Strategy s);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__state
double Individual___FF16__FF16_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__rate
double Individual___FF16__FF16_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux
double Individual___FF16__FF16_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__set_state
void Individual___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___FF16__FF16_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__compute_competition
double Individual___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__compute_rates
void Individual___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Individual___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__establishment_probability
double Individual___FF16__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__net_mass_production_dt
double Individual___FF16__FF16_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__reset_mortality
void Individual___FF16__FF16_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Individual___FF16__FF16_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__lcp_whole_plant
double Individual___FF16__FF16_Env__lcp_whole_plant(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__lcp_whole_plant(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__lcp_whole_plant(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__strategy__get
plant::FF16_Strategy Individual___FF16__FF16_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__internals__get
plant::Internals Individual___FF16__FF16_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux_size__get
size_t Individual___FF16__FF16_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_size__get
size_t Individual___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_names__get
std::vector<std::string> Individual___FF16__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__aux_names__get
std::vector<std::string> Individual___FF16__FF16_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_state__get
plant::ode::state_type Individual___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_state__set
void Individual___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Individual___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__mortality_probability__get
double Individual___FF16__FF16_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16__FF16_Env__strategy_name__get
std::string Individual___FF16__FF16_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16__FF16_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16__FF16_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ctor
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> Individual___FF16r__FF16_Env__ctor(plant::FF16r_Strategy s);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__state
double Individual___FF16r__FF16_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__rate
double Individual___FF16r__FF16_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux
double Individual___FF16r__FF16_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__set_state
void Individual___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___FF16r__FF16_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__compute_competition
double Individual___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__compute_rates
void Individual___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Individual___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__establishment_probability
double Individual___FF16r__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__net_mass_production_dt
double Individual___FF16r__FF16_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__reset_mortality
void Individual___FF16r__FF16_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Individual___FF16r__FF16_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__lcp_whole_plant
double Individual___FF16r__FF16_Env__lcp_whole_plant(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__lcp_whole_plant(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__lcp_whole_plant(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__strategy__get
plant::FF16r_Strategy Individual___FF16r__FF16_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__internals__get
plant::Internals Individual___FF16r__FF16_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux_size__get
size_t Individual___FF16r__FF16_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_size__get
size_t Individual___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_names__get
std::vector<std::string> Individual___FF16r__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__aux_names__get
std::vector<std::string> Individual___FF16r__FF16_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Individual___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_state__set
void Individual___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Individual___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__mortality_probability__get
double Individual___FF16r__FF16_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___FF16r__FF16_Env__strategy_name__get
std::string Individual___FF16r__FF16_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Individual___FF16r__FF16_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___FF16r__FF16_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ctor
plant::Individual<plant::K93_Strategy,plant::K93_Environment> Individual___K93__K93_Env__ctor(plant::K93_Strategy s);
RcppExport SEXP _plant_Individual___K93__K93_Env__ctor(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ctor(s));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__state
double Individual___K93__K93_Env__state(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__state(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__state(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__rate
double Individual___K93__K93_Env__rate(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__rate(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__rate(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux
double Individual___K93__K93_Env__aux(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux(SEXP obj_SEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux(obj_, name));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__set_state
void Individual___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, std::string name, double v);
RcppExport SEXP _plant_Individual___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP nameSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Individual___K93__K93_Env__set_state(obj_, name, v);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__compute_competition
double Individual___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, double h);
RcppExport SEXP _plant_Individual___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__compute_competition(obj_, h));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__compute_rates
void Individual___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Individual___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__establishment_probability
double Individual___K93__K93_Env__establishment_probability(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__net_mass_production_dt
double Individual___K93__K93_Env__net_mass_production_dt(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Individual___K93__K93_Env__net_mass_production_dt(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__net_mass_production_dt(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__reset_mortality
void Individual___K93__K93_Env__reset_mortality(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__reset_mortality(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Individual___K93__K93_Env__reset_mortality(obj_);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__lcp_whole_plant
double Individual___K93__K93_Env__lcp_whole_plant(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__lcp_whole_plant(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__lcp_whole_plant(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__strategy__get
plant::K93_Strategy Individual___K93__K93_Env__strategy__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__strategy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__strategy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__internals__get
plant::Internals Individual___K93__K93_Env__internals__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__internals__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__internals__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux_size__get
size_t Individual___K93__K93_Env__aux_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_size__get
size_t Individual___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_names__get
std::vector<std::string> Individual___K93__K93_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__aux_names__get
std::vector<std::string> Individual___K93__K93_Env__aux_names__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__aux_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__aux_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_state__get
plant::ode::state_type Individual___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__ode_state__set
void Individual___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Individual___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Individual___K93__K93_Env__ode_rates__get
plant::ode::state_type Individual___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__mortality_probability__get
double Individual___K93__K93_Env__mortality_probability__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__mortality_probability__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__mortality_probability__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Individual___K93__K93_Env__strategy_name__get
std::string Individual___K93__K93_Env__strategy_name__get(plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Individual___K93__K93_Env__strategy_name__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Individual___K93__K93_Env__strategy_name__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__ctor
plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> IndividualRunner___FF16__FF16_Env__ctor(plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> plant, plant::FF16_Environment environment);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__ctor(SEXP plantSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> >::type plant(plantSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16__FF16_Env__ctor(plant, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__plant__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> IndividualRunner___FF16__FF16_Env__plant__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16__FF16_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16__FF16_Env__plant__set
void IndividualRunner___FF16__FF16_Env__plant__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> value);
RcppExport SEXP _plant_IndividualRunner___FF16__FF16_Env__plant__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> >::type value(valueSEXP);
    IndividualRunner___FF16__FF16_Env__plant__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__ctor
plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> IndividualRunner___FF16r__FF16_Env__ctor(plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> plant, plant::FF16_Environment environment);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__ctor(SEXP plantSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> >::type plant(plantSEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16r__FF16_Env__ctor(plant, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__plant__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> IndividualRunner___FF16r__FF16_Env__plant__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___FF16r__FF16_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___FF16r__FF16_Env__plant__set
void IndividualRunner___FF16r__FF16_Env__plant__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> value);
RcppExport SEXP _plant_IndividualRunner___FF16r__FF16_Env__plant__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> >::type value(valueSEXP);
    IndividualRunner___FF16r__FF16_Env__plant__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// IndividualRunner___K93__K93_Env__ctor
plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> IndividualRunner___K93__K93_Env__ctor(plant::Individual<plant::K93_Strategy,plant::K93_Environment> plant, plant::K93_Environment environment);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__ctor(SEXP plantSEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Individual<plant::K93_Strategy,plant::K93_Environment> >::type plant(plantSEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___K93__K93_Env__ctor(plant, environment));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___K93__K93_Env__plant__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> IndividualRunner___K93__K93_Env__plant__get(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(IndividualRunner___K93__K93_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// IndividualRunner___K93__K93_Env__plant__set
void IndividualRunner___K93__K93_Env__plant__set(plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::Individual<plant::K93_Strategy,plant::K93_Environment> value);
RcppExport SEXP _plant_IndividualRunner___K93__K93_Env__plant__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::tools::IndividualRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Individual<plant::K93_Strategy,plant::K93_Environment> >::type value(valueSEXP);
    IndividualRunner___K93__K93_Env__plant__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__ctor
plant::Internals Internals__ctor(size_t s_size, size_t a_size);
RcppExport SEXP _plant_Internals__ctor(SEXP s_sizeSEXP, SEXP a_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< size_t >::type s_size(s_sizeSEXP);
    Rcpp::traits::input_parameter< size_t >::type a_size(a_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__ctor(s_size, a_size));
    return rcpp_result_gen;
END_RCPP
}
// Internals__state
double Internals__state(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__state(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__state(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__rate
double Internals__rate(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__rate(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__rate(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__aux
double Internals__aux(plant::RcppR6::RcppR6<plant::Internals> obj_, int i);
RcppExport SEXP _plant_Internals__aux(SEXP obj_SEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__aux(obj_, i));
    return rcpp_result_gen;
END_RCPP
}
// Internals__set_aux
void Internals__set_aux(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_aux(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_aux(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__set_state
void Internals__set_state(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_state(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_state(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__set_rate
void Internals__set_rate(plant::RcppR6::RcppR6<plant::Internals> obj_, int i, double v);
RcppExport SEXP _plant_Internals__set_rate(SEXP obj_SEXP, SEXP iSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Internals__set_rate(obj_, i, v);
    return R_NilValue;
END_RCPP
}
// Internals__resize
void Internals__resize(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t new_size, size_t new_aux_size);
RcppExport SEXP _plant_Internals__resize(SEXP obj_SEXP, SEXP new_sizeSEXP, SEXP new_aux_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type new_size(new_sizeSEXP);
    Rcpp::traits::input_parameter< size_t >::type new_aux_size(new_aux_sizeSEXP);
    Internals__resize(obj_, new_size, new_aux_size);
    return R_NilValue;
END_RCPP
}
// Internals__state_size__get
size_t Internals__state_size__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__state_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__state_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__state_size__set
void Internals__state_size__set(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t value);
RcppExport SEXP _plant_Internals__state_size__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type value(valueSEXP);
    Internals__state_size__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__aux_size__get
size_t Internals__aux_size__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__aux_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__aux_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__aux_size__set
void Internals__aux_size__set(plant::RcppR6::RcppR6<plant::Internals> obj_, size_t value);
RcppExport SEXP _plant_Internals__aux_size__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< size_t >::type value(valueSEXP);
    Internals__aux_size__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__states__get
std::vector<double> Internals__states__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__states__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__states__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__states__set
void Internals__states__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__states__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__states__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__rates__get
std::vector<double> Internals__rates__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__rates__set
void Internals__rates__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__rates__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__rates__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Internals__auxs__get
std::vector<double> Internals__auxs__get(plant::RcppR6::RcppR6<plant::Internals> obj_);
RcppExport SEXP _plant_Internals__auxs__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Internals__auxs__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Internals__auxs__set
void Internals__auxs__set(plant::RcppR6::RcppR6<plant::Internals> obj_, std::vector<double> value);
RcppExport SEXP _plant_Internals__auxs__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Internals> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Internals__auxs__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Parameters___FF16__FF16_Env__ctor
SEXP Parameters___FF16__FF16_Env__ctor();
RcppExport SEXP _plant_Parameters___FF16__FF16_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16__FF16_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16__FF16_Env__vdor
SEXP Parameters___FF16__FF16_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___FF16__FF16_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16__FF16_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16r__FF16_Env__ctor
SEXP Parameters___FF16r__FF16_Env__ctor();
RcppExport SEXP _plant_Parameters___FF16r__FF16_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16r__FF16_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___FF16r__FF16_Env__vdor
SEXP Parameters___FF16r__FF16_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___FF16r__FF16_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___FF16r__FF16_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Parameters___K93__K93_Env__ctor
SEXP Parameters___K93__K93_Env__ctor();
RcppExport SEXP _plant_Parameters___K93__K93_Env__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Parameters___K93__K93_Env__ctor());
    return rcpp_result_gen;
END_RCPP
}
// Parameters___K93__K93_Env__vdor
SEXP Parameters___K93__K93_Env__vdor(SEXP obj);
RcppExport SEXP _plant_Parameters___K93__K93_Env__vdor(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(Parameters___K93__K93_Env__vdor(obj));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__ctor
plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> Cohort___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__compute_competition
double Cohort___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__growth_rate_gradient
double Cohort___FF16__FF16_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__compute_rates
void Cohort___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Cohort___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16__FF16_Env__compute_initial_conditions
void Cohort___FF16__FF16_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Cohort___FF16__FF16_Env__compute_initial_conditions(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16__FF16_Env__plant__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> Cohort___FF16__FF16_Env__plant__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__height__get
double Cohort___FF16__FF16_Env__height__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__log_density__get
double Cohort___FF16__FF16_Env__log_density__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__competition_effect__get
double Cohort___FF16__FF16_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__fecundity__get
double Cohort___FF16__FF16_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__ode_size__get
size_t Cohort___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__ode_state__get
plant::ode::state_type Cohort___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__ode_state__set
void Cohort___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Cohort___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Cohort___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16__FF16_Env__ode_names__get
std::vector<std::string> Cohort___FF16__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ctor
plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> Cohort___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__compute_competition
double Cohort___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__growth_rate_gradient
double Cohort___FF16r__FF16_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__compute_rates
void Cohort___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Cohort___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16r__FF16_Env__compute_initial_conditions
void Cohort___FF16r__FF16_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Cohort___FF16r__FF16_Env__compute_initial_conditions(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16r__FF16_Env__plant__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> Cohort___FF16r__FF16_Env__plant__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__height__get
double Cohort___FF16r__FF16_Env__height__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__log_density__get
double Cohort___FF16r__FF16_Env__log_density__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__competition_effect__get
double Cohort___FF16r__FF16_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__fecundity__get
double Cohort___FF16r__FF16_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ode_size__get
size_t Cohort___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Cohort___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ode_state__set
void Cohort___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Cohort___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Cohort___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___FF16r__FF16_Env__ode_names__get
std::vector<std::string> Cohort___FF16r__FF16_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Cohort___FF16r__FF16_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___FF16r__FF16_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__ctor
plant::Cohort<plant::K93_Strategy,plant::K93_Environment> Cohort___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__compute_competition
double Cohort___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Cohort___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__growth_rate_gradient
double Cohort___K93__K93_Env__growth_rate_gradient(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Cohort___K93__K93_Env__growth_rate_gradient(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__growth_rate_gradient(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__compute_rates
void Cohort___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Cohort___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Cohort___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___K93__K93_Env__compute_initial_conditions
void Cohort___K93__K93_Env__compute_initial_conditions(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Cohort___K93__K93_Env__compute_initial_conditions(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Cohort___K93__K93_Env__compute_initial_conditions(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Cohort___K93__K93_Env__plant__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> Cohort___K93__K93_Env__plant__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__plant__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__plant__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__height__get
double Cohort___K93__K93_Env__height__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__height__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__height__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__log_density__get
double Cohort___K93__K93_Env__log_density__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__log_density__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__log_density__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__competition_effect__get
double Cohort___K93__K93_Env__competition_effect__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__competition_effect__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__competition_effect__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__fecundity__get
double Cohort___K93__K93_Env__fecundity__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__fecundity__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__fecundity__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__ode_size__get
size_t Cohort___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__ode_state__get
plant::ode::state_type Cohort___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__ode_state__set
void Cohort___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Cohort___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Cohort___K93__K93_Env__ode_rates__get
plant::ode::state_type Cohort___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Cohort___K93__K93_Env__ode_names__get
std::vector<std::string> Cohort___K93__K93_Env__ode_names__get(plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Cohort___K93__K93_Env__ode_names__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Cohort___K93__K93_Env__ode_names__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ctor
plant::Species<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__clear
void Species___FF16__FF16_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__compute_rates
void Species___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Species___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Species___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__compute_competition
double Species___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__add_seed
void Species___FF16__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16__FF16_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__cohort_at
plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__cohort_at(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___FF16__FF16_Env__cohort_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__cohort_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__competition_effects_error
std::vector<double> Species___FF16__FF16_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___FF16__FF16_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__size__get
size_t Species___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__seed__get
plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> Species___FF16__FF16_Env__seed__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__height_max__get
double Species___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__heights__get
std::vector<double> Species___FF16__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__heights__set
void Species___FF16__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___FF16__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___FF16__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__log_densities__get
std::vector<double> Species___FF16__FF16_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__cohorts__get
std::vector<plant::Cohort<plant::FF16_Strategy,plant::FF16_Environment> > Species___FF16__FF16_Env__cohorts__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__cohorts__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__cohorts__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__seeds__get
std::vector<double> Species___FF16__FF16_Env__seeds__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__competition_effects__get
std::vector<double> Species___FF16__FF16_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_size__get
size_t Species___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_state__get
plant::ode::state_type Species___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16__FF16_Env__ode_state__set
void Species___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Species___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ctor
plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__clear
void Species___FF16r__FF16_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16r__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__compute_rates
void Species___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    Species___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__compute_competition
double Species___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__add_seed
void Species___FF16r__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Species___FF16r__FF16_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__cohort_at
plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__cohort_at(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__cohort_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__cohort_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__competition_effects_error
std::vector<double> Species___FF16r__FF16_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__size__get
size_t Species___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__seed__get
plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> Species___FF16r__FF16_Env__seed__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__height_max__get
double Species___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__heights__get
std::vector<double> Species___FF16r__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__heights__set
void Species___FF16r__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___FF16r__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__log_densities__get
std::vector<double> Species___FF16r__FF16_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__cohorts__get
std::vector<plant::Cohort<plant::FF16r_Strategy,plant::FF16_Environment> > Species___FF16r__FF16_Env__cohorts__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__cohorts__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__cohorts__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__seeds__get
std::vector<double> Species___FF16r__FF16_Env__seeds__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__competition_effects__get
std::vector<double> Species___FF16r__FF16_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_size__get
size_t Species___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Species___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_state__set
void Species___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Species___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Species___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ctor
plant::Species<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_Species___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__clear
void Species___K93__K93_Env__clear(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Species___K93__K93_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__compute_rates
void Species___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_Species___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    Species___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__compute_competition
double Species___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Species___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__add_seed
void Species___K93__K93_Env__add_seed(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Species___K93__K93_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__cohort_at
plant::Cohort<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__cohort_at(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_Species___K93__K93_Env__cohort_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__cohort_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__competition_effects_error
std::vector<double> Species___K93__K93_Env__competition_effects_error(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, double scal);
RcppExport SEXP _plant_Species___K93__K93_Env__competition_effects_error(SEXP obj_SEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__competition_effects_error(obj_, scal));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__size__get
size_t Species___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__seed__get
plant::Cohort<plant::K93_Strategy,plant::K93_Environment> Species___K93__K93_Env__seed__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__height_max__get
double Species___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__heights__get
std::vector<double> Species___K93__K93_Env__heights__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__heights__set
void Species___K93__K93_Env__heights__set(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_Species___K93__K93_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    Species___K93__K93_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__log_densities__get
std::vector<double> Species___K93__K93_Env__log_densities__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__log_densities__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__log_densities__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__cohorts__get
std::vector<plant::Cohort<plant::K93_Strategy,plant::K93_Environment> > Species___K93__K93_Env__cohorts__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__cohorts__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__cohorts__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__seeds__get
std::vector<double> Species___K93__K93_Env__seeds__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__competition_effects__get
std::vector<double> Species___K93__K93_Env__competition_effects__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__competition_effects__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__competition_effects__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_size__get
size_t Species___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_state__get
plant::ode::state_type Species___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Species___K93__K93_Env__ode_state__set
void Species___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    Species___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// Species___K93__K93_Env__ode_rates__get
plant::ode::state_type Species___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Species___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Species<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Species___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ctor
plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> Patch___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_competition
double Patch___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__add_seed
void Patch___FF16__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___FF16__FF16_Env__add_seed(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_environment
void Patch___FF16__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__compute_rates
void Patch___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__reset
void Patch___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__set_ode_state
void Patch___FF16__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__derivs
plant::ode::state_type Patch___FF16__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__set_state
void Patch___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___FF16__FF16_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___FF16__FF16_Env__time__get
double Patch___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__size__get
size_t Patch___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__height_max__get
double Patch___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> Patch___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__environment__get
plant::FF16_Environment Patch___FF16__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__species__get
std::vector<plant::Species<plant::FF16_Strategy,plant::FF16_Environment> > Patch___FF16__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_size__get
size_t Patch___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_time__get
double Patch___FF16__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_state__get
plant::ode::state_type Patch___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16__FF16_Env__ode_rates__get
plant::ode::state_type Patch___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ctor
plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> Patch___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_competition
double Patch___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__add_seed
void Patch___FF16r__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___FF16r__FF16_Env__add_seed(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_environment
void Patch___FF16r__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__compute_rates
void Patch___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__reset
void Patch___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Patch___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__set_ode_state
void Patch___FF16r__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___FF16r__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__derivs
plant::ode::state_type Patch___FF16r__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__set_state
void Patch___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___FF16r__FF16_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___FF16r__FF16_Env__time__get
double Patch___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__size__get
size_t Patch___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__height_max__get
double Patch___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> Patch___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__environment__get
plant::FF16_Environment Patch___FF16r__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__species__get
std::vector<plant::Species<plant::FF16r_Strategy,plant::FF16_Environment> > Patch___FF16r__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_size__get
size_t Patch___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_time__get
double Patch___FF16r__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_state__get
plant::ode::state_type Patch___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type Patch___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_Patch___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ctor
plant::Patch<plant::K93_Strategy,plant::K93_Environment> Patch___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters);
RcppExport SEXP _plant_Patch___K93__K93_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__compute_competition
double Patch___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__add_seed
void Patch___K93__K93_Env__add_seed(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_Patch___K93__K93_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    Patch___K93__K93_Env__add_seed(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__compute_environment
void Patch___K93__K93_Env__compute_environment(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__compute_rates
void Patch___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__reset
void Patch___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Patch___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__set_ode_state
void Patch___K93__K93_Env__set_ode_state(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Patch___K93__K93_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__derivs
plant::ode::state_type Patch___K93__K93_Env__derivs(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_Patch___K93__K93_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__set_state
void Patch___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n, const std::vector<double>& env);
RcppExport SEXP _plant_Patch___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP, SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type env(envSEXP);
    Patch___K93__K93_Env__set_state(obj_, time, state, n, env);
    return R_NilValue;
END_RCPP
}
// Patch___K93__K93_Env__time__get
double Patch___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__size__get
size_t Patch___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__height_max__get
double Patch___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> Patch___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__environment__get
plant::K93_Environment Patch___K93__K93_Env__environment__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__species__get
std::vector<plant::Species<plant::K93_Strategy,plant::K93_Environment> > Patch___K93__K93_Env__species__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_size__get
size_t Patch___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_time__get
double Patch___K93__K93_Env__ode_time__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_state__get
plant::ode::state_type Patch___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Patch___K93__K93_Env__ode_rates__get
plant::ode::state_type Patch___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_Patch___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Patch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Patch___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__ctor
plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__run
void SCM___FF16__FF16_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__run_next
std::vector<plant::util::index> SCM___FF16__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__reset
void SCM___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__seed_rain
double SCM___FF16__FF16_Env__seed_rain(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__seed_rain(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__seed_rain(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__seed_rain_cohort
std::vector<double> SCM___FF16__FF16_Env__seed_rain_cohort(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__seed_rain_cohort(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__seed_rain_cohort(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__competition_effect_error
std::vector<double> SCM___FF16__FF16_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__set_cohort_schedule_times
void SCM___FF16__FF16_Env__set_cohort_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__set_cohort_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___FF16__FF16_Env__set_cohort_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__complete__get
bool SCM___FF16__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__time__get
double SCM___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__seed_rains__get
std::vector<double> SCM___FF16__FF16_Env__seed_rains__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__seed_rains__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__seed_rains__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__patch__get
plant::Patch<plant::FF16_Strategy,plant::FF16_Environment> SCM___FF16__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__cohort_schedule__get
plant::CohortSchedule SCM___FF16__FF16_Env__cohort_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__cohort_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__cohort_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__cohort_schedule__set
void SCM___FF16__FF16_Env__cohort_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__cohort_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    SCM___FF16__FF16_Env__cohort_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__ode_times__get
std::vector<double> SCM___FF16__FF16_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__state__get
Rcpp::List SCM___FF16__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__use_ode_times__get
bool SCM___FF16__FF16_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16__FF16_Env__use_ode_times__set
void SCM___FF16__FF16_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___FF16__FF16_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16__FF16_Env__seed_rain_error__get
std::vector<std::vector<double> > SCM___FF16__FF16_Env__seed_rain_error__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16__FF16_Env__seed_rain_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16__FF16_Env__seed_rain_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__ctor
plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__run
void SCM___FF16r__FF16_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16r__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__run_next
std::vector<plant::util::index> SCM___FF16r__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__reset
void SCM___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    SCM___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__seed_rain
double SCM___FF16r__FF16_Env__seed_rain(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__seed_rain(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__seed_rain(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__seed_rain_cohort
std::vector<double> SCM___FF16r__FF16_Env__seed_rain_cohort(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__seed_rain_cohort(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__seed_rain_cohort(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__competition_effect_error
std::vector<double> SCM___FF16r__FF16_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__set_cohort_schedule_times
void SCM___FF16r__FF16_Env__set_cohort_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__set_cohort_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___FF16r__FF16_Env__set_cohort_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__complete__get
bool SCM___FF16r__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__time__get
double SCM___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__seed_rains__get
std::vector<double> SCM___FF16r__FF16_Env__seed_rains__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__seed_rains__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__seed_rains__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__patch__get
plant::Patch<plant::FF16r_Strategy,plant::FF16_Environment> SCM___FF16r__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__cohort_schedule__get
plant::CohortSchedule SCM___FF16r__FF16_Env__cohort_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__cohort_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__cohort_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__cohort_schedule__set
void SCM___FF16r__FF16_Env__cohort_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__cohort_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    SCM___FF16r__FF16_Env__cohort_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__ode_times__get
std::vector<double> SCM___FF16r__FF16_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__state__get
Rcpp::List SCM___FF16r__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__use_ode_times__get
bool SCM___FF16r__FF16_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___FF16r__FF16_Env__use_ode_times__set
void SCM___FF16r__FF16_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___FF16r__FF16_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___FF16r__FF16_Env__seed_rain_error__get
std::vector<std::vector<double> > SCM___FF16r__FF16_Env__seed_rain_error__get(plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_SCM___FF16r__FF16_Env__seed_rain_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___FF16r__FF16_Env__seed_rain_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__ctor
plant::SCM<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters);
RcppExport SEXP _plant_SCM___K93__K93_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__run
void SCM___K93__K93_Env__run(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    SCM___K93__K93_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__run_next
std::vector<plant::util::index> SCM___K93__K93_Env__run_next(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__reset
void SCM___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    SCM___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__seed_rain
double SCM___K93__K93_Env__seed_rain(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___K93__K93_Env__seed_rain(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__seed_rain(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__seed_rain_cohort
std::vector<double> SCM___K93__K93_Env__seed_rain_cohort(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___K93__K93_Env__seed_rain_cohort(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__seed_rain_cohort(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__competition_effect_error
std::vector<double> SCM___K93__K93_Env__competition_effect_error(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_SCM___K93__K93_Env__competition_effect_error(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__competition_effect_error(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__set_cohort_schedule_times
void SCM___K93__K93_Env__set_cohort_schedule_times(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_SCM___K93__K93_Env__set_cohort_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    SCM___K93__K93_Env__set_cohort_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__complete__get
bool SCM___K93__K93_Env__complete__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__time__get
double SCM___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__seed_rains__get
std::vector<double> SCM___K93__K93_Env__seed_rains__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__seed_rains__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__seed_rains__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__patch__get
plant::Patch<plant::K93_Strategy,plant::K93_Environment> SCM___K93__K93_Env__patch__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__cohort_schedule__get
plant::CohortSchedule SCM___K93__K93_Env__cohort_schedule__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__cohort_schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__cohort_schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__cohort_schedule__set
void SCM___K93__K93_Env__cohort_schedule__set(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_SCM___K93__K93_Env__cohort_schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    SCM___K93__K93_Env__cohort_schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__ode_times__get
std::vector<double> SCM___K93__K93_Env__ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__state__get
Rcpp::List SCM___K93__K93_Env__state__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__use_ode_times__get
bool SCM___K93__K93_Env__use_ode_times__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__use_ode_times__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__use_ode_times__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// SCM___K93__K93_Env__use_ode_times__set
void SCM___K93__K93_Env__use_ode_times__set(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_, bool value);
RcppExport SEXP _plant_SCM___K93__K93_Env__use_ode_times__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< bool >::type value(valueSEXP);
    SCM___K93__K93_Env__use_ode_times__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// SCM___K93__K93_Env__seed_rain_error__get
std::vector<std::vector<double> > SCM___K93__K93_Env__seed_rain_error__get(plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_SCM___K93__K93_Env__seed_rain_error__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::SCM<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(SCM___K93__K93_Env__seed_rain_error__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ctor
plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__ctor(plant::FF16_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__clear
void StochasticSpecies___FF16__FF16_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__compute_rates
void StochasticSpecies___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    StochasticSpecies___FF16__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__compute_competition
double StochasticSpecies___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__add_seed
void StochasticSpecies___FF16__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16__FF16_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__plant_at
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__plant_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__plant_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__plant_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__deaths
size_t StochasticSpecies___FF16__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__establishment_probability
double StochasticSpecies___FF16__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__size__get
size_t StochasticSpecies___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__size_plants__get
size_t StochasticSpecies___FF16__FF16_Env__size_plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__size_plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__size_plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__seed__get
plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> StochasticSpecies___FF16__FF16_Env__seed__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__height_max__get
double StochasticSpecies___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__heights__get
std::vector<double> StochasticSpecies___FF16__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__heights__set
void StochasticSpecies___FF16__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___FF16__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__plants__get
std::vector<plant::Individual<plant::FF16_Strategy,plant::FF16_Environment> > StochasticSpecies___FF16__FF16_Env__plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__is_alive__get
std::vector<bool> StochasticSpecies___FF16__FF16_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__seeds__get
std::vector<double> StochasticSpecies___FF16__FF16_Env__seeds__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_size__get
size_t StochasticSpecies___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_state__get
plant::ode::state_type StochasticSpecies___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_state__set
void StochasticSpecies___FF16__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___FF16__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16__FF16_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ctor
plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__ctor(plant::FF16r_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::FF16r_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__clear
void StochasticSpecies___FF16r__FF16_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16r__FF16_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__compute_rates
void StochasticSpecies___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    StochasticSpecies___FF16r__FF16_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__compute_competition
double StochasticSpecies___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__add_seed
void StochasticSpecies___FF16r__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___FF16r__FF16_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__plant_at
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__plant_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__plant_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__plant_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__deaths
size_t StochasticSpecies___FF16r__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__establishment_probability
double StochasticSpecies___FF16r__FF16_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::FF16_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::FF16_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__size__get
size_t StochasticSpecies___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__size_plants__get
size_t StochasticSpecies___FF16r__FF16_Env__size_plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__size_plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__size_plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__seed__get
plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> StochasticSpecies___FF16r__FF16_Env__seed__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__height_max__get
double StochasticSpecies___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__heights__get
std::vector<double> StochasticSpecies___FF16r__FF16_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__heights__set
void StochasticSpecies___FF16r__FF16_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___FF16r__FF16_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__plants__get
std::vector<plant::Individual<plant::FF16r_Strategy,plant::FF16_Environment> > StochasticSpecies___FF16r__FF16_Env__plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__is_alive__get
std::vector<bool> StochasticSpecies___FF16r__FF16_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__seeds__get
std::vector<double> StochasticSpecies___FF16r__FF16_Env__seeds__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_size__get
size_t StochasticSpecies___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_state__get
plant::ode::state_type StochasticSpecies___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_state__set
void StochasticSpecies___FF16r__FF16_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___FF16r__FF16_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ctor
plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__ctor(plant::K93_Strategy strategy);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ctor(SEXP strategySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::K93_Strategy >::type strategy(strategySEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ctor(strategy));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__clear
void StochasticSpecies___K93__K93_Env__clear(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___K93__K93_Env__clear(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__compute_rates
void StochasticSpecies___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__compute_rates(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    StochasticSpecies___K93__K93_Env__compute_rates(obj_, environment);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__compute_competition
double StochasticSpecies___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__add_seed
void StochasticSpecies___K93__K93_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__add_seed(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticSpecies___K93__K93_Env__add_seed(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__plant_at
plant::Individual<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__plant_at(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index index);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__plant_at(SEXP obj_SEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__plant_at(obj_, index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__deaths
size_t StochasticSpecies___K93__K93_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__establishment_probability
double StochasticSpecies___K93__K93_Env__establishment_probability(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::K93_Environment environment);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__establishment_probability(SEXP obj_SEXP, SEXP environmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::K93_Environment >::type environment(environmentSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__establishment_probability(obj_, environment));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__size__get
size_t StochasticSpecies___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__size_plants__get
size_t StochasticSpecies___K93__K93_Env__size_plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__size_plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__size_plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__seed__get
plant::Individual<plant::K93_Strategy,plant::K93_Environment> StochasticSpecies___K93__K93_Env__seed__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__seed__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__seed__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__height_max__get
double StochasticSpecies___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__heights__get
std::vector<double> StochasticSpecies___K93__K93_Env__heights__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__heights__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__heights__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__heights__set
void StochasticSpecies___K93__K93_Env__heights__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<double> value);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__heights__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type value(valueSEXP);
    StochasticSpecies___K93__K93_Env__heights__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__plants__get
std::vector<plant::Individual<plant::K93_Strategy,plant::K93_Environment> > StochasticSpecies___K93__K93_Env__plants__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__plants__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__plants__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__is_alive__get
std::vector<bool> StochasticSpecies___K93__K93_Env__is_alive__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__is_alive__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__is_alive__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__seeds__get
std::vector<double> StochasticSpecies___K93__K93_Env__seeds__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__seeds__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__seeds__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_size__get
size_t StochasticSpecies___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_state__get
plant::ode::state_type StochasticSpecies___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_state__set
void StochasticSpecies___K93__K93_Env__ode_state__set(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type value);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_state__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type value(valueSEXP);
    StochasticSpecies___K93__K93_Env__ode_state__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticSpecies___K93__K93_Env__ode_rates__get
plant::ode::state_type StochasticSpecies___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticSpecies___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticSpecies___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ctor
plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatch___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_competition
double StochasticPatch___FF16__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__add_seed
bool StochasticPatch___FF16__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__add_seed(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__add_seedling
void StochasticPatch___FF16__FF16_Env__add_seedling(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__add_seedling(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___FF16__FF16_Env__add_seedling(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_environment
void StochasticPatch___FF16__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__compute_rates
void StochasticPatch___FF16__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__reset
void StochasticPatch___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__set_ode_state
void StochasticPatch___FF16__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___FF16__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__derivs
plant::ode::state_type StochasticPatch___FF16__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__set_state
void StochasticPatch___FF16__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___FF16__FF16_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__deaths
std::vector<size_t> StochasticPatch___FF16__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__time__get
double StochasticPatch___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__size__get
size_t StochasticPatch___FF16__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__height_max__get
double StochasticPatch___FF16__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatch___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__environment__get
plant::FF16_Environment StochasticPatch___FF16__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__species__get
std::vector<plant::StochasticSpecies<plant::FF16_Strategy,plant::FF16_Environment> > StochasticPatch___FF16__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_size__get
size_t StochasticPatch___FF16__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_time__get
double StochasticPatch___FF16__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_state__get
plant::ode::state_type StochasticPatch___FF16__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16__FF16_Env__ode_rates__get
plant::ode::state_type StochasticPatch___FF16__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ctor
plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatch___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_competition
double StochasticPatch___FF16r__FF16_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__add_seed
bool StochasticPatch___FF16r__FF16_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__add_seed(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__add_seedling
void StochasticPatch___FF16r__FF16_Env__add_seedling(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__add_seedling(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___FF16r__FF16_Env__add_seedling(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_environment
void StochasticPatch___FF16r__FF16_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__compute_rates
void StochasticPatch___FF16r__FF16_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__reset
void StochasticPatch___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__set_ode_state
void StochasticPatch___FF16r__FF16_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___FF16r__FF16_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__derivs
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__set_state
void StochasticPatch___FF16r__FF16_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___FF16r__FF16_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__deaths
std::vector<size_t> StochasticPatch___FF16r__FF16_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__time__get
double StochasticPatch___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__size__get
size_t StochasticPatch___FF16r__FF16_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__height_max__get
double StochasticPatch___FF16r__FF16_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatch___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__environment__get
plant::FF16_Environment StochasticPatch___FF16r__FF16_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__species__get
std::vector<plant::StochasticSpecies<plant::FF16r_Strategy,plant::FF16_Environment> > StochasticPatch___FF16r__FF16_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_size__get
size_t StochasticPatch___FF16r__FF16_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_time__get
double StochasticPatch___FF16r__FF16_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_state__get
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___FF16r__FF16_Env__ode_rates__get
plant::ode::state_type StochasticPatch___FF16r__FF16_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___FF16r__FF16_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ctor
plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> StochasticPatch___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_competition
double StochasticPatch___K93__K93_Env__compute_competition(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, double height);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_competition(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__compute_competition(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__add_seed
bool StochasticPatch___K93__K93_Env__add_seed(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__add_seed(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__add_seed(obj_, species_index));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__add_seedling
void StochasticPatch___K93__K93_Env__add_seedling(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::util::index species_index);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__add_seedling(SEXP obj_SEXP, SEXP species_indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type species_index(species_indexSEXP);
    StochasticPatch___K93__K93_Env__add_seedling(obj_, species_index);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_environment
void StochasticPatch___K93__K93_Env__compute_environment(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_environment(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__compute_environment(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__compute_rates
void StochasticPatch___K93__K93_Env__compute_rates(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__compute_rates(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__compute_rates(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__reset
void StochasticPatch___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatch___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__set_ode_state
void StochasticPatch___K93__K93_Env__set_ode_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::ode::state_type values, double time);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__set_ode_state(SEXP obj_SEXP, SEXP valuesSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::ode::state_type >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    StochasticPatch___K93__K93_Env__set_ode_state(obj_, values, time);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__derivs
plant::ode::state_type StochasticPatch___K93__K93_Env__derivs(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, const plant::ode::state_type& y, double time);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__derivs(SEXP obj_SEXP, SEXP ySEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< const plant::ode::state_type& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__derivs(obj_, y, time));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__set_state
void StochasticPatch___K93__K93_Env__set_state(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_, double time, const std::vector<double>& state, const std::vector<size_t>& n);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__set_state(SEXP obj_SEXP, SEXP timeSEXP, SEXP stateSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type state(stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<size_t>& >::type n(nSEXP);
    StochasticPatch___K93__K93_Env__set_state(obj_, time, state, n);
    return R_NilValue;
END_RCPP
}
// StochasticPatch___K93__K93_Env__deaths
std::vector<size_t> StochasticPatch___K93__K93_Env__deaths(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__deaths(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__deaths(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__time__get
double StochasticPatch___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__size__get
size_t StochasticPatch___K93__K93_Env__size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__height_max__get
double StochasticPatch___K93__K93_Env__height_max__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__height_max__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__height_max__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> StochasticPatch___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__environment__get
plant::K93_Environment StochasticPatch___K93__K93_Env__environment__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__environment__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__environment__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__species__get
std::vector<plant::StochasticSpecies<plant::K93_Strategy,plant::K93_Environment> > StochasticPatch___K93__K93_Env__species__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__species__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__species__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_size__get
size_t StochasticPatch___K93__K93_Env__ode_size__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_size__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_size__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_time__get
double StochasticPatch___K93__K93_Env__ode_time__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_state__get
plant::ode::state_type StochasticPatch___K93__K93_Env__ode_state__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatch___K93__K93_Env__ode_rates__get
plant::ode::state_type StochasticPatch___K93__K93_Env__ode_rates__get(plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatch___K93__K93_Env__ode_rates__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatch___K93__K93_Env__ode_rates__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__ctor
plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__ctor(plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__run
void StochasticPatchRunner___FF16__FF16_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__run_next
plant::util::index StochasticPatchRunner___FF16__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__reset
void StochasticPatchRunner___FF16__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__set_schedule_times
void StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___FF16__FF16_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__complete__get
bool StochasticPatchRunner___FF16__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__time__get
double StochasticPatchRunner___FF16__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__parameters__get
plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__patch__get
plant::StochasticPatch<plant::FF16_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__schedule__get
plant::CohortSchedule StochasticPatchRunner___FF16__FF16_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__schedule__set
void StochasticPatchRunner___FF16__FF16_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    StochasticPatchRunner___FF16__FF16_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16__FF16_Env__state__get
Rcpp::List StochasticPatchRunner___FF16__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__ctor
plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__ctor(plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> parameters);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__run
void StochasticPatchRunner___FF16r__FF16_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16r__FF16_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__run_next
plant::util::index StochasticPatchRunner___FF16r__FF16_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__reset
void StochasticPatchRunner___FF16r__FF16_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___FF16r__FF16_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times
void StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__complete__get
bool StochasticPatchRunner___FF16r__FF16_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__time__get
double StochasticPatchRunner___FF16r__FF16_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__parameters__get
plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__patch__get
plant::StochasticPatch<plant::FF16r_Strategy,plant::FF16_Environment> StochasticPatchRunner___FF16r__FF16_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__schedule__get
plant::CohortSchedule StochasticPatchRunner___FF16r__FF16_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__schedule__set
void StochasticPatchRunner___FF16r__FF16_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    StochasticPatchRunner___FF16r__FF16_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___FF16r__FF16_Env__state__get
Rcpp::List StochasticPatchRunner___FF16r__FF16_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___FF16r__FF16_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::FF16r_Strategy,plant::FF16_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___FF16r__FF16_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__ctor
plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__ctor(plant::Parameters<plant::K93_Strategy,plant::K93_Environment> parameters);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__ctor(SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Parameters<plant::K93_Strategy,plant::K93_Environment> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__ctor(parameters));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__run
void StochasticPatchRunner___K93__K93_Env__run(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__run(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___K93__K93_Env__run(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__run_next
plant::util::index StochasticPatchRunner___K93__K93_Env__run_next(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__run_next(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__run_next(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__reset
void StochasticPatchRunner___K93__K93_Env__reset(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__reset(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    StochasticPatchRunner___K93__K93_Env__reset(obj_);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__set_schedule_times
void StochasticPatchRunner___K93__K93_Env__set_schedule_times(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, std::vector<std::vector<double> > times);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times(SEXP obj_SEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::vector<std::vector<double> > >::type times(timesSEXP);
    StochasticPatchRunner___K93__K93_Env__set_schedule_times(obj_, times);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__complete__get
bool StochasticPatchRunner___K93__K93_Env__complete__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__complete__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__complete__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__time__get
double StochasticPatchRunner___K93__K93_Env__time__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__parameters__get
plant::Parameters<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__parameters__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__parameters__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__parameters__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__patch__get
plant::StochasticPatch<plant::K93_Strategy,plant::K93_Environment> StochasticPatchRunner___K93__K93_Env__patch__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__patch__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__patch__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__schedule__get
plant::CohortSchedule StochasticPatchRunner___K93__K93_Env__schedule__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__schedule__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__schedule__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__schedule__set
void StochasticPatchRunner___K93__K93_Env__schedule__set(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_, plant::CohortSchedule value);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__schedule__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::CohortSchedule >::type value(valueSEXP);
    StochasticPatchRunner___K93__K93_Env__schedule__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// StochasticPatchRunner___K93__K93_Env__state__get
Rcpp::List StochasticPatchRunner___K93__K93_Env__state__get(plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > obj_);
RcppExport SEXP _plant_StochasticPatchRunner___K93__K93_Env__state__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::StochasticPatchRunner<plant::K93_Strategy,plant::K93_Environment> > >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(StochasticPatchRunner___K93__K93_Env__state__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__ctor
plant::Canopy Canopy__ctor(plant::Control control);
RcppExport SEXP _plant_Canopy__ctor(SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__ctor(control));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__canopy_openness
double Canopy__canopy_openness(plant::RcppR6::RcppR6<plant::Canopy> obj_, double height);
RcppExport SEXP _plant_Canopy__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__clear
void Canopy__clear(plant::RcppR6::RcppR6<plant::Canopy> obj_);
RcppExport SEXP _plant_Canopy__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Canopy__clear(obj_);
    return R_NilValue;
END_RCPP
}
// Canopy__canopy_interpolator__get
plant::interpolator::Interpolator Canopy__canopy_interpolator__get(plant::RcppR6::RcppR6<plant::Canopy> obj_);
RcppExport SEXP _plant_Canopy__canopy_interpolator__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(Canopy__canopy_interpolator__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// Canopy__canopy_interpolator__set
void Canopy__canopy_interpolator__set(plant::RcppR6::RcppR6<plant::Canopy> obj_, plant::interpolator::Interpolator value);
RcppExport SEXP _plant_Canopy__canopy_interpolator__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::Canopy> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::interpolator::Interpolator >::type value(valueSEXP);
    Canopy__canopy_interpolator__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16_Strategy__ctor
SEXP FF16_Strategy__ctor();
RcppExport SEXP _plant_FF16_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FF16_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__ctor
plant::FF16_Environment FF16_Environment__ctor(double disturbance_mean_interval, std::vector<double> seed_rain, plant::Control control);
RcppExport SEXP _plant_FF16_Environment__ctor(SEXP disturbance_mean_intervalSEXP, SEXP seed_rainSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type disturbance_mean_interval(disturbance_mean_intervalSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type seed_rain(seed_rainSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__ctor(disturbance_mean_interval, seed_rain, control));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__canopy_openness
double FF16_Environment__canopy_openness(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double height);
RcppExport SEXP _plant_FF16_Environment__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__patch_survival_conditional
double FF16_Environment__patch_survival_conditional(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double time_at_birth);
RcppExport SEXP _plant_FF16_Environment__patch_survival_conditional(SEXP obj_SEXP, SEXP time_at_birthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time_at_birth(time_at_birthSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__patch_survival_conditional(obj_, time_at_birth));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__clear
void FF16_Environment__clear(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    FF16_Environment__clear(obj_);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__set_seed_rain_index
void FF16_Environment__set_seed_rain_index(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, plant::util::index x);
RcppExport SEXP _plant_FF16_Environment__set_seed_rain_index(SEXP obj_SEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type x(xSEXP);
    FF16_Environment__set_seed_rain_index(obj_, x);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__set_fixed_environment
void FF16_Environment__set_fixed_environment(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double value, double height_max);
RcppExport SEXP _plant_FF16_Environment__set_fixed_environment(SEXP obj_SEXP, SEXP valueSEXP, SEXP height_maxSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< double >::type height_max(height_maxSEXP);
    FF16_Environment__set_fixed_environment(obj_, value, height_max);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__patch_survival__get
double FF16_Environment__patch_survival__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__patch_survival__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__patch_survival__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__seed_rain_dt__get
double FF16_Environment__seed_rain_dt__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__seed_rain_dt__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__seed_rain_dt__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__disturbance_regime__get
plant::Disturbance FF16_Environment__disturbance_regime__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__disturbance_regime__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__disturbance_regime__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__disturbance_regime__set
void FF16_Environment__disturbance_regime__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, plant::Disturbance value);
RcppExport SEXP _plant_FF16_Environment__disturbance_regime__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Disturbance >::type value(valueSEXP);
    FF16_Environment__disturbance_regime__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__time__get
double FF16_Environment__time__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__time__set
void FF16_Environment__time__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, double value);
RcppExport SEXP _plant_FF16_Environment__time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    FF16_Environment__time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16_Environment__canopy__get
plant::Canopy FF16_Environment__canopy__get(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_);
RcppExport SEXP _plant_FF16_Environment__canopy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_Environment__canopy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// FF16_Environment__canopy__set
void FF16_Environment__canopy__set(plant::RcppR6::RcppR6<plant::FF16_Environment> obj_, plant::Canopy value);
RcppExport SEXP _plant_FF16_Environment__canopy__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::FF16_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Canopy >::type value(valueSEXP);
    FF16_Environment__canopy__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// FF16r_Strategy__ctor
SEXP FF16r_Strategy__ctor();
RcppExport SEXP _plant_FF16r_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FF16r_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// K93_Strategy__ctor
SEXP K93_Strategy__ctor();
RcppExport SEXP _plant_K93_Strategy__ctor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(K93_Strategy__ctor());
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__ctor
plant::K93_Environment K93_Environment__ctor(double disturbance_mean_interval, std::vector<double> seed_rain, plant::Control control);
RcppExport SEXP _plant_K93_Environment__ctor(SEXP disturbance_mean_intervalSEXP, SEXP seed_rainSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type disturbance_mean_interval(disturbance_mean_intervalSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type seed_rain(seed_rainSEXP);
    Rcpp::traits::input_parameter< plant::Control >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__ctor(disturbance_mean_interval, seed_rain, control));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__canopy_openness
double K93_Environment__canopy_openness(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double height);
RcppExport SEXP _plant_K93_Environment__canopy_openness(SEXP obj_SEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__canopy_openness(obj_, height));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__patch_survival_conditional
double K93_Environment__patch_survival_conditional(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double time_at_birth);
RcppExport SEXP _plant_K93_Environment__patch_survival_conditional(SEXP obj_SEXP, SEXP time_at_birthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type time_at_birth(time_at_birthSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__patch_survival_conditional(obj_, time_at_birth));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__clear
void K93_Environment__clear(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__clear(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    K93_Environment__clear(obj_);
    return R_NilValue;
END_RCPP
}
// K93_Environment__set_seed_rain_index
void K93_Environment__set_seed_rain_index(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, plant::util::index x);
RcppExport SEXP _plant_K93_Environment__set_seed_rain_index(SEXP obj_SEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::util::index >::type x(xSEXP);
    K93_Environment__set_seed_rain_index(obj_, x);
    return R_NilValue;
END_RCPP
}
// K93_Environment__set_fixed_environment
void K93_Environment__set_fixed_environment(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double value, double height_max);
RcppExport SEXP _plant_K93_Environment__set_fixed_environment(SEXP obj_SEXP, SEXP valueSEXP, SEXP height_maxSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< double >::type height_max(height_maxSEXP);
    K93_Environment__set_fixed_environment(obj_, value, height_max);
    return R_NilValue;
END_RCPP
}
// K93_Environment__patch_survival__get
double K93_Environment__patch_survival__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__patch_survival__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__patch_survival__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__seed_rain_dt__get
double K93_Environment__seed_rain_dt__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__seed_rain_dt__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__seed_rain_dt__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__disturbance_regime__get
plant::Disturbance K93_Environment__disturbance_regime__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__disturbance_regime__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__disturbance_regime__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__disturbance_regime__set
void K93_Environment__disturbance_regime__set(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, plant::Disturbance value);
RcppExport SEXP _plant_K93_Environment__disturbance_regime__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Disturbance >::type value(valueSEXP);
    K93_Environment__disturbance_regime__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// K93_Environment__time__get
double K93_Environment__time__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__time__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__time__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__time__set
void K93_Environment__time__set(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, double value);
RcppExport SEXP _plant_K93_Environment__time__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    K93_Environment__time__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// K93_Environment__canopy__get
plant::Canopy K93_Environment__canopy__get(plant::RcppR6::RcppR6<plant::K93_Environment> obj_);
RcppExport SEXP _plant_K93_Environment__canopy__get(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(K93_Environment__canopy__get(obj_));
    return rcpp_result_gen;
END_RCPP
}
// K93_Environment__canopy__set
void K93_Environment__canopy__set(plant::RcppR6::RcppR6<plant::K93_Environment> obj_, plant::Canopy value);
RcppExport SEXP _plant_K93_Environment__canopy__set(SEXP obj_SEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< plant::RcppR6::RcppR6<plant::K93_Environment> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< plant::Canopy >::type value(valueSEXP);
    K93_Environment__canopy__set(obj_, value);
    return R_NilValue;
END_RCPP
}
// test_adaptive_interpolator
plant::interpolator::Interpolator test_adaptive_interpolator(Rcpp::Function f, double a, double b);
RcppExport SEXP _plant_test_adaptive_interpolator(SEXP fSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_adaptive_interpolator(f, a, b));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_max_time_default__Parameters___FF16__FF16_Env
double cohort_schedule_max_time_default__Parameters___FF16__FF16_Env(const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_max_time_default__Parameters___FF16__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_max_time_default__Parameters___FF16__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_default__Parameters___FF16__FF16_Env
plant::CohortSchedule cohort_schedule_default__Parameters___FF16__FF16_Env(const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_default__Parameters___FF16__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_default__Parameters___FF16__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_cohort_schedule__Parameters___FF16__FF16_Env
plant::CohortSchedule make_cohort_schedule__Parameters___FF16__FF16_Env(const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_make_cohort_schedule__Parameters___FF16__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_cohort_schedule__Parameters___FF16__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env
double cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env(const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_default__Parameters___FF16r__FF16_Env
plant::CohortSchedule cohort_schedule_default__Parameters___FF16r__FF16_Env(const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_default__Parameters___FF16r__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_default__Parameters___FF16r__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_cohort_schedule__Parameters___FF16r__FF16_Env
plant::CohortSchedule make_cohort_schedule__Parameters___FF16r__FF16_Env(const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& p);
RcppExport SEXP _plant_make_cohort_schedule__Parameters___FF16r__FF16_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::FF16r_Strategy,plant::FF16_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_cohort_schedule__Parameters___FF16r__FF16_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// test_gradient_fd1
double test_gradient_fd1(Rcpp::Function f, double x, double dx, int direction, double fx);
RcppExport SEXP _plant_test_gradient_fd1(SEXP fSEXP, SEXP xSEXP, SEXP dxSEXP, SEXP directionSEXP, SEXP fxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type dx(dxSEXP);
    Rcpp::traits::input_parameter< int >::type direction(directionSEXP);
    Rcpp::traits::input_parameter< double >::type fx(fxSEXP);
    rcpp_result_gen = Rcpp::wrap(test_gradient_fd1(f, x, dx, direction, fx));
    return rcpp_result_gen;
END_RCPP
}
// test_gradient_richardson
double test_gradient_richardson(Rcpp::Function f, double x, double d, size_t r);
RcppExport SEXP _plant_test_gradient_richardson(SEXP fSEXP, SEXP xSEXP, SEXP dSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< size_t >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(test_gradient_richardson(f, x, d, r));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_max_time_default__Parameters___K93__K93_Env
double cohort_schedule_max_time_default__Parameters___K93__K93_Env(const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_max_time_default__Parameters___K93__K93_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_max_time_default__Parameters___K93__K93_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_default__Parameters___K93__K93_Env
plant::CohortSchedule cohort_schedule_default__Parameters___K93__K93_Env(const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& p);
RcppExport SEXP _plant_cohort_schedule_default__Parameters___K93__K93_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_default__Parameters___K93__K93_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// make_cohort_schedule__Parameters___K93__K93_Env
plant::CohortSchedule make_cohort_schedule__Parameters___K93__K93_Env(const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& p);
RcppExport SEXP _plant_make_cohort_schedule__Parameters___K93__K93_Env(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::Parameters<plant::K93_Strategy,plant::K93_Environment>& >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(make_cohort_schedule__Parameters___K93__K93_Env(p));
    return rcpp_result_gen;
END_RCPP
}
// FF16_oderunner_plant_internals
plant::Internals FF16_oderunner_plant_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment>>& obj);
RcppExport SEXP _plant_FF16_oderunner_plant_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16_Strategy,plant::FF16_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16_oderunner_plant_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// FF16r_oderunner_plant_internals
plant::Internals FF16r_oderunner_plant_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment>>& obj);
RcppExport SEXP _plant_FF16r_oderunner_plant_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::FF16r_Strategy, plant::FF16_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(FF16r_oderunner_plant_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// K93_oderunner_plant_internals
plant::Internals K93_oderunner_plant_internals(const plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment>>& obj);
RcppExport SEXP _plant_K93_oderunner_plant_internals(SEXP objSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const plant::ode::Runner<plant::tools::IndividualRunner<plant::K93_Strategy, plant::K93_Environment>>& >::type obj(objSEXP);
    rcpp_result_gen = Rcpp::wrap(K93_oderunner_plant_internals(obj));
    return rcpp_result_gen;
END_RCPP
}
// cohort_schedule_times_default
std::vector<double> cohort_schedule_times_default(double max_time);
RcppExport SEXP _plant_cohort_schedule_times_default(SEXP max_timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    rcpp_result_gen = Rcpp::wrap(cohort_schedule_times_default(max_time));
    return rcpp_result_gen;
END_RCPP
}
// test_uniroot
double test_uniroot(Rcpp::Function f, double min, double max);
RcppExport SEXP _plant_test_uniroot(SEXP fSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(test_uniroot(f, min, max));
    return rcpp_result_gen;
END_RCPP
}
// trapezium
double trapezium(const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_trapezium(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapezium(x, y));
    return rcpp_result_gen;
END_RCPP
}
// trapezium_vector
std::vector<double> trapezium_vector(const std::vector<double>& x, const std::vector<double>& y);
RcppExport SEXP _plant_trapezium_vector(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapezium_vector(x, y));
    return rcpp_result_gen;
END_RCPP
}
// local_error_integration
std::vector<double> local_error_integration(const std::vector<double>& x, const std::vector<double>& y, double scal);
RcppExport SEXP _plant_local_error_integration(SEXP xSEXP, SEXP ySEXP, SEXP scalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type scal(scalSEXP);
    rcpp_result_gen = Rcpp::wrap(local_error_integration(x, y, scal));
    return rcpp_result_gen;
END_RCPP
}
// matrix_to_list
Rcpp::List matrix_to_list(Rcpp::NumericMatrix x);
RcppExport SEXP _plant_matrix_to_list(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_to_list(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_plant_Lorenz__ctor", (DL_FUNC) &_plant_Lorenz__ctor, 3},
    {"_plant_Lorenz__ode_size__get", (DL_FUNC) &_plant_Lorenz__ode_size__get, 1},
    {"_plant_Lorenz__ode_state__get", (DL_FUNC) &_plant_Lorenz__ode_state__get, 1},
    {"_plant_Lorenz__ode_state__set", (DL_FUNC) &_plant_Lorenz__ode_state__set, 2},
    {"_plant_Lorenz__ode_rates__get", (DL_FUNC) &_plant_Lorenz__ode_rates__get, 1},
    {"_plant_Lorenz__pars__get", (DL_FUNC) &_plant_Lorenz__pars__get, 1},
    {"_plant_OdeR__ctor", (DL_FUNC) &_plant_OdeR__ctor, 3},
    {"_plant_OdeR__update_state", (DL_FUNC) &_plant_OdeR__update_state, 1},
    {"_plant_OdeRunner___Lorenz__ctor", (DL_FUNC) &_plant_OdeRunner___Lorenz__ctor, 2},
    {"_plant_OdeRunner___Lorenz__advance", (DL_FUNC) &_plant_OdeRunner___Lorenz__advance, 2},
    {"_plant_OdeRunner___Lorenz__advance_fixed", (DL_FUNC) &_plant_OdeRunner___Lorenz__advance_fixed, 2},
    {"_plant_OdeRunner___Lorenz__step", (DL_FUNC) &_plant_OdeRunner___Lorenz__step, 1},
    {"_plant_OdeRunner___Lorenz__step_to", (DL_FUNC) &_plant_OdeRunner___Lorenz__step_to, 2},
    {"_plant_OdeRunner___Lorenz__set_state", (DL_FUNC) &_plant_OdeRunner___Lorenz__set_state, 3},
    {"_plant_OdeRunner___Lorenz__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___Lorenz__set_state_from_system, 1},
    {"_plant_OdeRunner___Lorenz__time__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__time__get, 1},
    {"_plant_OdeRunner___Lorenz__state__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__state__get, 1},
    {"_plant_OdeRunner___Lorenz__times__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__times__get, 1},
    {"_plant_OdeRunner___Lorenz__object__get", (DL_FUNC) &_plant_OdeRunner___Lorenz__object__get, 1},
    {"_plant_OdeRunner___OdeR__ctor", (DL_FUNC) &_plant_OdeRunner___OdeR__ctor, 2},
    {"_plant_OdeRunner___OdeR__advance", (DL_FUNC) &_plant_OdeRunner___OdeR__advance, 2},
    {"_plant_OdeRunner___OdeR__advance_fixed", (DL_FUNC) &_plant_OdeRunner___OdeR__advance_fixed, 2},
    {"_plant_OdeRunner___OdeR__step", (DL_FUNC) &_plant_OdeRunner___OdeR__step, 1},
    {"_plant_OdeRunner___OdeR__step_to", (DL_FUNC) &_plant_OdeRunner___OdeR__step_to, 2},
    {"_plant_OdeRunner___OdeR__set_state", (DL_FUNC) &_plant_OdeRunner___OdeR__set_state, 3},
    {"_plant_OdeRunner___OdeR__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___OdeR__set_state_from_system, 1},
    {"_plant_OdeRunner___OdeR__time__get", (DL_FUNC) &_plant_OdeRunner___OdeR__time__get, 1},
    {"_plant_OdeRunner___OdeR__state__get", (DL_FUNC) &_plant_OdeRunner___OdeR__state__get, 1},
    {"_plant_OdeRunner___OdeR__times__get", (DL_FUNC) &_plant_OdeRunner___OdeR__times__get, 1},
    {"_plant_OdeRunner___OdeR__object__get", (DL_FUNC) &_plant_OdeRunner___OdeR__object__get, 1},
    {"_plant_OdeRunner___FF16__ctor", (DL_FUNC) &_plant_OdeRunner___FF16__ctor, 2},
    {"_plant_OdeRunner___FF16__advance", (DL_FUNC) &_plant_OdeRunner___FF16__advance, 2},
    {"_plant_OdeRunner___FF16__advance_fixed", (DL_FUNC) &_plant_OdeRunner___FF16__advance_fixed, 2},
    {"_plant_OdeRunner___FF16__step", (DL_FUNC) &_plant_OdeRunner___FF16__step, 1},
    {"_plant_OdeRunner___FF16__step_to", (DL_FUNC) &_plant_OdeRunner___FF16__step_to, 2},
    {"_plant_OdeRunner___FF16__set_state", (DL_FUNC) &_plant_OdeRunner___FF16__set_state, 3},
    {"_plant_OdeRunner___FF16__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___FF16__set_state_from_system, 1},
    {"_plant_OdeRunner___FF16__time__get", (DL_FUNC) &_plant_OdeRunner___FF16__time__get, 1},
    {"_plant_OdeRunner___FF16__state__get", (DL_FUNC) &_plant_OdeRunner___FF16__state__get, 1},
    {"_plant_OdeRunner___FF16__times__get", (DL_FUNC) &_plant_OdeRunner___FF16__times__get, 1},
    {"_plant_OdeRunner___FF16__object__get", (DL_FUNC) &_plant_OdeRunner___FF16__object__get, 1},
    {"_plant_OdeRunner___FF16r__ctor", (DL_FUNC) &_plant_OdeRunner___FF16r__ctor, 2},
    {"_plant_OdeRunner___FF16r__advance", (DL_FUNC) &_plant_OdeRunner___FF16r__advance, 2},
    {"_plant_OdeRunner___FF16r__advance_fixed", (DL_FUNC) &_plant_OdeRunner___FF16r__advance_fixed, 2},
    {"_plant_OdeRunner___FF16r__step", (DL_FUNC) &_plant_OdeRunner___FF16r__step, 1},
    {"_plant_OdeRunner___FF16r__step_to", (DL_FUNC) &_plant_OdeRunner___FF16r__step_to, 2},
    {"_plant_OdeRunner___FF16r__set_state", (DL_FUNC) &_plant_OdeRunner___FF16r__set_state, 3},
    {"_plant_OdeRunner___FF16r__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___FF16r__set_state_from_system, 1},
    {"_plant_OdeRunner___FF16r__time__get", (DL_FUNC) &_plant_OdeRunner___FF16r__time__get, 1},
    {"_plant_OdeRunner___FF16r__state__get", (DL_FUNC) &_plant_OdeRunner___FF16r__state__get, 1},
    {"_plant_OdeRunner___FF16r__times__get", (DL_FUNC) &_plant_OdeRunner___FF16r__times__get, 1},
    {"_plant_OdeRunner___FF16r__object__get", (DL_FUNC) &_plant_OdeRunner___FF16r__object__get, 1},
    {"_plant_OdeRunner___K93__ctor", (DL_FUNC) &_plant_OdeRunner___K93__ctor, 2},
    {"_plant_OdeRunner___K93__advance", (DL_FUNC) &_plant_OdeRunner___K93__advance, 2},
    {"_plant_OdeRunner___K93__advance_fixed", (DL_FUNC) &_plant_OdeRunner___K93__advance_fixed, 2},
    {"_plant_OdeRunner___K93__step", (DL_FUNC) &_plant_OdeRunner___K93__step, 1},
    {"_plant_OdeRunner___K93__step_to", (DL_FUNC) &_plant_OdeRunner___K93__step_to, 2},
    {"_plant_OdeRunner___K93__set_state", (DL_FUNC) &_plant_OdeRunner___K93__set_state, 3},
    {"_plant_OdeRunner___K93__set_state_from_system", (DL_FUNC) &_plant_OdeRunner___K93__set_state_from_system, 1},
    {"_plant_OdeRunner___K93__time__get", (DL_FUNC) &_plant_OdeRunner___K93__time__get, 1},
    {"_plant_OdeRunner___K93__state__get", (DL_FUNC) &_plant_OdeRunner___K93__state__get, 1},
    {"_plant_OdeRunner___K93__times__get", (DL_FUNC) &_plant_OdeRunner___K93__times__get, 1},
    {"_plant_OdeRunner___K93__object__get", (DL_FUNC) &_plant_OdeRunner___K93__object__get, 1},
    {"_plant_CohortScheduleEvent__ctor", (DL_FUNC) &_plant_CohortScheduleEvent__ctor, 2},
    {"_plant_CohortScheduleEvent__species_index__get", (DL_FUNC) &_plant_CohortScheduleEvent__species_index__get, 1},
    {"_plant_CohortScheduleEvent__species_index__set", (DL_FUNC) &_plant_CohortScheduleEvent__species_index__set, 2},
    {"_plant_CohortScheduleEvent__times__get", (DL_FUNC) &_plant_CohortScheduleEvent__times__get, 1},
    {"_plant_CohortScheduleEvent__time_introduction__get", (DL_FUNC) &_plant_CohortScheduleEvent__time_introduction__get, 1},
    {"_plant_CohortScheduleEvent__time_end__get", (DL_FUNC) &_plant_CohortScheduleEvent__time_end__get, 1},
    {"_plant_CohortScheduleEvent__species_index_raw__get", (DL_FUNC) &_plant_CohortScheduleEvent__species_index_raw__get, 1},
    {"_plant_CohortSchedule__ctor", (DL_FUNC) &_plant_CohortSchedule__ctor, 1},
    {"_plant_CohortSchedule__expand", (DL_FUNC) &_plant_CohortSchedule__expand, 3},
    {"_plant_CohortSchedule__clear_times", (DL_FUNC) &_plant_CohortSchedule__clear_times, 2},
    {"_plant_CohortSchedule__clear_ode_times", (DL_FUNC) &_plant_CohortSchedule__clear_ode_times, 1},
    {"_plant_CohortSchedule__set_times", (DL_FUNC) &_plant_CohortSchedule__set_times, 3},
    {"_plant_CohortSchedule__times", (DL_FUNC) &_plant_CohortSchedule__times, 2},
    {"_plant_CohortSchedule__reset", (DL_FUNC) &_plant_CohortSchedule__reset, 1},
    {"_plant_CohortSchedule__pop", (DL_FUNC) &_plant_CohortSchedule__pop, 1},
    {"_plant_CohortSchedule__copy", (DL_FUNC) &_plant_CohortSchedule__copy, 1},
    {"_plant_CohortSchedule__size__get", (DL_FUNC) &_plant_CohortSchedule__size__get, 1},
    {"_plant_CohortSchedule__n_species__get", (DL_FUNC) &_plant_CohortSchedule__n_species__get, 1},
    {"_plant_CohortSchedule__next_event__get", (DL_FUNC) &_plant_CohortSchedule__next_event__get, 1},
    {"_plant_CohortSchedule__remaining__get", (DL_FUNC) &_plant_CohortSchedule__remaining__get, 1},
    {"_plant_CohortSchedule__max_time__get", (DL_FUNC) &_plant_CohortSchedule__max_time__get, 1},
    {"_plant_CohortSchedule__max_time__set", (DL_FUNC) &_plant_CohortSchedule__max_time__set, 2},
    {"_plant_CohortSchedule__ode_times__get", (DL_FUNC) &_plant_CohortSchedule__ode_times__get, 1},
    {"_plant_CohortSchedule__ode_times__set", (DL_FUNC) &_plant_CohortSchedule__ode_times__set, 2},
    {"_plant_CohortSchedule__use_ode_times__get", (DL_FUNC) &_plant_CohortSchedule__use_ode_times__get, 1},
    {"_plant_CohortSchedule__use_ode_times__set", (DL_FUNC) &_plant_CohortSchedule__use_ode_times__set, 2},
    {"_plant_CohortSchedule__all_times__get", (DL_FUNC) &_plant_CohortSchedule__all_times__get, 1},
    {"_plant_CohortSchedule__all_times__set", (DL_FUNC) &_plant_CohortSchedule__all_times__set, 2},
    {"_plant_Disturbance__ctor", (DL_FUNC) &_plant_Disturbance__ctor, 1},
    {"_plant_Disturbance__density", (DL_FUNC) &_plant_Disturbance__density, 2},
    {"_plant_Disturbance__pr_survival", (DL_FUNC) &_plant_Disturbance__pr_survival, 2},
    {"_plant_Disturbance__pr_survival_conditional", (DL_FUNC) &_plant_Disturbance__pr_survival_conditional, 3},
    {"_plant_Disturbance__cdf", (DL_FUNC) &_plant_Disturbance__cdf, 2},
    {"_plant_Disturbance__mean_interval__get", (DL_FUNC) &_plant_Disturbance__mean_interval__get, 1},
    {"_plant_Control__ctor", (DL_FUNC) &_plant_Control__ctor, 0},
    {"_plant_OdeControl__ctor", (DL_FUNC) &_plant_OdeControl__ctor, 0},
    {"_plant_QK__ctor", (DL_FUNC) &_plant_QK__ctor, 1},
    {"_plant_QK__integrate", (DL_FUNC) &_plant_QK__integrate, 4},
    {"_plant_QK__integrate_vector_x", (DL_FUNC) &_plant_QK__integrate_vector_x, 3},
    {"_plant_QK__integrate_vector", (DL_FUNC) &_plant_QK__integrate_vector, 4},
    {"_plant_QK__last_area__get", (DL_FUNC) &_plant_QK__last_area__get, 1},
    {"_plant_QK__last_error__get", (DL_FUNC) &_plant_QK__last_error__get, 1},
    {"_plant_QK__last_area_abs__get", (DL_FUNC) &_plant_QK__last_area_abs__get, 1},
    {"_plant_QK__last_area_asc__get", (DL_FUNC) &_plant_QK__last_area_asc__get, 1},
    {"_plant_QAG__ctor", (DL_FUNC) &_plant_QAG__ctor, 4},
    {"_plant_QAG__integrate", (DL_FUNC) &_plant_QAG__integrate, 4},
    {"_plant_QAG__integrate_with_intervals", (DL_FUNC) &_plant_QAG__integrate_with_intervals, 3},
    {"_plant_QAG__integrate_with_last_intervals", (DL_FUNC) &_plant_QAG__integrate_with_last_intervals, 4},
    {"_plant_QAG__last_area__get", (DL_FUNC) &_plant_QAG__last_area__get, 1},
    {"_plant_QAG__last_error__get", (DL_FUNC) &_plant_QAG__last_error__get, 1},
    {"_plant_QAG__last_iterations__get", (DL_FUNC) &_plant_QAG__last_iterations__get, 1},
    {"_plant_QAG__last_intervals__get", (DL_FUNC) &_plant_QAG__last_intervals__get, 1},
    {"_plant_QAG__is_adaptive__get", (DL_FUNC) &_plant_QAG__is_adaptive__get, 1},
    {"_plant_Interpolator__ctor", (DL_FUNC) &_plant_Interpolator__ctor, 0},
    {"_plant_Interpolator__init", (DL_FUNC) &_plant_Interpolator__init, 3},
    {"_plant_Interpolator__eval", (DL_FUNC) &_plant_Interpolator__eval, 2},
    {"_plant_Interpolator__x__get", (DL_FUNC) &_plant_Interpolator__x__get, 1},
    {"_plant_Interpolator__y__get", (DL_FUNC) &_plant_Interpolator__y__get, 1},
    {"_plant_Interpolator__xy__get", (DL_FUNC) &_plant_Interpolator__xy__get, 1},
    {"_plant_Interpolator__size__get", (DL_FUNC) &_plant_Interpolator__size__get, 1},
    {"_plant_Interpolator__min__get", (DL_FUNC) &_plant_Interpolator__min__get, 1},
    {"_plant_Interpolator__max__get", (DL_FUNC) &_plant_Interpolator__max__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ctor, 1},
    {"_plant_Individual___FF16__FF16_Env__state", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__state, 2},
    {"_plant_Individual___FF16__FF16_Env__rate", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__rate, 2},
    {"_plant_Individual___FF16__FF16_Env__aux", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux, 2},
    {"_plant_Individual___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__set_state, 3},
    {"_plant_Individual___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Individual___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__compute_rates, 2},
    {"_plant_Individual___FF16__FF16_Env__establishment_probability", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__establishment_probability, 2},
    {"_plant_Individual___FF16__FF16_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__net_mass_production_dt, 2},
    {"_plant_Individual___FF16__FF16_Env__reset_mortality", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__reset_mortality, 1},
    {"_plant_Individual___FF16__FF16_Env__lcp_whole_plant", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__lcp_whole_plant, 1},
    {"_plant_Individual___FF16__FF16_Env__strategy__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__strategy__get, 1},
    {"_plant_Individual___FF16__FF16_Env__internals__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__internals__get, 1},
    {"_plant_Individual___FF16__FF16_Env__aux_size__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux_size__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_names__get, 1},
    {"_plant_Individual___FF16__FF16_Env__aux_names__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__aux_names__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Individual___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Individual___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Individual___FF16__FF16_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__mortality_probability__get, 1},
    {"_plant_Individual___FF16__FF16_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___FF16__FF16_Env__strategy_name__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ctor, 1},
    {"_plant_Individual___FF16r__FF16_Env__state", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__state, 2},
    {"_plant_Individual___FF16r__FF16_Env__rate", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__rate, 2},
    {"_plant_Individual___FF16r__FF16_Env__aux", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux, 2},
    {"_plant_Individual___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__set_state, 3},
    {"_plant_Individual___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Individual___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_Individual___FF16r__FF16_Env__establishment_probability", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__establishment_probability, 2},
    {"_plant_Individual___FF16r__FF16_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__net_mass_production_dt, 2},
    {"_plant_Individual___FF16r__FF16_Env__reset_mortality", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__reset_mortality, 1},
    {"_plant_Individual___FF16r__FF16_Env__lcp_whole_plant", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__lcp_whole_plant, 1},
    {"_plant_Individual___FF16r__FF16_Env__strategy__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__strategy__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__internals__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__internals__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__aux_size__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux_size__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_names__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__aux_names__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__aux_names__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Individual___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__mortality_probability__get, 1},
    {"_plant_Individual___FF16r__FF16_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___FF16r__FF16_Env__strategy_name__get, 1},
    {"_plant_Individual___K93__K93_Env__ctor", (DL_FUNC) &_plant_Individual___K93__K93_Env__ctor, 1},
    {"_plant_Individual___K93__K93_Env__state", (DL_FUNC) &_plant_Individual___K93__K93_Env__state, 2},
    {"_plant_Individual___K93__K93_Env__rate", (DL_FUNC) &_plant_Individual___K93__K93_Env__rate, 2},
    {"_plant_Individual___K93__K93_Env__aux", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux, 2},
    {"_plant_Individual___K93__K93_Env__set_state", (DL_FUNC) &_plant_Individual___K93__K93_Env__set_state, 3},
    {"_plant_Individual___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Individual___K93__K93_Env__compute_competition, 2},
    {"_plant_Individual___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Individual___K93__K93_Env__compute_rates, 2},
    {"_plant_Individual___K93__K93_Env__establishment_probability", (DL_FUNC) &_plant_Individual___K93__K93_Env__establishment_probability, 2},
    {"_plant_Individual___K93__K93_Env__net_mass_production_dt", (DL_FUNC) &_plant_Individual___K93__K93_Env__net_mass_production_dt, 2},
    {"_plant_Individual___K93__K93_Env__reset_mortality", (DL_FUNC) &_plant_Individual___K93__K93_Env__reset_mortality, 1},
    {"_plant_Individual___K93__K93_Env__lcp_whole_plant", (DL_FUNC) &_plant_Individual___K93__K93_Env__lcp_whole_plant, 1},
    {"_plant_Individual___K93__K93_Env__strategy__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__strategy__get, 1},
    {"_plant_Individual___K93__K93_Env__internals__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__internals__get, 1},
    {"_plant_Individual___K93__K93_Env__aux_size__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux_size__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_size__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_names__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_names__get, 1},
    {"_plant_Individual___K93__K93_Env__aux_names__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__aux_names__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_state__get, 1},
    {"_plant_Individual___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_state__set, 2},
    {"_plant_Individual___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Individual___K93__K93_Env__mortality_probability__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__mortality_probability__get, 1},
    {"_plant_Individual___K93__K93_Env__strategy_name__get", (DL_FUNC) &_plant_Individual___K93__K93_Env__strategy_name__get, 1},
    {"_plant_IndividualRunner___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__ctor, 2},
    {"_plant_IndividualRunner___FF16__FF16_Env__plant__get", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__plant__get, 1},
    {"_plant_IndividualRunner___FF16__FF16_Env__plant__set", (DL_FUNC) &_plant_IndividualRunner___FF16__FF16_Env__plant__set, 2},
    {"_plant_IndividualRunner___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__ctor, 2},
    {"_plant_IndividualRunner___FF16r__FF16_Env__plant__get", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__plant__get, 1},
    {"_plant_IndividualRunner___FF16r__FF16_Env__plant__set", (DL_FUNC) &_plant_IndividualRunner___FF16r__FF16_Env__plant__set, 2},
    {"_plant_IndividualRunner___K93__K93_Env__ctor", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__ctor, 2},
    {"_plant_IndividualRunner___K93__K93_Env__plant__get", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__plant__get, 1},
    {"_plant_IndividualRunner___K93__K93_Env__plant__set", (DL_FUNC) &_plant_IndividualRunner___K93__K93_Env__plant__set, 2},
    {"_plant_Internals__ctor", (DL_FUNC) &_plant_Internals__ctor, 2},
    {"_plant_Internals__state", (DL_FUNC) &_plant_Internals__state, 2},
    {"_plant_Internals__rate", (DL_FUNC) &_plant_Internals__rate, 2},
    {"_plant_Internals__aux", (DL_FUNC) &_plant_Internals__aux, 2},
    {"_plant_Internals__set_aux", (DL_FUNC) &_plant_Internals__set_aux, 3},
    {"_plant_Internals__set_state", (DL_FUNC) &_plant_Internals__set_state, 3},
    {"_plant_Internals__set_rate", (DL_FUNC) &_plant_Internals__set_rate, 3},
    {"_plant_Internals__resize", (DL_FUNC) &_plant_Internals__resize, 3},
    {"_plant_Internals__state_size__get", (DL_FUNC) &_plant_Internals__state_size__get, 1},
    {"_plant_Internals__state_size__set", (DL_FUNC) &_plant_Internals__state_size__set, 2},
    {"_plant_Internals__aux_size__get", (DL_FUNC) &_plant_Internals__aux_size__get, 1},
    {"_plant_Internals__aux_size__set", (DL_FUNC) &_plant_Internals__aux_size__set, 2},
    {"_plant_Internals__states__get", (DL_FUNC) &_plant_Internals__states__get, 1},
    {"_plant_Internals__states__set", (DL_FUNC) &_plant_Internals__states__set, 2},
    {"_plant_Internals__rates__get", (DL_FUNC) &_plant_Internals__rates__get, 1},
    {"_plant_Internals__rates__set", (DL_FUNC) &_plant_Internals__rates__set, 2},
    {"_plant_Internals__auxs__get", (DL_FUNC) &_plant_Internals__auxs__get, 1},
    {"_plant_Internals__auxs__set", (DL_FUNC) &_plant_Internals__auxs__set, 2},
    {"_plant_Parameters___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Parameters___FF16__FF16_Env__ctor, 0},
    {"_plant_Parameters___FF16__FF16_Env__vdor", (DL_FUNC) &_plant_Parameters___FF16__FF16_Env__vdor, 1},
    {"_plant_Parameters___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Parameters___FF16r__FF16_Env__ctor, 0},
    {"_plant_Parameters___FF16r__FF16_Env__vdor", (DL_FUNC) &_plant_Parameters___FF16r__FF16_Env__vdor, 1},
    {"_plant_Parameters___K93__K93_Env__ctor", (DL_FUNC) &_plant_Parameters___K93__K93_Env__ctor, 0},
    {"_plant_Parameters___K93__K93_Env__vdor", (DL_FUNC) &_plant_Parameters___K93__K93_Env__vdor, 1},
    {"_plant_Cohort___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ctor, 1},
    {"_plant_Cohort___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Cohort___FF16__FF16_Env__growth_rate_gradient", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__growth_rate_gradient, 2},
    {"_plant_Cohort___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__compute_rates, 2},
    {"_plant_Cohort___FF16__FF16_Env__compute_initial_conditions", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__compute_initial_conditions, 2},
    {"_plant_Cohort___FF16__FF16_Env__plant__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__plant__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__height__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__height__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__log_density__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__log_density__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__competition_effect__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__competition_effect__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__fecundity__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__fecundity__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Cohort___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Cohort___FF16__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Cohort___FF16__FF16_Env__ode_names__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ctor, 1},
    {"_plant_Cohort___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Cohort___FF16r__FF16_Env__growth_rate_gradient", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__growth_rate_gradient, 2},
    {"_plant_Cohort___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_Cohort___FF16r__FF16_Env__compute_initial_conditions", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__compute_initial_conditions, 2},
    {"_plant_Cohort___FF16r__FF16_Env__plant__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__plant__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__height__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__height__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__log_density__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__log_density__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__competition_effect__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__competition_effect__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__fecundity__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__fecundity__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Cohort___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Cohort___FF16r__FF16_Env__ode_names__get", (DL_FUNC) &_plant_Cohort___FF16r__FF16_Env__ode_names__get, 1},
    {"_plant_Cohort___K93__K93_Env__ctor", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ctor, 1},
    {"_plant_Cohort___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Cohort___K93__K93_Env__compute_competition, 2},
    {"_plant_Cohort___K93__K93_Env__growth_rate_gradient", (DL_FUNC) &_plant_Cohort___K93__K93_Env__growth_rate_gradient, 2},
    {"_plant_Cohort___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Cohort___K93__K93_Env__compute_rates, 2},
    {"_plant_Cohort___K93__K93_Env__compute_initial_conditions", (DL_FUNC) &_plant_Cohort___K93__K93_Env__compute_initial_conditions, 2},
    {"_plant_Cohort___K93__K93_Env__plant__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__plant__get, 1},
    {"_plant_Cohort___K93__K93_Env__height__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__height__get, 1},
    {"_plant_Cohort___K93__K93_Env__log_density__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__log_density__get, 1},
    {"_plant_Cohort___K93__K93_Env__competition_effect__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__competition_effect__get, 1},
    {"_plant_Cohort___K93__K93_Env__fecundity__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__fecundity__get, 1},
    {"_plant_Cohort___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ode_size__get, 1},
    {"_plant_Cohort___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ode_state__get, 1},
    {"_plant_Cohort___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ode_state__set, 2},
    {"_plant_Cohort___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Cohort___K93__K93_Env__ode_names__get", (DL_FUNC) &_plant_Cohort___K93__K93_Env__ode_names__get, 1},
    {"_plant_Species___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ctor, 1},
    {"_plant_Species___FF16__FF16_Env__clear", (DL_FUNC) &_plant_Species___FF16__FF16_Env__clear, 1},
    {"_plant_Species___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Species___FF16__FF16_Env__compute_rates, 2},
    {"_plant_Species___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Species___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Species___FF16__FF16_Env__add_seed", (DL_FUNC) &_plant_Species___FF16__FF16_Env__add_seed, 1},
    {"_plant_Species___FF16__FF16_Env__cohort_at", (DL_FUNC) &_plant_Species___FF16__FF16_Env__cohort_at, 2},
    {"_plant_Species___FF16__FF16_Env__competition_effects_error", (DL_FUNC) &_plant_Species___FF16__FF16_Env__competition_effects_error, 2},
    {"_plant_Species___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__size__get, 1},
    {"_plant_Species___FF16__FF16_Env__seed__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__seed__get, 1},
    {"_plant_Species___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__height_max__get, 1},
    {"_plant_Species___FF16__FF16_Env__heights__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__heights__get, 1},
    {"_plant_Species___FF16__FF16_Env__heights__set", (DL_FUNC) &_plant_Species___FF16__FF16_Env__heights__set, 2},
    {"_plant_Species___FF16__FF16_Env__log_densities__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__log_densities__get, 1},
    {"_plant_Species___FF16__FF16_Env__cohorts__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__cohorts__get, 1},
    {"_plant_Species___FF16__FF16_Env__seeds__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__seeds__get, 1},
    {"_plant_Species___FF16__FF16_Env__competition_effects__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__competition_effects__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Species___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_Species___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Species___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ctor, 1},
    {"_plant_Species___FF16r__FF16_Env__clear", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__clear, 1},
    {"_plant_Species___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_Species___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Species___FF16r__FF16_Env__add_seed", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__add_seed, 1},
    {"_plant_Species___FF16r__FF16_Env__cohort_at", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__cohort_at, 2},
    {"_plant_Species___FF16r__FF16_Env__competition_effects_error", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__competition_effects_error, 2},
    {"_plant_Species___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__size__get, 1},
    {"_plant_Species___FF16r__FF16_Env__seed__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__seed__get, 1},
    {"_plant_Species___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_Species___FF16r__FF16_Env__heights__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__heights__get, 1},
    {"_plant_Species___FF16r__FF16_Env__heights__set", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__heights__set, 2},
    {"_plant_Species___FF16r__FF16_Env__log_densities__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__log_densities__get, 1},
    {"_plant_Species___FF16r__FF16_Env__cohorts__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__cohorts__get, 1},
    {"_plant_Species___FF16r__FF16_Env__seeds__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__seeds__get, 1},
    {"_plant_Species___FF16r__FF16_Env__competition_effects__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__competition_effects__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Species___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_Species___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Species___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Species___K93__K93_Env__ctor", (DL_FUNC) &_plant_Species___K93__K93_Env__ctor, 1},
    {"_plant_Species___K93__K93_Env__clear", (DL_FUNC) &_plant_Species___K93__K93_Env__clear, 1},
    {"_plant_Species___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Species___K93__K93_Env__compute_rates, 2},
    {"_plant_Species___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Species___K93__K93_Env__compute_competition, 2},
    {"_plant_Species___K93__K93_Env__add_seed", (DL_FUNC) &_plant_Species___K93__K93_Env__add_seed, 1},
    {"_plant_Species___K93__K93_Env__cohort_at", (DL_FUNC) &_plant_Species___K93__K93_Env__cohort_at, 2},
    {"_plant_Species___K93__K93_Env__competition_effects_error", (DL_FUNC) &_plant_Species___K93__K93_Env__competition_effects_error, 2},
    {"_plant_Species___K93__K93_Env__size__get", (DL_FUNC) &_plant_Species___K93__K93_Env__size__get, 1},
    {"_plant_Species___K93__K93_Env__seed__get", (DL_FUNC) &_plant_Species___K93__K93_Env__seed__get, 1},
    {"_plant_Species___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_Species___K93__K93_Env__height_max__get, 1},
    {"_plant_Species___K93__K93_Env__heights__get", (DL_FUNC) &_plant_Species___K93__K93_Env__heights__get, 1},
    {"_plant_Species___K93__K93_Env__heights__set", (DL_FUNC) &_plant_Species___K93__K93_Env__heights__set, 2},
    {"_plant_Species___K93__K93_Env__log_densities__get", (DL_FUNC) &_plant_Species___K93__K93_Env__log_densities__get, 1},
    {"_plant_Species___K93__K93_Env__cohorts__get", (DL_FUNC) &_plant_Species___K93__K93_Env__cohorts__get, 1},
    {"_plant_Species___K93__K93_Env__seeds__get", (DL_FUNC) &_plant_Species___K93__K93_Env__seeds__get, 1},
    {"_plant_Species___K93__K93_Env__competition_effects__get", (DL_FUNC) &_plant_Species___K93__K93_Env__competition_effects__get, 1},
    {"_plant_Species___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_size__get, 1},
    {"_plant_Species___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_state__get, 1},
    {"_plant_Species___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_state__set, 2},
    {"_plant_Species___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Species___K93__K93_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ctor, 1},
    {"_plant_Patch___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_competition, 2},
    {"_plant_Patch___FF16__FF16_Env__add_seed", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__add_seed, 2},
    {"_plant_Patch___FF16__FF16_Env__compute_environment", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_environment, 1},
    {"_plant_Patch___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__compute_rates, 1},
    {"_plant_Patch___FF16__FF16_Env__reset", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__reset, 1},
    {"_plant_Patch___FF16__FF16_Env__set_ode_state", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__set_ode_state, 3},
    {"_plant_Patch___FF16__FF16_Env__derivs", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__derivs, 3},
    {"_plant_Patch___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__set_state, 5},
    {"_plant_Patch___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__time__get, 1},
    {"_plant_Patch___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__size__get, 1},
    {"_plant_Patch___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__height_max__get, 1},
    {"_plant_Patch___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__parameters__get, 1},
    {"_plant_Patch___FF16__FF16_Env__environment__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__environment__get, 1},
    {"_plant_Patch___FF16__FF16_Env__species__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__species__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_time__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_time__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_Patch___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ctor, 1},
    {"_plant_Patch___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_Patch___FF16r__FF16_Env__add_seed", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__add_seed, 2},
    {"_plant_Patch___FF16r__FF16_Env__compute_environment", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_environment, 1},
    {"_plant_Patch___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__compute_rates, 1},
    {"_plant_Patch___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__reset, 1},
    {"_plant_Patch___FF16r__FF16_Env__set_ode_state", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__set_ode_state, 3},
    {"_plant_Patch___FF16r__FF16_Env__derivs", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__derivs, 3},
    {"_plant_Patch___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__set_state, 5},
    {"_plant_Patch___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__time__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__size__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__environment__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__environment__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__species__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__species__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_time__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_time__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_Patch___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_Patch___K93__K93_Env__ctor", (DL_FUNC) &_plant_Patch___K93__K93_Env__ctor, 1},
    {"_plant_Patch___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_competition, 2},
    {"_plant_Patch___K93__K93_Env__add_seed", (DL_FUNC) &_plant_Patch___K93__K93_Env__add_seed, 2},
    {"_plant_Patch___K93__K93_Env__compute_environment", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_environment, 1},
    {"_plant_Patch___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_Patch___K93__K93_Env__compute_rates, 1},
    {"_plant_Patch___K93__K93_Env__reset", (DL_FUNC) &_plant_Patch___K93__K93_Env__reset, 1},
    {"_plant_Patch___K93__K93_Env__set_ode_state", (DL_FUNC) &_plant_Patch___K93__K93_Env__set_ode_state, 3},
    {"_plant_Patch___K93__K93_Env__derivs", (DL_FUNC) &_plant_Patch___K93__K93_Env__derivs, 3},
    {"_plant_Patch___K93__K93_Env__set_state", (DL_FUNC) &_plant_Patch___K93__K93_Env__set_state, 5},
    {"_plant_Patch___K93__K93_Env__time__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__time__get, 1},
    {"_plant_Patch___K93__K93_Env__size__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__size__get, 1},
    {"_plant_Patch___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__height_max__get, 1},
    {"_plant_Patch___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__parameters__get, 1},
    {"_plant_Patch___K93__K93_Env__environment__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__environment__get, 1},
    {"_plant_Patch___K93__K93_Env__species__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__species__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_size__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_time__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_time__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_state__get, 1},
    {"_plant_Patch___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_Patch___K93__K93_Env__ode_rates__get, 1},
    {"_plant_SCM___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__ctor, 1},
    {"_plant_SCM___FF16__FF16_Env__run", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__run, 1},
    {"_plant_SCM___FF16__FF16_Env__run_next", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__run_next, 1},
    {"_plant_SCM___FF16__FF16_Env__reset", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__reset, 1},
    {"_plant_SCM___FF16__FF16_Env__seed_rain", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__seed_rain, 2},
    {"_plant_SCM___FF16__FF16_Env__seed_rain_cohort", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__seed_rain_cohort, 2},
    {"_plant_SCM___FF16__FF16_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__competition_effect_error, 2},
    {"_plant_SCM___FF16__FF16_Env__set_cohort_schedule_times", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__set_cohort_schedule_times, 2},
    {"_plant_SCM___FF16__FF16_Env__complete__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__complete__get, 1},
    {"_plant_SCM___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__time__get, 1},
    {"_plant_SCM___FF16__FF16_Env__seed_rains__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__seed_rains__get, 1},
    {"_plant_SCM___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__parameters__get, 1},
    {"_plant_SCM___FF16__FF16_Env__patch__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__patch__get, 1},
    {"_plant_SCM___FF16__FF16_Env__cohort_schedule__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__cohort_schedule__get, 1},
    {"_plant_SCM___FF16__FF16_Env__cohort_schedule__set", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__cohort_schedule__set, 2},
    {"_plant_SCM___FF16__FF16_Env__ode_times__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__ode_times__get, 1},
    {"_plant_SCM___FF16__FF16_Env__state__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__state__get, 1},
    {"_plant_SCM___FF16__FF16_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__use_ode_times__get, 1},
    {"_plant_SCM___FF16__FF16_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__use_ode_times__set, 2},
    {"_plant_SCM___FF16__FF16_Env__seed_rain_error__get", (DL_FUNC) &_plant_SCM___FF16__FF16_Env__seed_rain_error__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__ctor, 1},
    {"_plant_SCM___FF16r__FF16_Env__run", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__run, 1},
    {"_plant_SCM___FF16r__FF16_Env__run_next", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__run_next, 1},
    {"_plant_SCM___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__reset, 1},
    {"_plant_SCM___FF16r__FF16_Env__seed_rain", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__seed_rain, 2},
    {"_plant_SCM___FF16r__FF16_Env__seed_rain_cohort", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__seed_rain_cohort, 2},
    {"_plant_SCM___FF16r__FF16_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__competition_effect_error, 2},
    {"_plant_SCM___FF16r__FF16_Env__set_cohort_schedule_times", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__set_cohort_schedule_times, 2},
    {"_plant_SCM___FF16r__FF16_Env__complete__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__complete__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__time__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__seed_rains__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__seed_rains__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__patch__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__patch__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__cohort_schedule__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__cohort_schedule__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__cohort_schedule__set", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__cohort_schedule__set, 2},
    {"_plant_SCM___FF16r__FF16_Env__ode_times__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__ode_times__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__state__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__state__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__use_ode_times__get, 1},
    {"_plant_SCM___FF16r__FF16_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__use_ode_times__set, 2},
    {"_plant_SCM___FF16r__FF16_Env__seed_rain_error__get", (DL_FUNC) &_plant_SCM___FF16r__FF16_Env__seed_rain_error__get, 1},
    {"_plant_SCM___K93__K93_Env__ctor", (DL_FUNC) &_plant_SCM___K93__K93_Env__ctor, 1},
    {"_plant_SCM___K93__K93_Env__run", (DL_FUNC) &_plant_SCM___K93__K93_Env__run, 1},
    {"_plant_SCM___K93__K93_Env__run_next", (DL_FUNC) &_plant_SCM___K93__K93_Env__run_next, 1},
    {"_plant_SCM___K93__K93_Env__reset", (DL_FUNC) &_plant_SCM___K93__K93_Env__reset, 1},
    {"_plant_SCM___K93__K93_Env__seed_rain", (DL_FUNC) &_plant_SCM___K93__K93_Env__seed_rain, 2},
    {"_plant_SCM___K93__K93_Env__seed_rain_cohort", (DL_FUNC) &_plant_SCM___K93__K93_Env__seed_rain_cohort, 2},
    {"_plant_SCM___K93__K93_Env__competition_effect_error", (DL_FUNC) &_plant_SCM___K93__K93_Env__competition_effect_error, 2},
    {"_plant_SCM___K93__K93_Env__set_cohort_schedule_times", (DL_FUNC) &_plant_SCM___K93__K93_Env__set_cohort_schedule_times, 2},
    {"_plant_SCM___K93__K93_Env__complete__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__complete__get, 1},
    {"_plant_SCM___K93__K93_Env__time__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__time__get, 1},
    {"_plant_SCM___K93__K93_Env__seed_rains__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__seed_rains__get, 1},
    {"_plant_SCM___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__parameters__get, 1},
    {"_plant_SCM___K93__K93_Env__patch__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__patch__get, 1},
    {"_plant_SCM___K93__K93_Env__cohort_schedule__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__cohort_schedule__get, 1},
    {"_plant_SCM___K93__K93_Env__cohort_schedule__set", (DL_FUNC) &_plant_SCM___K93__K93_Env__cohort_schedule__set, 2},
    {"_plant_SCM___K93__K93_Env__ode_times__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__ode_times__get, 1},
    {"_plant_SCM___K93__K93_Env__state__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__state__get, 1},
    {"_plant_SCM___K93__K93_Env__use_ode_times__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__use_ode_times__get, 1},
    {"_plant_SCM___K93__K93_Env__use_ode_times__set", (DL_FUNC) &_plant_SCM___K93__K93_Env__use_ode_times__set, 2},
    {"_plant_SCM___K93__K93_Env__seed_rain_error__get", (DL_FUNC) &_plant_SCM___K93__K93_Env__seed_rain_error__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ctor, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__clear, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__add_seed", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__add_seed, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__plant_at", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__plant_at, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__deaths, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__size__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__size_plants__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__size_plants__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__seed__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__seed__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__heights__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__heights__set, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__plants__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__plants__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__seeds__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__seeds__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ctor, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__clear, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__add_seed", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__add_seed, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__plant_at", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__plant_at, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__deaths, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__size__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__size_plants__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__size_plants__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__seed__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__seed__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__heights__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__heights__set, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__plants__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__plants__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__seeds__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__seeds__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ctor, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__clear", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__clear, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__compute_rates, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__compute_competition, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__add_seed", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__add_seed, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__plant_at", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__plant_at, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__deaths", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__deaths, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__establishment_probability", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__establishment_probability, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__size__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__size__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__size_plants__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__size_plants__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__seed__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__seed__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__height_max__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__heights__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__heights__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__heights__set", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__heights__set, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__plants__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__plants__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__is_alive__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__is_alive__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__seeds__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__seeds__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_size__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_state__get, 1},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_state__set", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_state__set, 2},
    {"_plant_StochasticSpecies___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticSpecies___K93__K93_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ctor, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_competition, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__add_seed", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__add_seed, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__add_seedling", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__add_seedling, 2},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_environment, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__compute_rates, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__reset, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___FF16__FF16_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__derivs, 3},
    {"_plant_StochasticPatch___FF16__FF16_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__set_state, 4},
    {"_plant_StochasticPatch___FF16__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__deaths, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__time__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__size__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__height_max__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__environment__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__species__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___FF16__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___FF16__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ctor, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_competition, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__add_seed", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__add_seed, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__add_seedling", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__add_seedling, 2},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_environment, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__compute_rates, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__reset, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___FF16r__FF16_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__derivs, 3},
    {"_plant_StochasticPatch___FF16r__FF16_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__set_state, 4},
    {"_plant_StochasticPatch___FF16r__FF16_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__deaths, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__time__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__size__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__height_max__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__environment__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__species__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___FF16r__FF16_Env__ode_rates__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ctor, 1},
    {"_plant_StochasticPatch___K93__K93_Env__compute_competition", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_competition, 2},
    {"_plant_StochasticPatch___K93__K93_Env__add_seed", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__add_seed, 2},
    {"_plant_StochasticPatch___K93__K93_Env__add_seedling", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__add_seedling, 2},
    {"_plant_StochasticPatch___K93__K93_Env__compute_environment", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_environment, 1},
    {"_plant_StochasticPatch___K93__K93_Env__compute_rates", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__compute_rates, 1},
    {"_plant_StochasticPatch___K93__K93_Env__reset", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__reset, 1},
    {"_plant_StochasticPatch___K93__K93_Env__set_ode_state", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__set_ode_state, 3},
    {"_plant_StochasticPatch___K93__K93_Env__derivs", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__derivs, 3},
    {"_plant_StochasticPatch___K93__K93_Env__set_state", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__set_state, 4},
    {"_plant_StochasticPatch___K93__K93_Env__deaths", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__deaths, 1},
    {"_plant_StochasticPatch___K93__K93_Env__time__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__time__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__size__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__size__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__height_max__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__height_max__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__parameters__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__environment__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__environment__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__species__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__species__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_size__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_size__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_time__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_time__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_state__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_state__get, 1},
    {"_plant_StochasticPatch___K93__K93_Env__ode_rates__get", (DL_FUNC) &_plant_StochasticPatch___K93__K93_Env__ode_rates__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__ctor, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__run, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__reset, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___FF16__FF16_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16__FF16_Env__state__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__ctor, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__run, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__reset, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___FF16r__FF16_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___FF16r__FF16_Env__state__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__ctor", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__ctor, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__run", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__run, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__run_next", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__run_next, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__reset", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__reset, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__set_schedule_times, 2},
    {"_plant_StochasticPatchRunner___K93__K93_Env__complete__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__complete__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__time__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__time__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__parameters__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__parameters__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__patch__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__patch__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__schedule__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__schedule__get, 1},
    {"_plant_StochasticPatchRunner___K93__K93_Env__schedule__set", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__schedule__set, 2},
    {"_plant_StochasticPatchRunner___K93__K93_Env__state__get", (DL_FUNC) &_plant_StochasticPatchRunner___K93__K93_Env__state__get, 1},
    {"_plant_Canopy__ctor", (DL_FUNC) &_plant_Canopy__ctor, 1},
    {"_plant_Canopy__canopy_openness", (DL_FUNC) &_plant_Canopy__canopy_openness, 2},
    {"_plant_Canopy__clear", (DL_FUNC) &_plant_Canopy__clear, 1},
    {"_plant_Canopy__canopy_interpolator__get", (DL_FUNC) &_plant_Canopy__canopy_interpolator__get, 1},
    {"_plant_Canopy__canopy_interpolator__set", (DL_FUNC) &_plant_Canopy__canopy_interpolator__set, 2},
    {"_plant_FF16_Strategy__ctor", (DL_FUNC) &_plant_FF16_Strategy__ctor, 0},
    {"_plant_FF16_Environment__ctor", (DL_FUNC) &_plant_FF16_Environment__ctor, 3},
    {"_plant_FF16_Environment__canopy_openness", (DL_FUNC) &_plant_FF16_Environment__canopy_openness, 2},
    {"_plant_FF16_Environment__patch_survival_conditional", (DL_FUNC) &_plant_FF16_Environment__patch_survival_conditional, 2},
    {"_plant_FF16_Environment__clear", (DL_FUNC) &_plant_FF16_Environment__clear, 1},
    {"_plant_FF16_Environment__set_seed_rain_index", (DL_FUNC) &_plant_FF16_Environment__set_seed_rain_index, 2},
    {"_plant_FF16_Environment__set_fixed_environment", (DL_FUNC) &_plant_FF16_Environment__set_fixed_environment, 3},
    {"_plant_FF16_Environment__patch_survival__get", (DL_FUNC) &_plant_FF16_Environment__patch_survival__get, 1},
    {"_plant_FF16_Environment__seed_rain_dt__get", (DL_FUNC) &_plant_FF16_Environment__seed_rain_dt__get, 1},
    {"_plant_FF16_Environment__disturbance_regime__get", (DL_FUNC) &_plant_FF16_Environment__disturbance_regime__get, 1},
    {"_plant_FF16_Environment__disturbance_regime__set", (DL_FUNC) &_plant_FF16_Environment__disturbance_regime__set, 2},
    {"_plant_FF16_Environment__time__get", (DL_FUNC) &_plant_FF16_Environment__time__get, 1},
    {"_plant_FF16_Environment__time__set", (DL_FUNC) &_plant_FF16_Environment__time__set, 2},
    {"_plant_FF16_Environment__canopy__get", (DL_FUNC) &_plant_FF16_Environment__canopy__get, 1},
    {"_plant_FF16_Environment__canopy__set", (DL_FUNC) &_plant_FF16_Environment__canopy__set, 2},
    {"_plant_FF16r_Strategy__ctor", (DL_FUNC) &_plant_FF16r_Strategy__ctor, 0},
    {"_plant_K93_Strategy__ctor", (DL_FUNC) &_plant_K93_Strategy__ctor, 0},
    {"_plant_K93_Environment__ctor", (DL_FUNC) &_plant_K93_Environment__ctor, 3},
    {"_plant_K93_Environment__canopy_openness", (DL_FUNC) &_plant_K93_Environment__canopy_openness, 2},
    {"_plant_K93_Environment__patch_survival_conditional", (DL_FUNC) &_plant_K93_Environment__patch_survival_conditional, 2},
    {"_plant_K93_Environment__clear", (DL_FUNC) &_plant_K93_Environment__clear, 1},
    {"_plant_K93_Environment__set_seed_rain_index", (DL_FUNC) &_plant_K93_Environment__set_seed_rain_index, 2},
    {"_plant_K93_Environment__set_fixed_environment", (DL_FUNC) &_plant_K93_Environment__set_fixed_environment, 3},
    {"_plant_K93_Environment__patch_survival__get", (DL_FUNC) &_plant_K93_Environment__patch_survival__get, 1},
    {"_plant_K93_Environment__seed_rain_dt__get", (DL_FUNC) &_plant_K93_Environment__seed_rain_dt__get, 1},
    {"_plant_K93_Environment__disturbance_regime__get", (DL_FUNC) &_plant_K93_Environment__disturbance_regime__get, 1},
    {"_plant_K93_Environment__disturbance_regime__set", (DL_FUNC) &_plant_K93_Environment__disturbance_regime__set, 2},
    {"_plant_K93_Environment__time__get", (DL_FUNC) &_plant_K93_Environment__time__get, 1},
    {"_plant_K93_Environment__time__set", (DL_FUNC) &_plant_K93_Environment__time__set, 2},
    {"_plant_K93_Environment__canopy__get", (DL_FUNC) &_plant_K93_Environment__canopy__get, 1},
    {"_plant_K93_Environment__canopy__set", (DL_FUNC) &_plant_K93_Environment__canopy__set, 2},
    {"_plant_test_adaptive_interpolator", (DL_FUNC) &_plant_test_adaptive_interpolator, 3},
    {"_plant_cohort_schedule_max_time_default__Parameters___FF16__FF16_Env", (DL_FUNC) &_plant_cohort_schedule_max_time_default__Parameters___FF16__FF16_Env, 1},
    {"_plant_cohort_schedule_default__Parameters___FF16__FF16_Env", (DL_FUNC) &_plant_cohort_schedule_default__Parameters___FF16__FF16_Env, 1},
    {"_plant_make_cohort_schedule__Parameters___FF16__FF16_Env", (DL_FUNC) &_plant_make_cohort_schedule__Parameters___FF16__FF16_Env, 1},
    {"_plant_cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env", (DL_FUNC) &_plant_cohort_schedule_max_time_default__Parameters___FF16r__FF16_Env, 1},
    {"_plant_cohort_schedule_default__Parameters___FF16r__FF16_Env", (DL_FUNC) &_plant_cohort_schedule_default__Parameters___FF16r__FF16_Env, 1},
    {"_plant_make_cohort_schedule__Parameters___FF16r__FF16_Env", (DL_FUNC) &_plant_make_cohort_schedule__Parameters___FF16r__FF16_Env, 1},
    {"_plant_test_gradient_fd1", (DL_FUNC) &_plant_test_gradient_fd1, 5},
    {"_plant_test_gradient_richardson", (DL_FUNC) &_plant_test_gradient_richardson, 4},
    {"_plant_cohort_schedule_max_time_default__Parameters___K93__K93_Env", (DL_FUNC) &_plant_cohort_schedule_max_time_default__Parameters___K93__K93_Env, 1},
    {"_plant_cohort_schedule_default__Parameters___K93__K93_Env", (DL_FUNC) &_plant_cohort_schedule_default__Parameters___K93__K93_Env, 1},
    {"_plant_make_cohort_schedule__Parameters___K93__K93_Env", (DL_FUNC) &_plant_make_cohort_schedule__Parameters___K93__K93_Env, 1},
    {"_plant_FF16_oderunner_plant_internals", (DL_FUNC) &_plant_FF16_oderunner_plant_internals, 1},
    {"_plant_FF16r_oderunner_plant_internals", (DL_FUNC) &_plant_FF16r_oderunner_plant_internals, 1},
    {"_plant_K93_oderunner_plant_internals", (DL_FUNC) &_plant_K93_oderunner_plant_internals, 1},
    {"_plant_cohort_schedule_times_default", (DL_FUNC) &_plant_cohort_schedule_times_default, 1},
    {"_plant_test_uniroot", (DL_FUNC) &_plant_test_uniroot, 3},
    {"_plant_trapezium", (DL_FUNC) &_plant_trapezium, 2},
    {"_plant_trapezium_vector", (DL_FUNC) &_plant_trapezium_vector, 2},
    {"_plant_local_error_integration", (DL_FUNC) &_plant_local_error_integration, 3},
    {"_plant_matrix_to_list", (DL_FUNC) &_plant_matrix_to_list, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_plant(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
